{
  "name": "Selection",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "Selection API",
      "url": "https://www.w3.org/TR/selection-api/"
    },
    "fragment": "[Exposed=Window]\ninterface Selection {\n  readonly attribute Node? anchorNode;\n  readonly attribute unsigned long anchorOffset;\n  readonly attribute Node? focusNode;\n  readonly attribute unsigned long focusOffset;\n  readonly attribute boolean isCollapsed;\n  readonly attribute unsigned long rangeCount;\n  readonly attribute DOMString type;\n  Range getRangeAt(unsigned long index);\n  undefined addRange(Range range);\n  undefined removeRange(Range range);\n  undefined removeAllRanges();\n  undefined empty();\n  undefined collapse(Node? node, optional unsigned long offset = 0);\n  undefined setPosition(Node? node, optional unsigned long offset = 0);\n  undefined collapseToStart();\n  undefined collapseToEnd();\n  undefined extend(Node node, optional unsigned long offset = 0);\n  undefined setBaseAndExtent(Node anchorNode, unsigned long anchorOffset, Node focusNode, unsigned long focusOffset);\n  undefined selectAllChildren(Node node);\n  undefined modify(optional DOMString alter, optional DOMString direction, optional DOMString granularity);\n  [CEReactions] undefined deleteFromDocument();\n  boolean containsNode(Node node, optional boolean allowPartialContainment = false);\n  stringifier;\n};",
    "href": "https://www.w3.org/TR/selection-api/#dom-selection"
  },
  "extended": [],
  "inheritance": null,
  "includes": []
}