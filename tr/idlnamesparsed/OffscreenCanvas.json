{
  "name": "OffscreenCanvas",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "HTML Standard",
      "url": "https://html.spec.whatwg.org/multipage/"
    },
    "fragment": "[Exposed=(Window,Worker), Transferable]\ninterface OffscreenCanvas : EventTarget {\n  constructor([EnforceRange] unsigned long long width, [EnforceRange] unsigned long long height);\n\n  attribute [EnforceRange] unsigned long long width;\n  attribute [EnforceRange] unsigned long long height;\n\n  OffscreenRenderingContext? getContext(OffscreenRenderingContextId contextId, optional any options = null);\n  ImageBitmap transferToImageBitmap();\n  Promise<Blob> convertToBlob(optional ImageEncodeOptions options = {});\n\n  attribute EventHandler oncontextlost;\n  attribute EventHandler oncontextrestored;\n};",
    "href": "https://html.spec.whatwg.org/multipage/canvas.html#offscreencanvas"
  },
  "extended": [],
  "inheritance": {
    "name": "EventTarget",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}