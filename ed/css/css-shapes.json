{
  "spec": {
    "title": "CSS Shapes Module Level 1",
    "url": "https://drafts.csswg.org/css-shapes/"
  },
  "properties": {
    "shape-outside": {
      "name": "shape-outside",
      "value": "none | [ <basic-shape> || <shape-box> ] | <image>",
      "initial": "none",
      "appliesTo": "floats",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "as defined for <basic-shape> (with <shape-box> following, if supplied); else the computed <image>; else the keyword as specified",
      "canonicalOrder": "per grammar",
      "animationType": "as defined for <basic-shape>, otherwise discrete",
      "styleDeclaration": [
        "shape-outside",
        "shapeOutside"
      ]
    },
    "shape-image-threshold": {
      "name": "shape-image-threshold",
      "value": "<alpha-value>",
      "initial": "0",
      "appliesTo": "floats",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified number, clamped to the range [0,1]",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "shape-image-threshold",
        "shapeImageThreshold"
      ]
    },
    "shape-margin": {
      "name": "shape-margin",
      "value": "<length-percentage>",
      "initial": "0",
      "appliesTo": "floats",
      "inherited": "no",
      "percentages": "refer to the inline size of the containing block",
      "computedValue": "computed <length-percentage> value",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value",
      "styleDeclaration": [
        "shape-margin",
        "shapeMargin"
      ]
    }
  },
  "descriptors": {},
  "valuespaces": {
    "<basic-shape>": {
      "prose": "The <basic-shape> type can be specified using basic shape functions. When using this syntax to define shapes, the reference box is defined by each property that uses <basic-shape> values. The coordinate system for the shape has its origin on the top-left corner of the reference box with the x-axis running to the right and the y-axis running downwards. All the lengths expressed in percentages are resolved from the used dimensions of the reference box."
    },
    "<inset()>": {
      "value": "inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )"
    },
    "<xywh()>": {
      "value": "xywh( <length-percentage>{2} <length-percentage [0,∞]>{2} [ round <'border-radius'> ]? )"
    },
    "<rect()>": {
      "value": "rect( [ <length-percentage> | auto ]{4} [ round <'border-radius'> ]? )"
    },
    "<circle()>": {
      "value": "circle( <shape-radius>? [ at <position> ]? )"
    },
    "<ellipse()>": {
      "value": "ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )"
    },
    "<polygon()>": {
      "value": "polygon( <'fill-rule'>? , [<length-percentage> <length-percentage>]# )"
    },
    "<path()>": {
      "value": "path( [<'fill-rule'>,]? <string> )"
    },
    "<shape-radius>": {
      "value": "<length-percentage [0,∞]> | closest-side | farthest-side"
    },
    "<basic-shape-rect>": {
      "value": "<inset()> | <rect()> | <xywh()>"
    },
    "<shape-box>": {
      "value": "<box> | margin-box"
    }
  }
}
