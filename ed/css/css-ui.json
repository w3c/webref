{
  "spec": {
    "title": "CSS Basic User Interface Module Level 4",
    "url": "https://drafts.csswg.org/css-ui-4/"
  },
  "properties": {
    "outline": {
      "name": "outline",
      "value": "[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]",
      "initial": "see individual properties",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar"
    },
    "outline-width": {
      "name": "outline-width",
      "value": "<line-width>",
      "initial": "medium",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length; 0 if the outline style is none.",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value"
    },
    "outline-style": {
      "name": "outline-style",
      "value": "auto | <outline-line-style>",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value"
    },
    "outline-color": {
      "name": "outline-color",
      "value": "<color> | invert",
      "initial": "invert",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "The computed value for invert is invert. For <color> values, see resolving color values in [CSS-COLOR-4].",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value"
    },
    "outline-offset": {
      "name": "outline-offset",
      "value": "<length>",
      "initial": "0",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "absolute length",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value"
    },
    "resize": {
      "name": "resize",
      "value": "none | both | horizontal | vertical",
      "initial": "none",
      "appliesTo": "elements with overflow other than visible, and optionally replaced elements such as images, videos, and iframes",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    },
    "cursor": {
      "name": "cursor",
      "value": "[ [<url> [<x> <y>]?,]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | grab | grabbing | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out ] ]",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "as specified, except with any relative URLs converted to absolute",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    },
    "caret-color": {
      "name": "caret-color",
      "value": "auto | <color>",
      "initial": "auto",
      "appliesTo": "all elements",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "The computed value for auto is auto. For <color> values, see resolving color values in [CSS-COLOR-4].",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value"
    },
    "caret-shape": {
      "name": "caret-shape",
      "value": "auto | bar | block | underscore",
      "initial": "auto",
      "appliesTo": "elements that accept input",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "by computed value"
    },
    "caret": {
      "name": "caret",
      "value": "<'caret-color'> || <'caret-shape'>",
      "initial": "auto",
      "appliesTo": "elements that accept input",
      "inherited": "yes",
      "percentages": "N/A",
      "computedValue": "see individual properties",
      "animationType": "see individual properties",
      "canonicalOrder": "per grammar"
    },
    "nav-up": {
      "name": "nav-up",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    },
    "nav-right": {
      "name": "nav-right",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    },
    "nav-down": {
      "name": "nav-down",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    },
    "nav-left": {
      "name": "nav-left",
      "value": "auto | <id> [ current | root | <target-name> ]?",
      "initial": "auto",
      "appliesTo": "all enabled elements",
      "inherited": "no",
      "percentages": "N/A",
      "computedValue": "as specified",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    },
    "user-select": {
      "name": "user-select",
      "value": "auto | text | none | contain | all",
      "initial": "auto",
      "appliesTo": "all elements, and optionally to the ::before and ::after pseudo elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "See below",
      "canonicalOrder": "per grammar",
      "animationType": "not animatable"
    },
    "appearance": {
      "name": "appearance",
      "value": "none | auto | button | textfield | menulist-button | <compat-auto>",
      "initial": "none",
      "appliesTo": "all elements",
      "inherited": "no",
      "percentages": "n/a",
      "computedValue": "specified keyword",
      "canonicalOrder": "per grammar",
      "animationType": "discrete"
    }
  },
  "descriptors": {},
  "valuespaces": {
    "<compat>": {
      "value": "searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar"
    },
    "<id>": {
      "prose": "The <id> value is an ID selector [SELECT]. In response to directional navigation input corresponding to the property, the focus is navigated to the first element in tree order matching the selector. If this refers to the currently focused element, the directional navigation input respective to the nav- property is ignored â€” there is no need to refocus the same element. If no element matches the selector, the user agent automatically determines which element to navigate the focus to. If the focus is navigated to an element that was not otherwise focusable, it becomes focusable only as the result of this directional navigation, and the :focus pseudo-class matches the element while it is focused as such. Note: there were other options under consideration for such \"not otherwise focusable\" elements, including focus to the next otherwise focusable element in the document tree (including descendants of such a not otherwise focusable element). Input on such other options is welcome and explicitly solicited, especially from implementation experiences and author experience using the directional navigation properties in their content."
    },
    "<target-name>": {
      "prose": "The <target-name> parameter indicates the target frame for the focus navigation. It is a <string> and it MUST NOT start with the underscore \"_\" character. Error handling: if it does start with an underscore, \"_parent\" navigates to the parent frame, \"_root\" is treated as root, and other values navigate to a frame by that name if it exists. If the specified target frame does not exist, the parameter will be treated as the keyword current, which means to simply use the frame that the element is in. The keyword root indicates that the user agent should target the full window."
    },
    "<compat-auto>": {
      "value": "<compat> = searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar"
    }
  }
}
