{
  "spec": {
    "title": "WebGPU",
    "url": "https://gpuweb.github.io/gpuweb/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "Window": [
          "GPUPipelineError",
          "GPUValidationError",
          "GPUOutOfMemoryError",
          "GPUInternalError",
          "GPUUncapturedErrorEvent"
        ],
        "Worker": [
          "GPUPipelineError",
          "GPUValidationError",
          "GPUOutOfMemoryError",
          "GPUInternalError",
          "GPUUncapturedErrorEvent"
        ]
      },
      "functions": {
        "Window": [
          "GPUSupportedLimits",
          "GPUSupportedFeatures",
          "WGSLLanguageFeatures",
          "GPUAdapterInfo",
          "GPU",
          "GPUAdapter",
          "GPUDevice",
          "GPUBuffer",
          "GPUTexture",
          "GPUTextureView",
          "GPUExternalTexture",
          "GPUSampler",
          "GPUBindGroupLayout",
          "GPUBindGroup",
          "GPUPipelineLayout",
          "GPUShaderModule",
          "GPUCompilationMessage",
          "GPUCompilationInfo",
          "GPUComputePipeline",
          "GPURenderPipeline",
          "GPUCommandBuffer",
          "GPUCommandEncoder",
          "GPUComputePassEncoder",
          "GPURenderPassEncoder",
          "GPURenderBundle",
          "GPURenderBundleEncoder",
          "GPUQueue",
          "GPUQuerySet",
          "GPUCanvasContext",
          "GPUDeviceLostInfo",
          "GPUError"
        ],
        "Worker": [
          "GPUSupportedLimits",
          "GPUSupportedFeatures",
          "WGSLLanguageFeatures",
          "GPUAdapterInfo",
          "GPU",
          "GPUAdapter",
          "GPUDevice",
          "GPUBuffer",
          "GPUTexture",
          "GPUTextureView",
          "GPUExternalTexture",
          "GPUSampler",
          "GPUBindGroupLayout",
          "GPUBindGroup",
          "GPUPipelineLayout",
          "GPUShaderModule",
          "GPUCompilationMessage",
          "GPUCompilationInfo",
          "GPUComputePipeline",
          "GPURenderPipeline",
          "GPUCommandBuffer",
          "GPUCommandEncoder",
          "GPUComputePassEncoder",
          "GPURenderPassEncoder",
          "GPURenderBundle",
          "GPURenderBundleEncoder",
          "GPUQueue",
          "GPUQuerySet",
          "GPUCanvasContext",
          "GPUDeviceLostInfo",
          "GPUError"
        ]
      }
    },
    "idlNames": {
      "GPUObjectBase": {
        "fragment": "interface mixin GPUObjectBase {\n    attribute USVString label;\n};",
        "type": "interface mixin",
        "name": "GPUObjectBase",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "label",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuobjectbase-label"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuobjectbase"
      },
      "GPUObjectDescriptorBase": {
        "fragment": "dictionary GPUObjectDescriptorBase {\n    USVString label = \"\";\n};",
        "type": "dictionary",
        "name": "GPUObjectDescriptorBase",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "label",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": {
              "type": "string",
              "value": ""
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuobjectdescriptorbase-label"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuobjectdescriptorbase"
      },
      "GPUSupportedLimits": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUSupportedLimits {\n    readonly attribute unsigned long maxTextureDimension1D;\n    readonly attribute unsigned long maxTextureDimension2D;\n    readonly attribute unsigned long maxTextureDimension3D;\n    readonly attribute unsigned long maxTextureArrayLayers;\n    readonly attribute unsigned long maxBindGroups;\n    readonly attribute unsigned long maxBindGroupsPlusVertexBuffers;\n    readonly attribute unsigned long maxBindingsPerBindGroup;\n    readonly attribute unsigned long maxDynamicUniformBuffersPerPipelineLayout;\n    readonly attribute unsigned long maxDynamicStorageBuffersPerPipelineLayout;\n    readonly attribute unsigned long maxSampledTexturesPerShaderStage;\n    readonly attribute unsigned long maxSamplersPerShaderStage;\n    readonly attribute unsigned long maxStorageBuffersPerShaderStage;\n    readonly attribute unsigned long maxStorageTexturesPerShaderStage;\n    readonly attribute unsigned long maxUniformBuffersPerShaderStage;\n    readonly attribute unsigned long long maxUniformBufferBindingSize;\n    readonly attribute unsigned long long maxStorageBufferBindingSize;\n    readonly attribute unsigned long minUniformBufferOffsetAlignment;\n    readonly attribute unsigned long minStorageBufferOffsetAlignment;\n    readonly attribute unsigned long maxVertexBuffers;\n    readonly attribute unsigned long long maxBufferSize;\n    readonly attribute unsigned long maxVertexAttributes;\n    readonly attribute unsigned long maxVertexBufferArrayStride;\n    readonly attribute unsigned long maxInterStageShaderVariables;\n    readonly attribute unsigned long maxColorAttachments;\n    readonly attribute unsigned long maxColorAttachmentBytesPerSample;\n    readonly attribute unsigned long maxComputeWorkgroupStorageSize;\n    readonly attribute unsigned long maxComputeInvocationsPerWorkgroup;\n    readonly attribute unsigned long maxComputeWorkgroupSizeX;\n    readonly attribute unsigned long maxComputeWorkgroupSizeY;\n    readonly attribute unsigned long maxComputeWorkgroupSizeZ;\n    readonly attribute unsigned long maxComputeWorkgroupsPerDimension;\n};",
        "type": "interface",
        "name": "GPUSupportedLimits",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "maxTextureDimension1D",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxtexturedimension1d"
          },
          {
            "type": "attribute",
            "name": "maxTextureDimension2D",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxtexturedimension2d"
          },
          {
            "type": "attribute",
            "name": "maxTextureDimension3D",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxtexturedimension3d"
          },
          {
            "type": "attribute",
            "name": "maxTextureArrayLayers",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxtexturearraylayers"
          },
          {
            "type": "attribute",
            "name": "maxBindGroups",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxbindgroups"
          },
          {
            "type": "attribute",
            "name": "maxBindGroupsPlusVertexBuffers",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxbindgroupsplusvertexbuffers"
          },
          {
            "type": "attribute",
            "name": "maxBindingsPerBindGroup",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxbindingsperbindgroup"
          },
          {
            "type": "attribute",
            "name": "maxDynamicUniformBuffersPerPipelineLayout",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxdynamicuniformbuffersperpipelinelayout"
          },
          {
            "type": "attribute",
            "name": "maxDynamicStorageBuffersPerPipelineLayout",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxdynamicstoragebuffersperpipelinelayout"
          },
          {
            "type": "attribute",
            "name": "maxSampledTexturesPerShaderStage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxsampledtexturespershaderstage"
          },
          {
            "type": "attribute",
            "name": "maxSamplersPerShaderStage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxsamplerspershaderstage"
          },
          {
            "type": "attribute",
            "name": "maxStorageBuffersPerShaderStage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxstoragebufferspershaderstage"
          },
          {
            "type": "attribute",
            "name": "maxStorageTexturesPerShaderStage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxstoragetexturespershaderstage"
          },
          {
            "type": "attribute",
            "name": "maxUniformBuffersPerShaderStage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxuniformbufferspershaderstage"
          },
          {
            "type": "attribute",
            "name": "maxUniformBufferBindingSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxuniformbufferbindingsize"
          },
          {
            "type": "attribute",
            "name": "maxStorageBufferBindingSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxstoragebufferbindingsize"
          },
          {
            "type": "attribute",
            "name": "minUniformBufferOffsetAlignment",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-minuniformbufferoffsetalignment"
          },
          {
            "type": "attribute",
            "name": "minStorageBufferOffsetAlignment",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-minstoragebufferoffsetalignment"
          },
          {
            "type": "attribute",
            "name": "maxVertexBuffers",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxvertexbuffers"
          },
          {
            "type": "attribute",
            "name": "maxBufferSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxbuffersize"
          },
          {
            "type": "attribute",
            "name": "maxVertexAttributes",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxvertexattributes"
          },
          {
            "type": "attribute",
            "name": "maxVertexBufferArrayStride",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxvertexbufferarraystride"
          },
          {
            "type": "attribute",
            "name": "maxInterStageShaderVariables",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxinterstageshadervariables"
          },
          {
            "type": "attribute",
            "name": "maxColorAttachments",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcolorattachments"
          },
          {
            "type": "attribute",
            "name": "maxColorAttachmentBytesPerSample",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcolorattachmentbytespersample"
          },
          {
            "type": "attribute",
            "name": "maxComputeWorkgroupStorageSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcomputeworkgroupstoragesize"
          },
          {
            "type": "attribute",
            "name": "maxComputeInvocationsPerWorkgroup",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcomputeinvocationsperworkgroup"
          },
          {
            "type": "attribute",
            "name": "maxComputeWorkgroupSizeX",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcomputeworkgroupsizex"
          },
          {
            "type": "attribute",
            "name": "maxComputeWorkgroupSizeY",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcomputeworkgroupsizey"
          },
          {
            "type": "attribute",
            "name": "maxComputeWorkgroupSizeZ",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcomputeworkgroupsizez"
          },
          {
            "type": "attribute",
            "name": "maxComputeWorkgroupsPerDimension",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusupportedlimits-maxcomputeworkgroupsperdimension"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpusupportedlimits"
      },
      "GPUSupportedFeatures": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUSupportedFeatures {\n    readonly setlike<DOMString>;\n};",
        "type": "interface",
        "name": "GPUSupportedFeatures",
        "inheritance": null,
        "members": [
          {
            "type": "setlike",
            "idlType": [
              {
                "type": null,
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "DOMString"
              }
            ],
            "arguments": [],
            "extAttrs": [],
            "readonly": true,
            "async": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpusupportedfeatures"
      },
      "WGSLLanguageFeatures": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface WGSLLanguageFeatures {\n    readonly setlike<DOMString>;\n};",
        "type": "interface",
        "name": "WGSLLanguageFeatures",
        "inheritance": null,
        "members": [
          {
            "type": "setlike",
            "idlType": [
              {
                "type": null,
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "DOMString"
              }
            ],
            "arguments": [],
            "extAttrs": [],
            "readonly": true,
            "async": false
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuwgsllanguagefeatures"
      },
      "GPUAdapterInfo": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUAdapterInfo {\n    readonly attribute DOMString vendor;\n    readonly attribute DOMString architecture;\n    readonly attribute DOMString device;\n    readonly attribute DOMString description;\n    readonly attribute unsigned long subgroupMinSize;\n    readonly attribute unsigned long subgroupMaxSize;\n    readonly attribute boolean isFallbackAdapter;\n};",
        "type": "interface",
        "name": "GPUAdapterInfo",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "vendor",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-vendor"
          },
          {
            "type": "attribute",
            "name": "architecture",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-architecture"
          },
          {
            "type": "attribute",
            "name": "device",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-device"
          },
          {
            "type": "attribute",
            "name": "description",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-description"
          },
          {
            "type": "attribute",
            "name": "subgroupMinSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-subgroupminsize"
          },
          {
            "type": "attribute",
            "name": "subgroupMaxSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-subgroupmaxsize"
          },
          {
            "type": "attribute",
            "name": "isFallbackAdapter",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapterinfo-isfallbackadapter"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuadapterinfo"
      },
      "NavigatorGPU": {
        "fragment": "interface mixin NavigatorGPU {\n    [SameObject, SecureContext] readonly attribute GPU gpu;\n};",
        "type": "interface mixin",
        "name": "NavigatorGPU",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "gpu",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPU"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              },
              {
                "type": "extended-attribute",
                "name": "SecureContext",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-navigatorgpu-gpu"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#navigatorgpu"
      },
      "GPU": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPU {\n    Promise<GPUAdapter?> requestAdapter(optional GPURequestAdapterOptions options = {});\n    GPUTextureFormat getPreferredCanvasFormat();\n    [SameObject] readonly attribute WGSLLanguageFeatures wgslLanguageFeatures;\n};",
        "type": "interface",
        "name": "GPU",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "requestAdapter",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUAdapter"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURequestAdapterOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpu-requestadapter"
          },
          {
            "type": "operation",
            "name": "getPreferredCanvasFormat",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpu-getpreferredcanvasformat"
          },
          {
            "type": "attribute",
            "name": "wgslLanguageFeatures",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WGSLLanguageFeatures"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpu-wgsllanguagefeatures"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpu"
      },
      "GPURequestAdapterOptions": {
        "fragment": "dictionary GPURequestAdapterOptions {\n    DOMString featureLevel = \"core\";\n    GPUPowerPreference powerPreference;\n    boolean forceFallbackAdapter = false;\n    boolean xrCompatible = false;\n};",
        "type": "dictionary",
        "name": "GPURequestAdapterOptions",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "featureLevel",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": {
              "type": "string",
              "value": "core"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurequestadapteroptions-featurelevel"
          },
          {
            "type": "field",
            "name": "powerPreference",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUPowerPreference"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurequestadapteroptions-powerpreference"
          },
          {
            "type": "field",
            "name": "forceFallbackAdapter",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurequestadapteroptions-forcefallbackadapter"
          },
          {
            "type": "field",
            "name": "xrCompatible",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurequestadapteroptions-xrcompatible"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions"
      },
      "GPUPowerPreference": {
        "fragment": "enum GPUPowerPreference {\n    \"low-power\",\n    \"high-performance\",\n};",
        "type": "enum",
        "name": "GPUPowerPreference",
        "values": [
          {
            "type": "enum-value",
            "value": "low-power",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupowerpreference-low-power"
          },
          {
            "type": "enum-value",
            "value": "high-performance",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupowerpreference-high-performance"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpupowerpreference"
      },
      "GPUAdapter": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUAdapter {\n    [SameObject] readonly attribute GPUSupportedFeatures features;\n    [SameObject] readonly attribute GPUSupportedLimits limits;\n    [SameObject] readonly attribute GPUAdapterInfo info;\n\n    Promise<GPUDevice> requestDevice(optional GPUDeviceDescriptor descriptor = {});\n};",
        "type": "interface",
        "name": "GPUAdapter",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "features",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSupportedFeatures"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapter-features"
          },
          {
            "type": "attribute",
            "name": "limits",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSupportedLimits"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapter-limits"
          },
          {
            "type": "attribute",
            "name": "info",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUAdapterInfo"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapter-info"
          },
          {
            "type": "operation",
            "name": "requestDevice",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUDevice"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUDeviceDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuadapter-requestdevice"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuadapter"
      },
      "GPUDeviceDescriptor": {
        "fragment": "dictionary GPUDeviceDescriptor\n         : GPUObjectDescriptorBase {\n    sequence<GPUFeatureName> requiredFeatures = [];\n    record<DOMString, (GPUSize64 or undefined)> requiredLimits = {};\n    GPUQueueDescriptor defaultQueue = {};\n};",
        "type": "dictionary",
        "name": "GPUDeviceDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "requiredFeatures",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUFeatureName"
                }
              ]
            },
            "default": {
              "type": "sequence",
              "value": []
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicedescriptor-requiredfeatures"
          },
          {
            "type": "field",
            "name": "requiredLimits",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "record",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": true,
                  "idlType": [
                    {
                      "type": "dictionary-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "GPUSize64"
                    },
                    {
                      "type": "dictionary-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "undefined"
                    }
                  ]
                }
              ]
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicedescriptor-requiredlimits"
          },
          {
            "type": "field",
            "name": "defaultQueue",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQueueDescriptor"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicedescriptor-defaultqueue"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpudevicedescriptor"
      },
      "GPUFeatureName": {
        "fragment": "enum GPUFeatureName {\n    \"core-features-and-limits\",\n    \"depth-clip-control\",\n    \"depth32float-stencil8\",\n    \"texture-compression-bc\",\n    \"texture-compression-bc-sliced-3d\",\n    \"texture-compression-etc2\",\n    \"texture-compression-astc\",\n    \"texture-compression-astc-sliced-3d\",\n    \"timestamp-query\",\n    \"indirect-first-instance\",\n    \"shader-f16\",\n    \"rg11b10ufloat-renderable\",\n    \"bgra8unorm-storage\",\n    \"float32-filterable\",\n    \"float32-blendable\",\n    \"clip-distances\",\n    \"dual-source-blending\",\n    \"subgroups\",\n    \"texture-formats-tier1\",\n    \"texture-formats-tier2\",\n    \"primitive-index\",\n    \"texture-component-swizzle\",\n};",
        "type": "enum",
        "name": "GPUFeatureName",
        "values": [
          {
            "type": "enum-value",
            "value": "core-features-and-limits",
            "href": "https://gpuweb.github.io/gpuweb/#core-features-and-limits"
          },
          {
            "type": "enum-value",
            "value": "depth-clip-control",
            "href": "https://gpuweb.github.io/gpuweb/#depth-clip-control"
          },
          {
            "type": "enum-value",
            "value": "depth32float-stencil8",
            "href": "https://gpuweb.github.io/gpuweb/#depth32float-stencil8"
          },
          {
            "type": "enum-value",
            "value": "texture-compression-bc",
            "href": "https://gpuweb.github.io/gpuweb/#texture-compression-bc"
          },
          {
            "type": "enum-value",
            "value": "texture-compression-bc-sliced-3d",
            "href": "https://gpuweb.github.io/gpuweb/#texture-compression-bc-sliced-3d"
          },
          {
            "type": "enum-value",
            "value": "texture-compression-etc2",
            "href": "https://gpuweb.github.io/gpuweb/#texture-compression-etc2"
          },
          {
            "type": "enum-value",
            "value": "texture-compression-astc",
            "href": "https://gpuweb.github.io/gpuweb/#texture-compression-astc"
          },
          {
            "type": "enum-value",
            "value": "texture-compression-astc-sliced-3d",
            "href": "https://gpuweb.github.io/gpuweb/#texture-compression-astc-sliced-3d"
          },
          {
            "type": "enum-value",
            "value": "timestamp-query",
            "href": "https://gpuweb.github.io/gpuweb/#timestamp-query"
          },
          {
            "type": "enum-value",
            "value": "indirect-first-instance",
            "href": "https://gpuweb.github.io/gpuweb/#indirect-first-instance"
          },
          {
            "type": "enum-value",
            "value": "shader-f16",
            "href": "https://gpuweb.github.io/gpuweb/#shader-f16"
          },
          {
            "type": "enum-value",
            "value": "rg11b10ufloat-renderable",
            "href": "https://gpuweb.github.io/gpuweb/#rg11b10ufloat-renderable"
          },
          {
            "type": "enum-value",
            "value": "bgra8unorm-storage",
            "href": "https://gpuweb.github.io/gpuweb/#bgra8unorm-storage"
          },
          {
            "type": "enum-value",
            "value": "float32-filterable",
            "href": "https://gpuweb.github.io/gpuweb/#float32-filterable"
          },
          {
            "type": "enum-value",
            "value": "float32-blendable",
            "href": "https://gpuweb.github.io/gpuweb/#float32-blendable"
          },
          {
            "type": "enum-value",
            "value": "clip-distances",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufeaturename-clip-distances"
          },
          {
            "type": "enum-value",
            "value": "dual-source-blending",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufeaturename-dual-source-blending"
          },
          {
            "type": "enum-value",
            "value": "subgroups",
            "href": "https://gpuweb.github.io/gpuweb/#subgroups"
          },
          {
            "type": "enum-value",
            "value": "texture-formats-tier1",
            "href": "https://gpuweb.github.io/gpuweb/#texture-formats-tier1"
          },
          {
            "type": "enum-value",
            "value": "texture-formats-tier2",
            "href": "https://gpuweb.github.io/gpuweb/#texture-formats-tier2"
          },
          {
            "type": "enum-value",
            "value": "primitive-index",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufeaturename-primitive-index"
          },
          {
            "type": "enum-value",
            "value": "texture-component-swizzle",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufeaturename-texture-component-swizzle"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#gpufeaturename"
      },
      "GPUDevice": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUDevice : EventTarget {\n    [SameObject] readonly attribute GPUSupportedFeatures features;\n    [SameObject] readonly attribute GPUSupportedLimits limits;\n    [SameObject] readonly attribute GPUAdapterInfo adapterInfo;\n\n    [SameObject] readonly attribute GPUQueue queue;\n\n    undefined destroy();\n\n    GPUBuffer createBuffer(GPUBufferDescriptor descriptor);\n    GPUTexture createTexture(GPUTextureDescriptor descriptor);\n    GPUSampler createSampler(optional GPUSamplerDescriptor descriptor = {});\n    GPUExternalTexture importExternalTexture(GPUExternalTextureDescriptor descriptor);\n\n    GPUBindGroupLayout createBindGroupLayout(GPUBindGroupLayoutDescriptor descriptor);\n    GPUPipelineLayout createPipelineLayout(GPUPipelineLayoutDescriptor descriptor);\n    GPUBindGroup createBindGroup(GPUBindGroupDescriptor descriptor);\n\n    GPUShaderModule createShaderModule(GPUShaderModuleDescriptor descriptor);\n    GPUComputePipeline createComputePipeline(GPUComputePipelineDescriptor descriptor);\n    GPURenderPipeline createRenderPipeline(GPURenderPipelineDescriptor descriptor);\n    Promise<GPUComputePipeline> createComputePipelineAsync(GPUComputePipelineDescriptor descriptor);\n    Promise<GPURenderPipeline> createRenderPipelineAsync(GPURenderPipelineDescriptor descriptor);\n\n    GPUCommandEncoder createCommandEncoder(optional GPUCommandEncoderDescriptor descriptor = {});\n    GPURenderBundleEncoder createRenderBundleEncoder(GPURenderBundleEncoderDescriptor descriptor);\n\n    GPUQuerySet createQuerySet(GPUQuerySetDescriptor descriptor);\n};",
        "type": "interface",
        "name": "GPUDevice",
        "inheritance": "EventTarget",
        "members": [
          {
            "type": "attribute",
            "name": "features",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSupportedFeatures"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-features"
          },
          {
            "type": "attribute",
            "name": "limits",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSupportedLimits"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-limits"
          },
          {
            "type": "attribute",
            "name": "adapterInfo",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUAdapterInfo"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-adapterinfo"
          },
          {
            "type": "attribute",
            "name": "queue",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQueue"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-queue"
          },
          {
            "type": "operation",
            "name": "destroy",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-destroy"
          },
          {
            "type": "operation",
            "name": "createBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBuffer"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBufferDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createbuffer"
          },
          {
            "type": "operation",
            "name": "createTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTexture"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createtexture"
          },
          {
            "type": "operation",
            "name": "createSampler",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSampler"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSamplerDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createsampler"
          },
          {
            "type": "operation",
            "name": "importExternalTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUExternalTexture"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUExternalTextureDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-importexternaltexture"
          },
          {
            "type": "operation",
            "name": "createBindGroupLayout",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBindGroupLayout"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBindGroupLayoutDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createbindgrouplayout"
          },
          {
            "type": "operation",
            "name": "createPipelineLayout",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUPipelineLayout"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUPipelineLayoutDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createpipelinelayout"
          },
          {
            "type": "operation",
            "name": "createBindGroup",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBindGroup"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBindGroupDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createbindgroup"
          },
          {
            "type": "operation",
            "name": "createShaderModule",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUShaderModule"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUShaderModuleDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createshadermodule"
          },
          {
            "type": "operation",
            "name": "createComputePipeline",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUComputePipeline"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUComputePipelineDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createcomputepipeline"
          },
          {
            "type": "operation",
            "name": "createRenderPipeline",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPURenderPipeline"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderPipelineDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createrenderpipeline"
          },
          {
            "type": "operation",
            "name": "createComputePipelineAsync",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUComputePipeline"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUComputePipelineDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createcomputepipelineasync"
          },
          {
            "type": "operation",
            "name": "createRenderPipelineAsync",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderPipeline"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderPipelineDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createrenderpipelineasync"
          },
          {
            "type": "operation",
            "name": "createCommandEncoder",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCommandEncoder"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCommandEncoderDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createcommandencoder"
          },
          {
            "type": "operation",
            "name": "createRenderBundleEncoder",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPURenderBundleEncoder"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderBundleEncoderDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createrenderbundleencoder"
          },
          {
            "type": "operation",
            "name": "createQuerySet",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQuerySet"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUQuerySetDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-createqueryset"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpudevice"
      },
      "GPUBuffer": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUBuffer {\n    readonly attribute GPUSize64Out size;\n    readonly attribute GPUFlagsConstant usage;\n\n    readonly attribute GPUBufferMapState mapState;\n\n    Promise<undefined> mapAsync(GPUMapModeFlags mode, optional GPUSize64 offset = 0, optional GPUSize64 size);\n    ArrayBuffer getMappedRange(optional GPUSize64 offset = 0, optional GPUSize64 size);\n    undefined unmap();\n\n    undefined destroy();\n};",
        "type": "interface",
        "name": "GPUBuffer",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "size",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64Out"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-size"
          },
          {
            "type": "attribute",
            "name": "usage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-usage"
          },
          {
            "type": "attribute",
            "name": "mapState",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBufferMapState"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-mapstate"
          },
          {
            "type": "operation",
            "name": "mapAsync",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "mode",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUMapModeFlags"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "offset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-mapasync"
          },
          {
            "type": "operation",
            "name": "getMappedRange",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ArrayBuffer"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "offset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-getmappedrange"
          },
          {
            "type": "operation",
            "name": "unmap",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-unmap"
          },
          {
            "type": "operation",
            "name": "destroy",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffer-destroy"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpubuffer"
      },
      "GPUBufferMapState": {
        "fragment": "enum GPUBufferMapState {\n    \"unmapped\",\n    \"pending\",\n    \"mapped\",\n};",
        "type": "enum",
        "name": "GPUBufferMapState",
        "values": [
          {
            "type": "enum-value",
            "value": "unmapped",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffermapstate-unmapped"
          },
          {
            "type": "enum-value",
            "value": "pending",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffermapstate-pending"
          },
          {
            "type": "enum-value",
            "value": "mapped",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubuffermapstate-mapped"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpubuffermapstate"
      },
      "GPUBufferDescriptor": {
        "fragment": "dictionary GPUBufferDescriptor\n         : GPUObjectDescriptorBase {\n    required GPUSize64 size;\n    required GPUBufferUsageFlags usage;\n    boolean mappedAtCreation = false;\n};",
        "type": "dictionary",
        "name": "GPUBufferDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "size",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferdescriptor-size"
          },
          {
            "type": "field",
            "name": "usage",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBufferUsageFlags"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferdescriptor-usage"
          },
          {
            "type": "field",
            "name": "mappedAtCreation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferdescriptor-mappedatcreation"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpubufferdescriptor"
      },
      "GPUBufferUsageFlags": {
        "fragment": "typedef [EnforceRange] unsigned long GPUBufferUsageFlags;",
        "type": "typedef",
        "name": "GPUBufferUsageFlags",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpubufferusageflags"
      },
      "GPUBufferUsage": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\nnamespace GPUBufferUsage {\n    const GPUFlagsConstant MAP_READ      = 0x0001;\n    const GPUFlagsConstant MAP_WRITE     = 0x0002;\n    const GPUFlagsConstant COPY_SRC      = 0x0004;\n    const GPUFlagsConstant COPY_DST      = 0x0008;\n    const GPUFlagsConstant INDEX         = 0x0010;\n    const GPUFlagsConstant VERTEX        = 0x0020;\n    const GPUFlagsConstant UNIFORM       = 0x0040;\n    const GPUFlagsConstant STORAGE       = 0x0080;\n    const GPUFlagsConstant INDIRECT      = 0x0100;\n    const GPUFlagsConstant QUERY_RESOLVE = 0x0200;\n};",
        "type": "namespace",
        "name": "GPUBufferUsage",
        "inheritance": null,
        "members": [
          {
            "type": "const",
            "name": "MAP_READ",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0001"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-map_read"
          },
          {
            "type": "const",
            "name": "MAP_WRITE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0002"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-map_write"
          },
          {
            "type": "const",
            "name": "COPY_SRC",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0004"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-copy_src"
          },
          {
            "type": "const",
            "name": "COPY_DST",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0008"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-copy_dst"
          },
          {
            "type": "const",
            "name": "INDEX",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0010"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-index"
          },
          {
            "type": "const",
            "name": "VERTEX",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0020"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-vertex"
          },
          {
            "type": "const",
            "name": "UNIFORM",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0040"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-uniform"
          },
          {
            "type": "const",
            "name": "STORAGE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0080"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-storage"
          },
          {
            "type": "const",
            "name": "INDIRECT",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0100"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-indirect"
          },
          {
            "type": "const",
            "name": "QUERY_RESOLVE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0200"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferusage-query_resolve"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#namespacedef-gpubufferusage"
      },
      "GPUMapModeFlags": {
        "fragment": "typedef [EnforceRange] unsigned long GPUMapModeFlags;",
        "type": "typedef",
        "name": "GPUMapModeFlags",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpumapmodeflags"
      },
      "GPUMapMode": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\nnamespace GPUMapMode {\n    const GPUFlagsConstant READ  = 0x0001;\n    const GPUFlagsConstant WRITE = 0x0002;\n};",
        "type": "namespace",
        "name": "GPUMapMode",
        "inheritance": null,
        "members": [
          {
            "type": "const",
            "name": "READ",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0001"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumapmode-read"
          },
          {
            "type": "const",
            "name": "WRITE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x0002"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumapmode-write"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#namespacedef-gpumapmode"
      },
      "GPUTexture": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUTexture {\n    GPUTextureView createView(optional GPUTextureViewDescriptor descriptor = {});\n\n    undefined destroy();\n\n    readonly attribute GPUIntegerCoordinateOut width;\n    readonly attribute GPUIntegerCoordinateOut height;\n    readonly attribute GPUIntegerCoordinateOut depthOrArrayLayers;\n    readonly attribute GPUIntegerCoordinateOut mipLevelCount;\n    readonly attribute GPUSize32Out sampleCount;\n    readonly attribute GPUTextureDimension dimension;\n    readonly attribute GPUTextureFormat format;\n    readonly attribute GPUFlagsConstant usage;\n};",
        "type": "interface",
        "name": "GPUTexture",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "createView",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureView"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureViewDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-createview"
          },
          {
            "type": "operation",
            "name": "destroy",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-destroy"
          },
          {
            "type": "attribute",
            "name": "width",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinateOut"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-width"
          },
          {
            "type": "attribute",
            "name": "height",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinateOut"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-height"
          },
          {
            "type": "attribute",
            "name": "depthOrArrayLayers",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinateOut"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-depthorarraylayers"
          },
          {
            "type": "attribute",
            "name": "mipLevelCount",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinateOut"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-miplevelcount"
          },
          {
            "type": "attribute",
            "name": "sampleCount",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32Out"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-samplecount"
          },
          {
            "type": "attribute",
            "name": "dimension",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureDimension"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-dimension"
          },
          {
            "type": "attribute",
            "name": "format",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-format"
          },
          {
            "type": "attribute",
            "name": "usage",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexture-usage"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gputexture"
      },
      "GPUTextureDescriptor": {
        "fragment": "dictionary GPUTextureDescriptor\n         : GPUObjectDescriptorBase {\n    required GPUExtent3D size;\n    GPUIntegerCoordinate mipLevelCount = 1;\n    GPUSize32 sampleCount = 1;\n    GPUTextureDimension dimension = \"2d\";\n    required GPUTextureFormat format;\n    required GPUTextureUsageFlags usage;\n    sequence<GPUTextureFormat> viewFormats = [];\n};",
        "type": "dictionary",
        "name": "GPUTextureDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "size",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUExtent3D"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-size"
          },
          {
            "type": "field",
            "name": "mipLevelCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-miplevelcount"
          },
          {
            "type": "field",
            "name": "sampleCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-samplecount"
          },
          {
            "type": "field",
            "name": "dimension",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureDimension"
            },
            "default": {
              "type": "string",
              "value": "2d"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-dimension"
          },
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-format"
          },
          {
            "type": "field",
            "name": "usage",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureUsageFlags"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-usage"
          },
          {
            "type": "field",
            "name": "viewFormats",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureFormat"
                }
              ]
            },
            "default": {
              "type": "sequence",
              "value": []
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedescriptor-viewformats"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gputexturedescriptor"
      },
      "GPUTextureDimension": {
        "fragment": "enum GPUTextureDimension {\n    \"1d\",\n    \"2d\",\n    \"3d\",\n};",
        "type": "enum",
        "name": "GPUTextureDimension",
        "values": [
          {
            "type": "enum-value",
            "value": "1d",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedimension-1d"
          },
          {
            "type": "enum-value",
            "value": "2d",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedimension-2d"
          },
          {
            "type": "enum-value",
            "value": "3d",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturedimension-3d"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gputexturedimension"
      },
      "GPUTextureUsageFlags": {
        "fragment": "typedef [EnforceRange] unsigned long GPUTextureUsageFlags;",
        "type": "typedef",
        "name": "GPUTextureUsageFlags",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gputextureusageflags"
      },
      "GPUTextureUsage": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\nnamespace GPUTextureUsage {\n    const GPUFlagsConstant COPY_SRC          = 0x01;\n    const GPUFlagsConstant COPY_DST          = 0x02;\n    const GPUFlagsConstant TEXTURE_BINDING   = 0x04;\n    const GPUFlagsConstant STORAGE_BINDING   = 0x08;\n    const GPUFlagsConstant RENDER_ATTACHMENT = 0x10;\n};",
        "type": "namespace",
        "name": "GPUTextureUsage",
        "inheritance": null,
        "members": [
          {
            "type": "const",
            "name": "COPY_SRC",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x01"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureusage-copy_src"
          },
          {
            "type": "const",
            "name": "COPY_DST",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x02"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureusage-copy_dst"
          },
          {
            "type": "const",
            "name": "TEXTURE_BINDING",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x04"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureusage-texture_binding"
          },
          {
            "type": "const",
            "name": "STORAGE_BINDING",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x08"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureusage-storage_binding"
          },
          {
            "type": "const",
            "name": "RENDER_ATTACHMENT",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x10"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureusage-render_attachment"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#namespacedef-gputextureusage"
      },
      "GPUTextureView": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUTextureView {\n};",
        "type": "interface",
        "name": "GPUTextureView",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gputextureview"
      },
      "GPUTextureViewDescriptor": {
        "fragment": "dictionary GPUTextureViewDescriptor\n         : GPUObjectDescriptorBase {\n    GPUTextureFormat format;\n    GPUTextureViewDimension dimension;\n    GPUTextureUsageFlags usage = 0;\n    GPUTextureAspect aspect = \"all\";\n    GPUIntegerCoordinate baseMipLevel = 0;\n    GPUIntegerCoordinate mipLevelCount;\n    GPUIntegerCoordinate baseArrayLayer = 0;\n    GPUIntegerCoordinate arrayLayerCount;\n\n    // Requires \"texture-component-swizzle\" feature.\n    DOMString swizzle = \"rgba\";\n};",
        "type": "dictionary",
        "name": "GPUTextureViewDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-format"
          },
          {
            "type": "field",
            "name": "dimension",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureViewDimension"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-dimension"
          },
          {
            "type": "field",
            "name": "usage",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureUsageFlags"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-usage"
          },
          {
            "type": "field",
            "name": "aspect",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureAspect"
            },
            "default": {
              "type": "string",
              "value": "all"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-aspect"
          },
          {
            "type": "field",
            "name": "baseMipLevel",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-basemiplevel"
          },
          {
            "type": "field",
            "name": "mipLevelCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-miplevelcount"
          },
          {
            "type": "field",
            "name": "baseArrayLayer",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-basearraylayer"
          },
          {
            "type": "field",
            "name": "arrayLayerCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-arraylayercount"
          },
          {
            "type": "field",
            "name": "swizzle",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "default": {
              "type": "string",
              "value": "rgba"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdescriptor-swizzle"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gputextureviewdescriptor"
      },
      "GPUTextureViewDimension": {
        "fragment": "enum GPUTextureViewDimension {\n    \"1d\",\n    \"2d\",\n    \"2d-array\",\n    \"cube\",\n    \"cube-array\",\n    \"3d\",\n};",
        "type": "enum",
        "name": "GPUTextureViewDimension",
        "values": [
          {
            "type": "enum-value",
            "value": "1d",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdimension-1d"
          },
          {
            "type": "enum-value",
            "value": "2d",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdimension-2d"
          },
          {
            "type": "enum-value",
            "value": "2d-array",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdimension-2d-array"
          },
          {
            "type": "enum-value",
            "value": "cube",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdimension-cube"
          },
          {
            "type": "enum-value",
            "value": "cube-array",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdimension-cube-array"
          },
          {
            "type": "enum-value",
            "value": "3d",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureviewdimension-3d"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gputextureviewdimension"
      },
      "GPUTextureAspect": {
        "fragment": "enum GPUTextureAspect {\n    \"all\",\n    \"stencil-only\",\n    \"depth-only\",\n};",
        "type": "enum",
        "name": "GPUTextureAspect",
        "values": [
          {
            "type": "enum-value",
            "value": "all",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureaspect-all"
          },
          {
            "type": "enum-value",
            "value": "stencil-only",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureaspect-stencil-only"
          },
          {
            "type": "enum-value",
            "value": "depth-only",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureaspect-depth-only"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gputextureaspect"
      },
      "GPUTextureFormat": {
        "fragment": "enum GPUTextureFormat {\n    // 8-bit formats\n    \"r8unorm\",\n    \"r8snorm\",\n    \"r8uint\",\n    \"r8sint\",\n\n    // 16-bit formats\n    \"r16unorm\",\n    \"r16snorm\",\n    \"r16uint\",\n    \"r16sint\",\n    \"r16float\",\n    \"rg8unorm\",\n    \"rg8snorm\",\n    \"rg8uint\",\n    \"rg8sint\",\n\n    // 32-bit formats\n    \"r32uint\",\n    \"r32sint\",\n    \"r32float\",\n    \"rg16unorm\",\n    \"rg16snorm\",\n    \"rg16uint\",\n    \"rg16sint\",\n    \"rg16float\",\n    \"rgba8unorm\",\n    \"rgba8unorm-srgb\",\n    \"rgba8snorm\",\n    \"rgba8uint\",\n    \"rgba8sint\",\n    \"bgra8unorm\",\n    \"bgra8unorm-srgb\",\n    // Packed 32-bit formats\n    \"rgb9e5ufloat\",\n    \"rgb10a2uint\",\n    \"rgb10a2unorm\",\n    \"rg11b10ufloat\",\n\n    // 64-bit formats\n    \"rg32uint\",\n    \"rg32sint\",\n    \"rg32float\",\n    \"rgba16unorm\",\n    \"rgba16snorm\",\n    \"rgba16uint\",\n    \"rgba16sint\",\n    \"rgba16float\",\n\n    // 128-bit formats\n    \"rgba32uint\",\n    \"rgba32sint\",\n    \"rgba32float\",\n\n    // Depth/stencil formats\n    \"stencil8\",\n    \"depth16unorm\",\n    \"depth24plus\",\n    \"depth24plus-stencil8\",\n    \"depth32float\",\n\n    // \"depth32float-stencil8\" feature\n    \"depth32float-stencil8\",\n\n    // BC compressed formats usable if \"texture-compression-bc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    \"bc1-rgba-unorm\",\n    \"bc1-rgba-unorm-srgb\",\n    \"bc2-rgba-unorm\",\n    \"bc2-rgba-unorm-srgb\",\n    \"bc3-rgba-unorm\",\n    \"bc3-rgba-unorm-srgb\",\n    \"bc4-r-unorm\",\n    \"bc4-r-snorm\",\n    \"bc5-rg-unorm\",\n    \"bc5-rg-snorm\",\n    \"bc6h-rgb-ufloat\",\n    \"bc6h-rgb-float\",\n    \"bc7-rgba-unorm\",\n    \"bc7-rgba-unorm-srgb\",\n\n    // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    \"etc2-rgb8unorm\",\n    \"etc2-rgb8unorm-srgb\",\n    \"etc2-rgb8a1unorm\",\n    \"etc2-rgb8a1unorm-srgb\",\n    \"etc2-rgba8unorm\",\n    \"etc2-rgba8unorm-srgb\",\n    \"eac-r11unorm\",\n    \"eac-r11snorm\",\n    \"eac-rg11unorm\",\n    \"eac-rg11snorm\",\n\n    // ASTC compressed formats usable if \"texture-compression-astc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    \"astc-4x4-unorm\",\n    \"astc-4x4-unorm-srgb\",\n    \"astc-5x4-unorm\",\n    \"astc-5x4-unorm-srgb\",\n    \"astc-5x5-unorm\",\n    \"astc-5x5-unorm-srgb\",\n    \"astc-6x5-unorm\",\n    \"astc-6x5-unorm-srgb\",\n    \"astc-6x6-unorm\",\n    \"astc-6x6-unorm-srgb\",\n    \"astc-8x5-unorm\",\n    \"astc-8x5-unorm-srgb\",\n    \"astc-8x6-unorm\",\n    \"astc-8x6-unorm-srgb\",\n    \"astc-8x8-unorm\",\n    \"astc-8x8-unorm-srgb\",\n    \"astc-10x5-unorm\",\n    \"astc-10x5-unorm-srgb\",\n    \"astc-10x6-unorm\",\n    \"astc-10x6-unorm-srgb\",\n    \"astc-10x8-unorm\",\n    \"astc-10x8-unorm-srgb\",\n    \"astc-10x10-unorm\",\n    \"astc-10x10-unorm-srgb\",\n    \"astc-12x10-unorm\",\n    \"astc-12x10-unorm-srgb\",\n    \"astc-12x12-unorm\",\n    \"astc-12x12-unorm-srgb\",\n};",
        "type": "enum",
        "name": "GPUTextureFormat",
        "values": [
          {
            "type": "enum-value",
            "value": "r8unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r8unorm"
          },
          {
            "type": "enum-value",
            "value": "r8snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r8snorm"
          },
          {
            "type": "enum-value",
            "value": "r8uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r8uint"
          },
          {
            "type": "enum-value",
            "value": "r8sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r8sint"
          },
          {
            "type": "enum-value",
            "value": "r16unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r16unorm"
          },
          {
            "type": "enum-value",
            "value": "r16snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r16snorm"
          },
          {
            "type": "enum-value",
            "value": "r16uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r16uint"
          },
          {
            "type": "enum-value",
            "value": "r16sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r16sint"
          },
          {
            "type": "enum-value",
            "value": "r16float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r16float"
          },
          {
            "type": "enum-value",
            "value": "rg8unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg8unorm"
          },
          {
            "type": "enum-value",
            "value": "rg8snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg8snorm"
          },
          {
            "type": "enum-value",
            "value": "rg8uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg8uint"
          },
          {
            "type": "enum-value",
            "value": "rg8sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg8sint"
          },
          {
            "type": "enum-value",
            "value": "r32uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r32uint"
          },
          {
            "type": "enum-value",
            "value": "r32sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r32sint"
          },
          {
            "type": "enum-value",
            "value": "r32float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-r32float"
          },
          {
            "type": "enum-value",
            "value": "rg16unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg16unorm"
          },
          {
            "type": "enum-value",
            "value": "rg16snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg16snorm"
          },
          {
            "type": "enum-value",
            "value": "rg16uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg16uint"
          },
          {
            "type": "enum-value",
            "value": "rg16sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg16sint"
          },
          {
            "type": "enum-value",
            "value": "rg16float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg16float"
          },
          {
            "type": "enum-value",
            "value": "rgba8unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba8unorm"
          },
          {
            "type": "enum-value",
            "value": "rgba8unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba8unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "rgba8snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba8snorm"
          },
          {
            "type": "enum-value",
            "value": "rgba8uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba8uint"
          },
          {
            "type": "enum-value",
            "value": "rgba8sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba8sint"
          },
          {
            "type": "enum-value",
            "value": "bgra8unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bgra8unorm"
          },
          {
            "type": "enum-value",
            "value": "bgra8unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bgra8unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "rgb9e5ufloat",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgb9e5ufloat"
          },
          {
            "type": "enum-value",
            "value": "rgb10a2uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgb10a2uint"
          },
          {
            "type": "enum-value",
            "value": "rgb10a2unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgb10a2unorm"
          },
          {
            "type": "enum-value",
            "value": "rg11b10ufloat",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg11b10ufloat"
          },
          {
            "type": "enum-value",
            "value": "rg32uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg32uint"
          },
          {
            "type": "enum-value",
            "value": "rg32sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg32sint"
          },
          {
            "type": "enum-value",
            "value": "rg32float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rg32float"
          },
          {
            "type": "enum-value",
            "value": "rgba16unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba16unorm"
          },
          {
            "type": "enum-value",
            "value": "rgba16snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba16snorm"
          },
          {
            "type": "enum-value",
            "value": "rgba16uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba16uint"
          },
          {
            "type": "enum-value",
            "value": "rgba16sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba16sint"
          },
          {
            "type": "enum-value",
            "value": "rgba16float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba16float"
          },
          {
            "type": "enum-value",
            "value": "rgba32uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba32uint"
          },
          {
            "type": "enum-value",
            "value": "rgba32sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba32sint"
          },
          {
            "type": "enum-value",
            "value": "rgba32float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-rgba32float"
          },
          {
            "type": "enum-value",
            "value": "stencil8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-stencil8"
          },
          {
            "type": "enum-value",
            "value": "depth16unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-depth16unorm"
          },
          {
            "type": "enum-value",
            "value": "depth24plus",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-depth24plus"
          },
          {
            "type": "enum-value",
            "value": "depth24plus-stencil8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-depth24plus-stencil8"
          },
          {
            "type": "enum-value",
            "value": "depth32float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-depth32float"
          },
          {
            "type": "enum-value",
            "value": "depth32float-stencil8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-depth32float-stencil8"
          },
          {
            "type": "enum-value",
            "value": "bc1-rgba-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc1-rgba-unorm"
          },
          {
            "type": "enum-value",
            "value": "bc1-rgba-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc1-rgba-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "bc2-rgba-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc2-rgba-unorm"
          },
          {
            "type": "enum-value",
            "value": "bc2-rgba-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc2-rgba-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "bc3-rgba-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc3-rgba-unorm"
          },
          {
            "type": "enum-value",
            "value": "bc3-rgba-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc3-rgba-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "bc4-r-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc4-r-unorm"
          },
          {
            "type": "enum-value",
            "value": "bc4-r-snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc4-r-snorm"
          },
          {
            "type": "enum-value",
            "value": "bc5-rg-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc5-rg-unorm"
          },
          {
            "type": "enum-value",
            "value": "bc5-rg-snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc5-rg-snorm"
          },
          {
            "type": "enum-value",
            "value": "bc6h-rgb-ufloat",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc6h-rgb-ufloat"
          },
          {
            "type": "enum-value",
            "value": "bc6h-rgb-float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc6h-rgb-float"
          },
          {
            "type": "enum-value",
            "value": "bc7-rgba-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc7-rgba-unorm"
          },
          {
            "type": "enum-value",
            "value": "bc7-rgba-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-bc7-rgba-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "etc2-rgb8unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-etc2-rgb8unorm"
          },
          {
            "type": "enum-value",
            "value": "etc2-rgb8unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-etc2-rgb8unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "etc2-rgb8a1unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-etc2-rgb8a1unorm"
          },
          {
            "type": "enum-value",
            "value": "etc2-rgb8a1unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-etc2-rgb8a1unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "etc2-rgba8unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-etc2-rgba8unorm"
          },
          {
            "type": "enum-value",
            "value": "etc2-rgba8unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-etc2-rgba8unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "eac-r11unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-eac-r11unorm"
          },
          {
            "type": "enum-value",
            "value": "eac-r11snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-eac-r11snorm"
          },
          {
            "type": "enum-value",
            "value": "eac-rg11unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-eac-rg11unorm"
          },
          {
            "type": "enum-value",
            "value": "eac-rg11snorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-eac-rg11snorm"
          },
          {
            "type": "enum-value",
            "value": "astc-4x4-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-4x4-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-4x4-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-4x4-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-5x4-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-5x4-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-5x4-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-5x4-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-5x5-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-5x5-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-5x5-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-5x5-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-6x5-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-6x5-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-6x5-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-6x5-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-6x6-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-6x6-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-6x6-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-6x6-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-8x5-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-8x5-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-8x5-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-8x5-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-8x6-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-8x6-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-8x6-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-8x6-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-8x8-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-8x8-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-8x8-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-8x8-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-10x5-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x5-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-10x5-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x5-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-10x6-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x6-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-10x6-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x6-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-10x8-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x8-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-10x8-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x8-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-10x10-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x10-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-10x10-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-10x10-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-12x10-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-12x10-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-12x10-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-12x10-unorm-srgb"
          },
          {
            "type": "enum-value",
            "value": "astc-12x12-unorm",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-12x12-unorm"
          },
          {
            "type": "enum-value",
            "value": "astc-12x12-unorm-srgb",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputextureformat-astc-12x12-unorm-srgb"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gputextureformat"
      },
      "GPUExternalTexture": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUExternalTexture {\n};",
        "type": "interface",
        "name": "GPUExternalTexture",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuexternaltexture"
      },
      "GPUExternalTextureDescriptor": {
        "fragment": "dictionary GPUExternalTextureDescriptor\n         : GPUObjectDescriptorBase {\n    required (HTMLVideoElement or VideoFrame) source;\n    PredefinedColorSpace colorSpace = \"srgb\";\n};",
        "type": "dictionary",
        "name": "GPUExternalTextureDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "source",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "HTMLVideoElement"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "VideoFrame"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuexternaltexturedescriptor-source"
          },
          {
            "type": "field",
            "name": "colorSpace",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PredefinedColorSpace"
            },
            "default": {
              "type": "string",
              "value": "srgb"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuexternaltexturedescriptor-colorspace"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuexternaltexturedescriptor"
      },
      "GPUSampler": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUSampler {\n};",
        "type": "interface",
        "name": "GPUSampler",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpusampler"
      },
      "GPUSamplerDescriptor": {
        "fragment": "dictionary GPUSamplerDescriptor\n         : GPUObjectDescriptorBase {\n    GPUAddressMode addressModeU = \"clamp-to-edge\";\n    GPUAddressMode addressModeV = \"clamp-to-edge\";\n    GPUAddressMode addressModeW = \"clamp-to-edge\";\n    GPUFilterMode magFilter = \"nearest\";\n    GPUFilterMode minFilter = \"nearest\";\n    GPUMipmapFilterMode mipmapFilter = \"nearest\";\n    float lodMinClamp = 0;\n    float lodMaxClamp = 32;\n    GPUCompareFunction compare;\n    [Clamp] unsigned short maxAnisotropy = 1;\n};",
        "type": "dictionary",
        "name": "GPUSamplerDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "addressModeU",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUAddressMode"
            },
            "default": {
              "type": "string",
              "value": "clamp-to-edge"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-addressmodeu"
          },
          {
            "type": "field",
            "name": "addressModeV",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUAddressMode"
            },
            "default": {
              "type": "string",
              "value": "clamp-to-edge"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-addressmodev"
          },
          {
            "type": "field",
            "name": "addressModeW",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUAddressMode"
            },
            "default": {
              "type": "string",
              "value": "clamp-to-edge"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-addressmodew"
          },
          {
            "type": "field",
            "name": "magFilter",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFilterMode"
            },
            "default": {
              "type": "string",
              "value": "nearest"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-magfilter"
          },
          {
            "type": "field",
            "name": "minFilter",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFilterMode"
            },
            "default": {
              "type": "string",
              "value": "nearest"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-minfilter"
          },
          {
            "type": "field",
            "name": "mipmapFilter",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUMipmapFilterMode"
            },
            "default": {
              "type": "string",
              "value": "nearest"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-mipmapfilter"
          },
          {
            "type": "field",
            "name": "lodMinClamp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "float"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-lodminclamp"
          },
          {
            "type": "field",
            "name": "lodMaxClamp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "float"
            },
            "default": {
              "type": "number",
              "value": "32"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-lodmaxclamp"
          },
          {
            "type": "field",
            "name": "compare",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCompareFunction"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-compare"
          },
          {
            "type": "field",
            "name": "maxAnisotropy",
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "Clamp",
                "rhs": null,
                "arguments": []
              }
            ],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned short"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerdescriptor-maxanisotropy"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpusamplerdescriptor"
      },
      "GPUAddressMode": {
        "fragment": "enum GPUAddressMode {\n    \"clamp-to-edge\",\n    \"repeat\",\n    \"mirror-repeat\",\n};",
        "type": "enum",
        "name": "GPUAddressMode",
        "values": [
          {
            "type": "enum-value",
            "value": "clamp-to-edge",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuaddressmode-clamp-to-edge"
          },
          {
            "type": "enum-value",
            "value": "repeat",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuaddressmode-repeat"
          },
          {
            "type": "enum-value",
            "value": "mirror-repeat",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuaddressmode-mirror-repeat"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuaddressmode"
      },
      "GPUFilterMode": {
        "fragment": "enum GPUFilterMode {\n    \"nearest\",\n    \"linear\",\n};",
        "type": "enum",
        "name": "GPUFilterMode",
        "values": [
          {
            "type": "enum-value",
            "value": "nearest",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufiltermode-nearest"
          },
          {
            "type": "enum-value",
            "value": "linear",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufiltermode-linear"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode"
      },
      "GPUMipmapFilterMode": {
        "fragment": "enum GPUMipmapFilterMode {\n    \"nearest\",\n    \"linear\",\n};",
        "type": "enum",
        "name": "GPUMipmapFilterMode",
        "values": [
          {
            "type": "enum-value",
            "value": "nearest",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumipmapfiltermode-nearest"
          },
          {
            "type": "enum-value",
            "value": "linear",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumipmapfiltermode-linear"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpumipmapfiltermode"
      },
      "GPUCompareFunction": {
        "fragment": "enum GPUCompareFunction {\n    \"never\",\n    \"less\",\n    \"equal\",\n    \"less-equal\",\n    \"greater\",\n    \"not-equal\",\n    \"greater-equal\",\n    \"always\",\n};",
        "type": "enum",
        "name": "GPUCompareFunction",
        "values": [
          {
            "type": "enum-value",
            "value": "never",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-never"
          },
          {
            "type": "enum-value",
            "value": "less",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-less"
          },
          {
            "type": "enum-value",
            "value": "equal",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-equal"
          },
          {
            "type": "enum-value",
            "value": "less-equal",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-less-equal"
          },
          {
            "type": "enum-value",
            "value": "greater",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-greater"
          },
          {
            "type": "enum-value",
            "value": "not-equal",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-not-equal"
          },
          {
            "type": "enum-value",
            "value": "greater-equal",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-greater-equal"
          },
          {
            "type": "enum-value",
            "value": "always",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomparefunction-always"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpucomparefunction"
      },
      "GPUBindGroupLayout": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUBindGroupLayout {\n};",
        "type": "interface",
        "name": "GPUBindGroupLayout",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpubindgrouplayout"
      },
      "GPUBindGroupLayoutDescriptor": {
        "fragment": "dictionary GPUBindGroupLayoutDescriptor\n         : GPUObjectDescriptorBase {\n    required sequence<GPUBindGroupLayoutEntry> entries;\n};",
        "type": "dictionary",
        "name": "GPUBindGroupLayoutDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "entries",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBindGroupLayoutEntry"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutdescriptor-entries"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpubindgrouplayoutdescriptor"
      },
      "GPUBindGroupLayoutEntry": {
        "fragment": "dictionary GPUBindGroupLayoutEntry {\n    required GPUIndex32 binding;\n    required GPUShaderStageFlags visibility;\n\n    GPUBufferBindingLayout buffer;\n    GPUSamplerBindingLayout sampler;\n    GPUTextureBindingLayout texture;\n    GPUStorageTextureBindingLayout storageTexture;\n    GPUExternalTextureBindingLayout externalTexture;\n};",
        "type": "dictionary",
        "name": "GPUBindGroupLayoutEntry",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "binding",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIndex32"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-binding"
          },
          {
            "type": "field",
            "name": "visibility",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUShaderStageFlags"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-visibility"
          },
          {
            "type": "field",
            "name": "buffer",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBufferBindingLayout"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-buffer"
          },
          {
            "type": "field",
            "name": "sampler",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSamplerBindingLayout"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-sampler"
          },
          {
            "type": "field",
            "name": "texture",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureBindingLayout"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-texture"
          },
          {
            "type": "field",
            "name": "storageTexture",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStorageTextureBindingLayout"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-storagetexture"
          },
          {
            "type": "field",
            "name": "externalTexture",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUExternalTextureBindingLayout"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgrouplayoutentry-externaltexture"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpubindgrouplayoutentry"
      },
      "GPUShaderStageFlags": {
        "fragment": "typedef [EnforceRange] unsigned long GPUShaderStageFlags;",
        "type": "typedef",
        "name": "GPUShaderStageFlags",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpushaderstageflags"
      },
      "GPUShaderStage": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\nnamespace GPUShaderStage {\n    const GPUFlagsConstant VERTEX   = 0x1;\n    const GPUFlagsConstant FRAGMENT = 0x2;\n    const GPUFlagsConstant COMPUTE  = 0x4;\n};",
        "type": "namespace",
        "name": "GPUShaderStage",
        "inheritance": null,
        "members": [
          {
            "type": "const",
            "name": "VERTEX",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x1"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushaderstage-vertex"
          },
          {
            "type": "const",
            "name": "FRAGMENT",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x2"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushaderstage-fragment"
          },
          {
            "type": "const",
            "name": "COMPUTE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x4"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushaderstage-compute"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#namespacedef-gpushaderstage"
      },
      "GPUBufferBindingType": {
        "fragment": "enum GPUBufferBindingType {\n    \"uniform\",\n    \"storage\",\n    \"read-only-storage\",\n};",
        "type": "enum",
        "name": "GPUBufferBindingType",
        "values": [
          {
            "type": "enum-value",
            "value": "uniform",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbindingtype-uniform"
          },
          {
            "type": "enum-value",
            "value": "storage",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbindingtype-storage"
          },
          {
            "type": "enum-value",
            "value": "read-only-storage",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbindingtype-read-only-storage"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpubufferbindingtype"
      },
      "GPUBufferBindingLayout": {
        "fragment": "dictionary GPUBufferBindingLayout {\n    GPUBufferBindingType type = \"uniform\";\n    boolean hasDynamicOffset = false;\n    GPUSize64 minBindingSize = 0;\n};",
        "type": "dictionary",
        "name": "GPUBufferBindingLayout",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "type",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBufferBindingType"
            },
            "default": {
              "type": "string",
              "value": "uniform"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbindinglayout-type"
          },
          {
            "type": "field",
            "name": "hasDynamicOffset",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbindinglayout-hasdynamicoffset"
          },
          {
            "type": "field",
            "name": "minBindingSize",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbindinglayout-minbindingsize"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpubufferbindinglayout"
      },
      "GPUSamplerBindingType": {
        "fragment": "enum GPUSamplerBindingType {\n    \"filtering\",\n    \"non-filtering\",\n    \"comparison\",\n};",
        "type": "enum",
        "name": "GPUSamplerBindingType",
        "values": [
          {
            "type": "enum-value",
            "value": "filtering",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerbindingtype-filtering"
          },
          {
            "type": "enum-value",
            "value": "non-filtering",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerbindingtype-non-filtering"
          },
          {
            "type": "enum-value",
            "value": "comparison",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerbindingtype-comparison"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpusamplerbindingtype"
      },
      "GPUSamplerBindingLayout": {
        "fragment": "dictionary GPUSamplerBindingLayout {\n    GPUSamplerBindingType type = \"filtering\";\n};",
        "type": "dictionary",
        "name": "GPUSamplerBindingLayout",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "type",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSamplerBindingType"
            },
            "default": {
              "type": "string",
              "value": "filtering"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpusamplerbindinglayout-type"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpusamplerbindinglayout"
      },
      "GPUTextureSampleType": {
        "fragment": "enum GPUTextureSampleType {\n    \"float\",\n    \"unfilterable-float\",\n    \"depth\",\n    \"sint\",\n    \"uint\",\n};",
        "type": "enum",
        "name": "GPUTextureSampleType",
        "values": [
          {
            "type": "enum-value",
            "value": "float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturesampletype-float"
          },
          {
            "type": "enum-value",
            "value": "unfilterable-float",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturesampletype-unfilterable-float"
          },
          {
            "type": "enum-value",
            "value": "depth",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturesampletype-depth"
          },
          {
            "type": "enum-value",
            "value": "sint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturesampletype-sint"
          },
          {
            "type": "enum-value",
            "value": "uint",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturesampletype-uint"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gputexturesampletype"
      },
      "GPUTextureBindingLayout": {
        "fragment": "dictionary GPUTextureBindingLayout {\n    GPUTextureSampleType sampleType = \"float\";\n    GPUTextureViewDimension viewDimension = \"2d\";\n    boolean multisampled = false;\n};",
        "type": "dictionary",
        "name": "GPUTextureBindingLayout",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "sampleType",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureSampleType"
            },
            "default": {
              "type": "string",
              "value": "float"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturebindinglayout-sampletype"
          },
          {
            "type": "field",
            "name": "viewDimension",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureViewDimension"
            },
            "default": {
              "type": "string",
              "value": "2d"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturebindinglayout-viewdimension"
          },
          {
            "type": "field",
            "name": "multisampled",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexturebindinglayout-multisampled"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gputexturebindinglayout"
      },
      "GPUStorageTextureAccess": {
        "fragment": "enum GPUStorageTextureAccess {\n    \"write-only\",\n    \"read-only\",\n    \"read-write\",\n};",
        "type": "enum",
        "name": "GPUStorageTextureAccess",
        "values": [
          {
            "type": "enum-value",
            "value": "write-only",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoragetextureaccess-write-only"
          },
          {
            "type": "enum-value",
            "value": "read-only",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoragetextureaccess-read-only"
          },
          {
            "type": "enum-value",
            "value": "read-write",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoragetextureaccess-read-write"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpustoragetextureaccess"
      },
      "GPUStorageTextureBindingLayout": {
        "fragment": "dictionary GPUStorageTextureBindingLayout {\n    GPUStorageTextureAccess access = \"write-only\";\n    required GPUTextureFormat format;\n    GPUTextureViewDimension viewDimension = \"2d\";\n};",
        "type": "dictionary",
        "name": "GPUStorageTextureBindingLayout",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "access",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStorageTextureAccess"
            },
            "default": {
              "type": "string",
              "value": "write-only"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoragetexturebindinglayout-access"
          },
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoragetexturebindinglayout-format"
          },
          {
            "type": "field",
            "name": "viewDimension",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureViewDimension"
            },
            "default": {
              "type": "string",
              "value": "2d"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoragetexturebindinglayout-viewdimension"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpustoragetexturebindinglayout"
      },
      "GPUExternalTextureBindingLayout": {
        "fragment": "dictionary GPUExternalTextureBindingLayout {\n};",
        "type": "dictionary",
        "name": "GPUExternalTextureBindingLayout",
        "inheritance": null,
        "members": [],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuexternaltexturebindinglayout"
      },
      "GPUBindGroup": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUBindGroup {\n};",
        "type": "interface",
        "name": "GPUBindGroup",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpubindgroup"
      },
      "GPUBindGroupDescriptor": {
        "fragment": "dictionary GPUBindGroupDescriptor\n         : GPUObjectDescriptorBase {\n    required GPUBindGroupLayout layout;\n    required sequence<GPUBindGroupEntry> entries;\n};",
        "type": "dictionary",
        "name": "GPUBindGroupDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "layout",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBindGroupLayout"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgroupdescriptor-layout"
          },
          {
            "type": "field",
            "name": "entries",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBindGroupEntry"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgroupdescriptor-entries"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpubindgroupdescriptor"
      },
      "GPUBindingResource": {
        "fragment": "typedef (GPUSampler or\n         GPUTexture or\n         GPUTextureView or\n         GPUBuffer or\n         GPUBufferBinding or\n         GPUExternalTexture) GPUBindingResource;",
        "type": "typedef",
        "name": "GPUBindingResource",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSampler"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTexture"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureView"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBuffer"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBufferBinding"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUExternalTexture"
            }
          ]
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpubindingresource"
      },
      "GPUBindGroupEntry": {
        "fragment": "dictionary GPUBindGroupEntry {\n    required GPUIndex32 binding;\n    required GPUBindingResource resource;\n};",
        "type": "dictionary",
        "name": "GPUBindGroupEntry",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "binding",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIndex32"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgroupentry-binding"
          },
          {
            "type": "field",
            "name": "resource",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBindingResource"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindgroupentry-resource"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpubindgroupentry"
      },
      "GPUBufferBinding": {
        "fragment": "dictionary GPUBufferBinding {\n    required GPUBuffer buffer;\n    GPUSize64 offset = 0;\n    GPUSize64 size;\n};",
        "type": "dictionary",
        "name": "GPUBufferBinding",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "buffer",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBuffer"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbinding-buffer"
          },
          {
            "type": "field",
            "name": "offset",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbinding-offset"
          },
          {
            "type": "field",
            "name": "size",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubufferbinding-size"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpubufferbinding"
      },
      "GPUPipelineLayout": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUPipelineLayout {\n};",
        "type": "interface",
        "name": "GPUPipelineLayout",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpupipelinelayout"
      },
      "GPUPipelineLayoutDescriptor": {
        "fragment": "dictionary GPUPipelineLayoutDescriptor\n         : GPUObjectDescriptorBase {\n    required sequence<GPUBindGroupLayout?> bindGroupLayouts;\n};",
        "type": "dictionary",
        "name": "GPUPipelineLayoutDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "bindGroupLayouts",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUBindGroupLayout"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelinelayoutdescriptor-bindgrouplayouts"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpupipelinelayoutdescriptor"
      },
      "GPUShaderModule": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUShaderModule {\n    Promise<GPUCompilationInfo> getCompilationInfo();\n};",
        "type": "interface",
        "name": "GPUShaderModule",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "getCompilationInfo",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCompilationInfo"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushadermodule-getcompilationinfo"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpushadermodule"
      },
      "GPUShaderModuleDescriptor": {
        "fragment": "dictionary GPUShaderModuleDescriptor\n         : GPUObjectDescriptorBase {\n    required USVString code;\n    sequence<GPUShaderModuleCompilationHint> compilationHints = [];\n};",
        "type": "dictionary",
        "name": "GPUShaderModuleDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "code",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushadermoduledescriptor-code"
          },
          {
            "type": "field",
            "name": "compilationHints",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUShaderModuleCompilationHint"
                }
              ]
            },
            "default": {
              "type": "sequence",
              "value": []
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushadermoduledescriptor-compilationhints"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpushadermoduledescriptor"
      },
      "GPUShaderModuleCompilationHint": {
        "fragment": "dictionary GPUShaderModuleCompilationHint {\n    required USVString entryPoint;\n    (GPUPipelineLayout or GPUAutoLayoutMode) layout;\n};",
        "type": "dictionary",
        "name": "GPUShaderModuleCompilationHint",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "entryPoint",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushadermodulecompilationhint-entrypoint"
          },
          {
            "type": "field",
            "name": "layout",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUPipelineLayout"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUAutoLayoutMode"
                }
              ]
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpushadermodulecompilationhint-layout"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpushadermodulecompilationhint"
      },
      "GPUCompilationMessageType": {
        "fragment": "enum GPUCompilationMessageType {\n    \"error\",\n    \"warning\",\n    \"info\",\n};",
        "type": "enum",
        "name": "GPUCompilationMessageType",
        "values": [
          {
            "type": "enum-value",
            "value": "error",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessagetype-error"
          },
          {
            "type": "enum-value",
            "value": "warning",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessagetype-warning"
          },
          {
            "type": "enum-value",
            "value": "info",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessagetype-info"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpucompilationmessagetype"
      },
      "GPUCompilationMessage": {
        "fragment": "[Exposed=(Window, Worker), Serializable, SecureContext]\ninterface GPUCompilationMessage {\n    readonly attribute DOMString message;\n    readonly attribute GPUCompilationMessageType type;\n    readonly attribute unsigned long long lineNum;\n    readonly attribute unsigned long long linePos;\n    readonly attribute unsigned long long offset;\n    readonly attribute unsigned long long length;\n};",
        "type": "interface",
        "name": "GPUCompilationMessage",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "message",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessage-message"
          },
          {
            "type": "attribute",
            "name": "type",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCompilationMessageType"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessage-type"
          },
          {
            "type": "attribute",
            "name": "lineNum",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessage-linenum"
          },
          {
            "type": "attribute",
            "name": "linePos",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessage-linepos"
          },
          {
            "type": "attribute",
            "name": "offset",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessage-offset"
          },
          {
            "type": "attribute",
            "name": "length",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationmessage-length"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Serializable",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucompilationmessage"
      },
      "GPUCompilationInfo": {
        "fragment": "[Exposed=(Window, Worker), Serializable, SecureContext]\ninterface GPUCompilationInfo {\n    readonly attribute FrozenArray<GPUCompilationMessage> messages;\n};",
        "type": "interface",
        "name": "GPUCompilationInfo",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "messages",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "FrozenArray",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCompilationMessage"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucompilationinfo-messages"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Serializable",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucompilationinfo"
      },
      "GPUPipelineError": {
        "fragment": "[Exposed=(Window, Worker), SecureContext, Serializable]\ninterface GPUPipelineError : DOMException {\n    constructor(optional DOMString message = \"\", GPUPipelineErrorInit options);\n    readonly attribute GPUPipelineErrorReason reason;\n};",
        "type": "interface",
        "name": "GPUPipelineError",
        "inheritance": "DOMException",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "message",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": {
                  "type": "string",
                  "value": ""
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUPipelineErrorInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelineerror-constructor"
          },
          {
            "type": "attribute",
            "name": "reason",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUPipelineErrorReason"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelineerror-reason"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Serializable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpupipelineerror"
      },
      "GPUPipelineErrorInit": {
        "fragment": "dictionary GPUPipelineErrorInit {\n    required GPUPipelineErrorReason reason;\n};",
        "type": "dictionary",
        "name": "GPUPipelineErrorInit",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "reason",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUPipelineErrorReason"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelineerrorinit-reason"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpupipelineerrorinit"
      },
      "GPUPipelineErrorReason": {
        "fragment": "enum GPUPipelineErrorReason {\n    \"validation\",\n    \"internal\",\n};",
        "type": "enum",
        "name": "GPUPipelineErrorReason",
        "values": [
          {
            "type": "enum-value",
            "value": "validation",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelineerrorreason-validation"
          },
          {
            "type": "enum-value",
            "value": "internal",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelineerrorreason-internal"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpupipelineerrorreason"
      },
      "GPUAutoLayoutMode": {
        "fragment": "enum GPUAutoLayoutMode {\n    \"auto\",\n};",
        "type": "enum",
        "name": "GPUAutoLayoutMode",
        "values": [
          {
            "type": "enum-value",
            "value": "auto",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuautolayoutmode-auto"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuautolayoutmode"
      },
      "GPUPipelineDescriptorBase": {
        "fragment": "dictionary GPUPipelineDescriptorBase\n         : GPUObjectDescriptorBase {\n    required (GPUPipelineLayout or GPUAutoLayoutMode) layout;\n};",
        "type": "dictionary",
        "name": "GPUPipelineDescriptorBase",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "layout",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUPipelineLayout"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUAutoLayoutMode"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelinedescriptorbase-layout"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpupipelinedescriptorbase"
      },
      "GPUPipelineBase": {
        "fragment": "interface mixin GPUPipelineBase {\n    [NewObject] GPUBindGroupLayout getBindGroupLayout(unsigned long index);\n};",
        "type": "interface mixin",
        "name": "GPUPipelineBase",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "getBindGroupLayout",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBindGroupLayout"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "NewObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpupipelinebase-getbindgrouplayout"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpupipelinebase"
      },
      "GPUProgrammableStage": {
        "fragment": "dictionary GPUProgrammableStage {\n    required GPUShaderModule module;\n    USVString entryPoint;\n    record<USVString, GPUPipelineConstantValue> constants = {};\n};",
        "type": "dictionary",
        "name": "GPUProgrammableStage",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "module",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUShaderModule"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprogrammablestage-module"
          },
          {
            "type": "field",
            "name": "entryPoint",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "USVString"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprogrammablestage-entrypoint"
          },
          {
            "type": "field",
            "name": "constants",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "record",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUPipelineConstantValue"
                }
              ]
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprogrammablestage-constants"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuprogrammablestage"
      },
      "GPUPipelineConstantValue": {
        "fragment": "typedef double GPUPipelineConstantValue;",
        "type": "typedef",
        "name": "GPUPipelineConstantValue",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "double"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpupipelineconstantvalue"
      },
      "GPUComputePipeline": {
        "fragment": "// May represent WGSL's bool, f32, i32, u32, and f16 if enabled.\n\n[Exposed=(Window, Worker), SecureContext]\ninterface GPUComputePipeline {\n};",
        "type": "interface",
        "name": "GPUComputePipeline",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucomputepipeline"
      },
      "GPUComputePipelineDescriptor": {
        "fragment": "dictionary GPUComputePipelineDescriptor\n         : GPUPipelineDescriptorBase {\n    required GPUProgrammableStage compute;\n};",
        "type": "dictionary",
        "name": "GPUComputePipelineDescriptor",
        "inheritance": "GPUPipelineDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "compute",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUProgrammableStage"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepipelinedescriptor-compute"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucomputepipelinedescriptor"
      },
      "GPURenderPipeline": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPURenderPipeline {\n};",
        "type": "interface",
        "name": "GPURenderPipeline",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpurenderpipeline"
      },
      "GPURenderPipelineDescriptor": {
        "fragment": "dictionary GPURenderPipelineDescriptor\n         : GPUPipelineDescriptorBase {\n    required GPUVertexState vertex;\n    GPUPrimitiveState primitive = {};\n    GPUDepthStencilState depthStencil;\n    GPUMultisampleState multisample = {};\n    GPUFragmentState fragment;\n};",
        "type": "dictionary",
        "name": "GPURenderPipelineDescriptor",
        "inheritance": "GPUPipelineDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "vertex",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUVertexState"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpipelinedescriptor-vertex"
          },
          {
            "type": "field",
            "name": "primitive",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUPrimitiveState"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpipelinedescriptor-primitive"
          },
          {
            "type": "field",
            "name": "depthStencil",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUDepthStencilState"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpipelinedescriptor-depthstencil"
          },
          {
            "type": "field",
            "name": "multisample",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUMultisampleState"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpipelinedescriptor-multisample"
          },
          {
            "type": "field",
            "name": "fragment",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFragmentState"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpipelinedescriptor-fragment"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpipelinedescriptor"
      },
      "GPUPrimitiveState": {
        "fragment": "dictionary GPUPrimitiveState {\n    GPUPrimitiveTopology topology = \"triangle-list\";\n    GPUIndexFormat stripIndexFormat;\n    GPUFrontFace frontFace = \"ccw\";\n    GPUCullMode cullMode = \"none\";\n\n    // Requires \"depth-clip-control\" feature.\n    boolean unclippedDepth = false;\n};",
        "type": "dictionary",
        "name": "GPUPrimitiveState",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "topology",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUPrimitiveTopology"
            },
            "default": {
              "type": "string",
              "value": "triangle-list"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivestate-topology"
          },
          {
            "type": "field",
            "name": "stripIndexFormat",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIndexFormat"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivestate-stripindexformat"
          },
          {
            "type": "field",
            "name": "frontFace",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFrontFace"
            },
            "default": {
              "type": "string",
              "value": "ccw"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivestate-frontface"
          },
          {
            "type": "field",
            "name": "cullMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCullMode"
            },
            "default": {
              "type": "string",
              "value": "none"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivestate-cullmode"
          },
          {
            "type": "field",
            "name": "unclippedDepth",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivestate-unclippeddepth"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuprimitivestate"
      },
      "GPUPrimitiveTopology": {
        "fragment": "enum GPUPrimitiveTopology {\n    \"point-list\",\n    \"line-list\",\n    \"line-strip\",\n    \"triangle-list\",\n    \"triangle-strip\",\n};",
        "type": "enum",
        "name": "GPUPrimitiveTopology",
        "values": [
          {
            "type": "enum-value",
            "value": "point-list",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivetopology-point-list"
          },
          {
            "type": "enum-value",
            "value": "line-list",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivetopology-line-list"
          },
          {
            "type": "enum-value",
            "value": "line-strip",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivetopology-line-strip"
          },
          {
            "type": "enum-value",
            "value": "triangle-list",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivetopology-triangle-list"
          },
          {
            "type": "enum-value",
            "value": "triangle-strip",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuprimitivetopology-triangle-strip"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuprimitivetopology"
      },
      "GPUFrontFace": {
        "fragment": "enum GPUFrontFace {\n    \"ccw\",\n    \"cw\",\n};",
        "type": "enum",
        "name": "GPUFrontFace",
        "values": [
          {
            "type": "enum-value",
            "value": "ccw",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufrontface-ccw"
          },
          {
            "type": "enum-value",
            "value": "cw",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufrontface-cw"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpufrontface"
      },
      "GPUCullMode": {
        "fragment": "enum GPUCullMode {\n    \"none\",\n    \"front\",\n    \"back\",\n};",
        "type": "enum",
        "name": "GPUCullMode",
        "values": [
          {
            "type": "enum-value",
            "value": "none",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucullmode-none"
          },
          {
            "type": "enum-value",
            "value": "front",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucullmode-front"
          },
          {
            "type": "enum-value",
            "value": "back",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucullmode-back"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpucullmode"
      },
      "GPUMultisampleState": {
        "fragment": "dictionary GPUMultisampleState {\n    GPUSize32 count = 1;\n    GPUSampleMask mask = 0xFFFFFFFF;\n    boolean alphaToCoverageEnabled = false;\n};",
        "type": "dictionary",
        "name": "GPUMultisampleState",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "count",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumultisamplestate-count"
          },
          {
            "type": "field",
            "name": "mask",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSampleMask"
            },
            "default": {
              "type": "number",
              "value": "0xFFFFFFFF"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumultisamplestate-mask"
          },
          {
            "type": "field",
            "name": "alphaToCoverageEnabled",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpumultisamplestate-alphatocoverageenabled"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpumultisamplestate"
      },
      "GPUFragmentState": {
        "fragment": "dictionary GPUFragmentState\n         : GPUProgrammableStage {\n    required sequence<GPUColorTargetState?> targets;\n};",
        "type": "dictionary",
        "name": "GPUFragmentState",
        "inheritance": "GPUProgrammableStage",
        "members": [
          {
            "type": "field",
            "name": "targets",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUColorTargetState"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpufragmentstate-targets"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpufragmentstate"
      },
      "GPUColorTargetState": {
        "fragment": "dictionary GPUColorTargetState {\n    required GPUTextureFormat format;\n\n    GPUBlendState blend;\n    GPUColorWriteFlags writeMask = 0xF;  // GPUColorWrite.ALL\n};",
        "type": "dictionary",
        "name": "GPUColorTargetState",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolortargetstate-format"
          },
          {
            "type": "field",
            "name": "blend",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBlendState"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolortargetstate-blend"
          },
          {
            "type": "field",
            "name": "writeMask",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUColorWriteFlags"
            },
            "default": {
              "type": "number",
              "value": "0xF"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolortargetstate-writemask"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucolortargetstate"
      },
      "GPUBlendState": {
        "fragment": "dictionary GPUBlendState {\n    required GPUBlendComponent color;\n    required GPUBlendComponent alpha;\n};",
        "type": "dictionary",
        "name": "GPUBlendState",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "color",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBlendComponent"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendstate-color"
          },
          {
            "type": "field",
            "name": "alpha",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBlendComponent"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendstate-alpha"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpublendstate"
      },
      "GPUColorWriteFlags": {
        "fragment": "typedef [EnforceRange] unsigned long GPUColorWriteFlags;",
        "type": "typedef",
        "name": "GPUColorWriteFlags",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpucolorwriteflags"
      },
      "GPUColorWrite": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\nnamespace GPUColorWrite {\n    const GPUFlagsConstant RED   = 0x1;\n    const GPUFlagsConstant GREEN = 0x2;\n    const GPUFlagsConstant BLUE  = 0x4;\n    const GPUFlagsConstant ALPHA = 0x8;\n    const GPUFlagsConstant ALL   = 0xF;\n};",
        "type": "namespace",
        "name": "GPUColorWrite",
        "inheritance": null,
        "members": [
          {
            "type": "const",
            "name": "RED",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x1"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolorwrite-red"
          },
          {
            "type": "const",
            "name": "GREEN",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x2"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolorwrite-green"
          },
          {
            "type": "const",
            "name": "BLUE",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x4"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolorwrite-blue"
          },
          {
            "type": "const",
            "name": "ALPHA",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0x8"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolorwrite-alpha"
          },
          {
            "type": "const",
            "name": "ALL",
            "idlType": {
              "type": "const-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUFlagsConstant"
            },
            "extAttrs": [],
            "value": {
              "type": "number",
              "value": "0xF"
            },
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolorwrite-all"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#namespacedef-gpucolorwrite"
      },
      "GPUBlendComponent": {
        "fragment": "dictionary GPUBlendComponent {\n    GPUBlendOperation operation = \"add\";\n    GPUBlendFactor srcFactor = \"one\";\n    GPUBlendFactor dstFactor = \"zero\";\n};",
        "type": "dictionary",
        "name": "GPUBlendComponent",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "operation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBlendOperation"
            },
            "default": {
              "type": "string",
              "value": "add"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendcomponent-operation"
          },
          {
            "type": "field",
            "name": "srcFactor",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBlendFactor"
            },
            "default": {
              "type": "string",
              "value": "one"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendcomponent-srcfactor"
          },
          {
            "type": "field",
            "name": "dstFactor",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBlendFactor"
            },
            "default": {
              "type": "string",
              "value": "zero"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendcomponent-dstfactor"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpublendcomponent"
      },
      "GPUBlendFactor": {
        "fragment": "enum GPUBlendFactor {\n    \"zero\",\n    \"one\",\n    \"src\",\n    \"one-minus-src\",\n    \"src-alpha\",\n    \"one-minus-src-alpha\",\n    \"dst\",\n    \"one-minus-dst\",\n    \"dst-alpha\",\n    \"one-minus-dst-alpha\",\n    \"src-alpha-saturated\",\n    \"constant\",\n    \"one-minus-constant\",\n    \"src1\",\n    \"one-minus-src1\",\n    \"src1-alpha\",\n    \"one-minus-src1-alpha\",\n};",
        "type": "enum",
        "name": "GPUBlendFactor",
        "values": [
          {
            "type": "enum-value",
            "value": "zero",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-zero"
          },
          {
            "type": "enum-value",
            "value": "one",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one"
          },
          {
            "type": "enum-value",
            "value": "src",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-src"
          },
          {
            "type": "enum-value",
            "value": "one-minus-src",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-src"
          },
          {
            "type": "enum-value",
            "value": "src-alpha",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-src-alpha"
          },
          {
            "type": "enum-value",
            "value": "one-minus-src-alpha",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-src-alpha"
          },
          {
            "type": "enum-value",
            "value": "dst",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-dst"
          },
          {
            "type": "enum-value",
            "value": "one-minus-dst",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-dst"
          },
          {
            "type": "enum-value",
            "value": "dst-alpha",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-dst-alpha"
          },
          {
            "type": "enum-value",
            "value": "one-minus-dst-alpha",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-dst-alpha"
          },
          {
            "type": "enum-value",
            "value": "src-alpha-saturated",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-src-alpha-saturated"
          },
          {
            "type": "enum-value",
            "value": "constant",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-constant"
          },
          {
            "type": "enum-value",
            "value": "one-minus-constant",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-constant"
          },
          {
            "type": "enum-value",
            "value": "src1",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-src1"
          },
          {
            "type": "enum-value",
            "value": "one-minus-src1",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-src1"
          },
          {
            "type": "enum-value",
            "value": "src1-alpha",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-src1-alpha"
          },
          {
            "type": "enum-value",
            "value": "one-minus-src1-alpha",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendfactor-one-minus-src1-alpha"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpublendfactor"
      },
      "GPUBlendOperation": {
        "fragment": "enum GPUBlendOperation {\n    \"add\",\n    \"subtract\",\n    \"reverse-subtract\",\n    \"min\",\n    \"max\",\n};",
        "type": "enum",
        "name": "GPUBlendOperation",
        "values": [
          {
            "type": "enum-value",
            "value": "add",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendoperation-add"
          },
          {
            "type": "enum-value",
            "value": "subtract",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendoperation-subtract"
          },
          {
            "type": "enum-value",
            "value": "reverse-subtract",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendoperation-reverse-subtract"
          },
          {
            "type": "enum-value",
            "value": "min",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendoperation-min"
          },
          {
            "type": "enum-value",
            "value": "max",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpublendoperation-max"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpublendoperation"
      },
      "GPUDepthStencilState": {
        "fragment": "dictionary GPUDepthStencilState {\n    required GPUTextureFormat format;\n\n    boolean depthWriteEnabled;\n    GPUCompareFunction depthCompare;\n\n    GPUStencilFaceState stencilFront = {};\n    GPUStencilFaceState stencilBack = {};\n\n    GPUStencilValue stencilReadMask = 0xFFFFFFFF;\n    GPUStencilValue stencilWriteMask = 0xFFFFFFFF;\n\n    GPUDepthBias depthBias = 0;\n    float depthBiasSlopeScale = 0;\n    float depthBiasClamp = 0;\n};",
        "type": "dictionary",
        "name": "GPUDepthStencilState",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-format"
          },
          {
            "type": "field",
            "name": "depthWriteEnabled",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-depthwriteenabled"
          },
          {
            "type": "field",
            "name": "depthCompare",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCompareFunction"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-depthcompare"
          },
          {
            "type": "field",
            "name": "stencilFront",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilFaceState"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-stencilfront"
          },
          {
            "type": "field",
            "name": "stencilBack",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilFaceState"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-stencilback"
          },
          {
            "type": "field",
            "name": "stencilReadMask",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilValue"
            },
            "default": {
              "type": "number",
              "value": "0xFFFFFFFF"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-stencilreadmask"
          },
          {
            "type": "field",
            "name": "stencilWriteMask",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilValue"
            },
            "default": {
              "type": "number",
              "value": "0xFFFFFFFF"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-stencilwritemask"
          },
          {
            "type": "field",
            "name": "depthBias",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUDepthBias"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-depthbias"
          },
          {
            "type": "field",
            "name": "depthBiasSlopeScale",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "float"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-depthbiasslopescale"
          },
          {
            "type": "field",
            "name": "depthBiasClamp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "float"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudepthstencilstate-depthbiasclamp"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpudepthstencilstate"
      },
      "GPUStencilFaceState": {
        "fragment": "dictionary GPUStencilFaceState {\n    GPUCompareFunction compare = \"always\";\n    GPUStencilOperation failOp = \"keep\";\n    GPUStencilOperation depthFailOp = \"keep\";\n    GPUStencilOperation passOp = \"keep\";\n};",
        "type": "dictionary",
        "name": "GPUStencilFaceState",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "compare",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCompareFunction"
            },
            "default": {
              "type": "string",
              "value": "always"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustencilfacestate-compare"
          },
          {
            "type": "field",
            "name": "failOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilOperation"
            },
            "default": {
              "type": "string",
              "value": "keep"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustencilfacestate-failop"
          },
          {
            "type": "field",
            "name": "depthFailOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilOperation"
            },
            "default": {
              "type": "string",
              "value": "keep"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustencilfacestate-depthfailop"
          },
          {
            "type": "field",
            "name": "passOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilOperation"
            },
            "default": {
              "type": "string",
              "value": "keep"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustencilfacestate-passop"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpustencilfacestate"
      },
      "GPUStencilOperation": {
        "fragment": "enum GPUStencilOperation {\n    \"keep\",\n    \"zero\",\n    \"replace\",\n    \"invert\",\n    \"increment-clamp\",\n    \"decrement-clamp\",\n    \"increment-wrap\",\n    \"decrement-wrap\",\n};",
        "type": "enum",
        "name": "GPUStencilOperation",
        "values": [
          {
            "type": "enum-value",
            "value": "keep",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-keep"
          },
          {
            "type": "enum-value",
            "value": "zero",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-zero"
          },
          {
            "type": "enum-value",
            "value": "replace",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-replace"
          },
          {
            "type": "enum-value",
            "value": "invert",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-invert"
          },
          {
            "type": "enum-value",
            "value": "increment-clamp",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-increment-clamp"
          },
          {
            "type": "enum-value",
            "value": "decrement-clamp",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-decrement-clamp"
          },
          {
            "type": "enum-value",
            "value": "increment-wrap",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-increment-wrap"
          },
          {
            "type": "enum-value",
            "value": "decrement-wrap",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustenciloperation-decrement-wrap"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpustenciloperation"
      },
      "GPUIndexFormat": {
        "fragment": "enum GPUIndexFormat {\n    \"uint16\",\n    \"uint32\",\n};",
        "type": "enum",
        "name": "GPUIndexFormat",
        "values": [
          {
            "type": "enum-value",
            "value": "uint16",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuindexformat-uint16"
          },
          {
            "type": "enum-value",
            "value": "uint32",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuindexformat-uint32"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuindexformat"
      },
      "GPUVertexFormat": {
        "fragment": "enum GPUVertexFormat {\n    \"uint8\",\n    \"uint8x2\",\n    \"uint8x4\",\n    \"sint8\",\n    \"sint8x2\",\n    \"sint8x4\",\n    \"unorm8\",\n    \"unorm8x2\",\n    \"unorm8x4\",\n    \"snorm8\",\n    \"snorm8x2\",\n    \"snorm8x4\",\n    \"uint16\",\n    \"uint16x2\",\n    \"uint16x4\",\n    \"sint16\",\n    \"sint16x2\",\n    \"sint16x4\",\n    \"unorm16\",\n    \"unorm16x2\",\n    \"unorm16x4\",\n    \"snorm16\",\n    \"snorm16x2\",\n    \"snorm16x4\",\n    \"float16\",\n    \"float16x2\",\n    \"float16x4\",\n    \"float32\",\n    \"float32x2\",\n    \"float32x3\",\n    \"float32x4\",\n    \"uint32\",\n    \"uint32x2\",\n    \"uint32x3\",\n    \"uint32x4\",\n    \"sint32\",\n    \"sint32x2\",\n    \"sint32x3\",\n    \"sint32x4\",\n    \"unorm10-10-10-2\",\n    \"unorm8x4-bgra\",\n};",
        "type": "enum",
        "name": "GPUVertexFormat",
        "values": [
          {
            "type": "enum-value",
            "value": "uint8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint8"
          },
          {
            "type": "enum-value",
            "value": "uint8x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint8x2"
          },
          {
            "type": "enum-value",
            "value": "uint8x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint8x4"
          },
          {
            "type": "enum-value",
            "value": "sint8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint8"
          },
          {
            "type": "enum-value",
            "value": "sint8x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint8x2"
          },
          {
            "type": "enum-value",
            "value": "sint8x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint8x4"
          },
          {
            "type": "enum-value",
            "value": "unorm8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm8"
          },
          {
            "type": "enum-value",
            "value": "unorm8x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm8x2"
          },
          {
            "type": "enum-value",
            "value": "unorm8x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm8x4"
          },
          {
            "type": "enum-value",
            "value": "snorm8",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-snorm8"
          },
          {
            "type": "enum-value",
            "value": "snorm8x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-snorm8x2"
          },
          {
            "type": "enum-value",
            "value": "snorm8x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-snorm8x4"
          },
          {
            "type": "enum-value",
            "value": "uint16",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint16"
          },
          {
            "type": "enum-value",
            "value": "uint16x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint16x2"
          },
          {
            "type": "enum-value",
            "value": "uint16x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint16x4"
          },
          {
            "type": "enum-value",
            "value": "sint16",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint16"
          },
          {
            "type": "enum-value",
            "value": "sint16x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint16x2"
          },
          {
            "type": "enum-value",
            "value": "sint16x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint16x4"
          },
          {
            "type": "enum-value",
            "value": "unorm16",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm16"
          },
          {
            "type": "enum-value",
            "value": "unorm16x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm16x2"
          },
          {
            "type": "enum-value",
            "value": "unorm16x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm16x4"
          },
          {
            "type": "enum-value",
            "value": "snorm16",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-snorm16"
          },
          {
            "type": "enum-value",
            "value": "snorm16x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-snorm16x2"
          },
          {
            "type": "enum-value",
            "value": "snorm16x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-snorm16x4"
          },
          {
            "type": "enum-value",
            "value": "float16",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float16"
          },
          {
            "type": "enum-value",
            "value": "float16x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float16x2"
          },
          {
            "type": "enum-value",
            "value": "float16x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float16x4"
          },
          {
            "type": "enum-value",
            "value": "float32",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float32"
          },
          {
            "type": "enum-value",
            "value": "float32x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float32x2"
          },
          {
            "type": "enum-value",
            "value": "float32x3",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float32x3"
          },
          {
            "type": "enum-value",
            "value": "float32x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-float32x4"
          },
          {
            "type": "enum-value",
            "value": "uint32",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint32"
          },
          {
            "type": "enum-value",
            "value": "uint32x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint32x2"
          },
          {
            "type": "enum-value",
            "value": "uint32x3",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint32x3"
          },
          {
            "type": "enum-value",
            "value": "uint32x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-uint32x4"
          },
          {
            "type": "enum-value",
            "value": "sint32",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint32"
          },
          {
            "type": "enum-value",
            "value": "sint32x2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint32x2"
          },
          {
            "type": "enum-value",
            "value": "sint32x3",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint32x3"
          },
          {
            "type": "enum-value",
            "value": "sint32x4",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-sint32x4"
          },
          {
            "type": "enum-value",
            "value": "unorm10-10-10-2",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm10-10-10-2"
          },
          {
            "type": "enum-value",
            "value": "unorm8x4-bgra",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexformat-unorm8x4-bgra"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexformat"
      },
      "GPUVertexStepMode": {
        "fragment": "enum GPUVertexStepMode {\n    \"vertex\",\n    \"instance\",\n};",
        "type": "enum",
        "name": "GPUVertexStepMode",
        "values": [
          {
            "type": "enum-value",
            "value": "vertex",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexstepmode-vertex"
          },
          {
            "type": "enum-value",
            "value": "instance",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexstepmode-instance"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuvertexstepmode"
      },
      "GPUVertexState": {
        "fragment": "dictionary GPUVertexState\n         : GPUProgrammableStage {\n    sequence<GPUVertexBufferLayout?> buffers = [];\n};",
        "type": "dictionary",
        "name": "GPUVertexState",
        "inheritance": "GPUProgrammableStage",
        "members": [
          {
            "type": "field",
            "name": "buffers",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUVertexBufferLayout"
                }
              ]
            },
            "default": {
              "type": "sequence",
              "value": []
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexstate-buffers"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuvertexstate"
      },
      "GPUVertexBufferLayout": {
        "fragment": "dictionary GPUVertexBufferLayout {\n    required GPUSize64 arrayStride;\n    GPUVertexStepMode stepMode = \"vertex\";\n    required sequence<GPUVertexAttribute> attributes;\n};",
        "type": "dictionary",
        "name": "GPUVertexBufferLayout",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "arrayStride",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexbufferlayout-arraystride"
          },
          {
            "type": "field",
            "name": "stepMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUVertexStepMode"
            },
            "default": {
              "type": "string",
              "value": "vertex"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexbufferlayout-stepmode"
          },
          {
            "type": "field",
            "name": "attributes",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUVertexAttribute"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexbufferlayout-attributes"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuvertexbufferlayout"
      },
      "GPUVertexAttribute": {
        "fragment": "dictionary GPUVertexAttribute {\n    required GPUVertexFormat format;\n    required GPUSize64 offset;\n\n    required GPUIndex32 shaderLocation;\n};",
        "type": "dictionary",
        "name": "GPUVertexAttribute",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUVertexFormat"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexattribute-format"
          },
          {
            "type": "field",
            "name": "offset",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexattribute-offset"
          },
          {
            "type": "field",
            "name": "shaderLocation",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIndex32"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvertexattribute-shaderlocation"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuvertexattribute"
      },
      "GPUTexelCopyBufferLayout": {
        "fragment": "dictionary GPUTexelCopyBufferLayout {\n    GPUSize64 offset = 0;\n    GPUSize32 bytesPerRow;\n    GPUSize32 rowsPerImage;\n};",
        "type": "dictionary",
        "name": "GPUTexelCopyBufferLayout",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "offset",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopybufferlayout-offset"
          },
          {
            "type": "field",
            "name": "bytesPerRow",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopybufferlayout-bytesperrow"
          },
          {
            "type": "field",
            "name": "rowsPerImage",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopybufferlayout-rowsperimage"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gputexelcopybufferlayout"
      },
      "GPUTexelCopyBufferInfo": {
        "fragment": "dictionary GPUTexelCopyBufferInfo\n         : GPUTexelCopyBufferLayout {\n    required GPUBuffer buffer;\n};",
        "type": "dictionary",
        "name": "GPUTexelCopyBufferInfo",
        "inheritance": "GPUTexelCopyBufferLayout",
        "members": [
          {
            "type": "field",
            "name": "buffer",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUBuffer"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopybufferinfo-buffer"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gputexelcopybufferinfo"
      },
      "GPUTexelCopyTextureInfo": {
        "fragment": "dictionary GPUTexelCopyTextureInfo {\n    required GPUTexture texture;\n    GPUIntegerCoordinate mipLevel = 0;\n    GPUOrigin3D origin = {};\n    GPUTextureAspect aspect = \"all\";\n};",
        "type": "dictionary",
        "name": "GPUTexelCopyTextureInfo",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "texture",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTexture"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopytextureinfo-texture"
          },
          {
            "type": "field",
            "name": "mipLevel",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopytextureinfo-miplevel"
          },
          {
            "type": "field",
            "name": "origin",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUOrigin3D"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopytextureinfo-origin"
          },
          {
            "type": "field",
            "name": "aspect",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureAspect"
            },
            "default": {
              "type": "string",
              "value": "all"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gputexelcopytextureinfo-aspect"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gputexelcopytextureinfo"
      },
      "GPUCopyExternalImageDestInfo": {
        "fragment": "dictionary GPUCopyExternalImageDestInfo\n         : GPUTexelCopyTextureInfo {\n    PredefinedColorSpace colorSpace = \"srgb\";\n    boolean premultipliedAlpha = false;\n};",
        "type": "dictionary",
        "name": "GPUCopyExternalImageDestInfo",
        "inheritance": "GPUTexelCopyTextureInfo",
        "members": [
          {
            "type": "field",
            "name": "colorSpace",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PredefinedColorSpace"
            },
            "default": {
              "type": "string",
              "value": "srgb"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucopyexternalimagedestinfo-colorspace"
          },
          {
            "type": "field",
            "name": "premultipliedAlpha",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucopyexternalimagedestinfo-premultipliedalpha"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucopyexternalimagedestinfo"
      },
      "GPUCopyExternalImageSource": {
        "fragment": "typedef (ImageBitmap or\n         ImageData or\n         HTMLImageElement or\n         HTMLVideoElement or\n         VideoFrame or\n         HTMLCanvasElement or\n         OffscreenCanvas) GPUCopyExternalImageSource;",
        "type": "typedef",
        "name": "GPUCopyExternalImageSource",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ImageBitmap"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ImageData"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "HTMLImageElement"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "HTMLVideoElement"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "VideoFrame"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "HTMLCanvasElement"
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "OffscreenCanvas"
            }
          ]
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpucopyexternalimagesource"
      },
      "GPUCopyExternalImageSourceInfo": {
        "fragment": "dictionary GPUCopyExternalImageSourceInfo {\n    required GPUCopyExternalImageSource source;\n    GPUOrigin2D origin = {};\n    boolean flipY = false;\n};",
        "type": "dictionary",
        "name": "GPUCopyExternalImageSourceInfo",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "source",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCopyExternalImageSource"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucopyexternalimagesourceinfo-source"
          },
          {
            "type": "field",
            "name": "origin",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUOrigin2D"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucopyexternalimagesourceinfo-origin"
          },
          {
            "type": "field",
            "name": "flipY",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucopyexternalimagesourceinfo-flipy"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucopyexternalimagesourceinfo"
      },
      "GPUCommandBuffer": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUCommandBuffer {\n};",
        "type": "interface",
        "name": "GPUCommandBuffer",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucommandbuffer"
      },
      "GPUCommandBufferDescriptor": {
        "fragment": "dictionary GPUCommandBufferDescriptor\n         : GPUObjectDescriptorBase {\n};",
        "type": "dictionary",
        "name": "GPUCommandBufferDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucommandbufferdescriptor"
      },
      "GPUCommandsMixin": {
        "fragment": "interface mixin GPUCommandsMixin {\n};",
        "type": "interface mixin",
        "name": "GPUCommandsMixin",
        "inheritance": null,
        "members": [],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucommandsmixin"
      },
      "GPUCommandEncoder": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUCommandEncoder {\n    GPURenderPassEncoder beginRenderPass(GPURenderPassDescriptor descriptor);\n    GPUComputePassEncoder beginComputePass(optional GPUComputePassDescriptor descriptor = {});\n\n    undefined copyBufferToBuffer(\n        GPUBuffer source,\n        GPUBuffer destination,\n        optional GPUSize64 size);\n    undefined copyBufferToBuffer(\n        GPUBuffer source,\n        GPUSize64 sourceOffset,\n        GPUBuffer destination,\n        GPUSize64 destinationOffset,\n        optional GPUSize64 size);\n\n    undefined copyBufferToTexture(\n        GPUTexelCopyBufferInfo source,\n        GPUTexelCopyTextureInfo destination,\n        GPUExtent3D copySize);\n\n    undefined copyTextureToBuffer(\n        GPUTexelCopyTextureInfo source,\n        GPUTexelCopyBufferInfo destination,\n        GPUExtent3D copySize);\n\n    undefined copyTextureToTexture(\n        GPUTexelCopyTextureInfo source,\n        GPUTexelCopyTextureInfo destination,\n        GPUExtent3D copySize);\n\n    undefined clearBuffer(\n        GPUBuffer buffer,\n        optional GPUSize64 offset = 0,\n        optional GPUSize64 size);\n\n    undefined resolveQuerySet(\n        GPUQuerySet querySet,\n        GPUSize32 firstQuery,\n        GPUSize32 queryCount,\n        GPUBuffer destination,\n        GPUSize64 destinationOffset);\n\n    GPUCommandBuffer finish(optional GPUCommandBufferDescriptor descriptor = {});\n};",
        "type": "interface",
        "name": "GPUCommandEncoder",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "beginRenderPass",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPURenderPassEncoder"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderPassDescriptor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-beginrenderpass"
          },
          {
            "type": "operation",
            "name": "beginComputePass",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUComputePassEncoder"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUComputePassDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-begincomputepass"
          },
          {
            "type": "operation",
            "name": "copyBufferToBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "source",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copybuffertobuffer"
          },
          {
            "type": "operation",
            "name": "copyBufferToBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "source",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "sourceOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destinationOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copybuffertobuffer-source-sourceoffset-destination-destinationoffset-size"
          },
          {
            "type": "operation",
            "name": "copyBufferToTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "source",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyBufferInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyTextureInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "copySize",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUExtent3D"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copybuffertotexture"
          },
          {
            "type": "operation",
            "name": "copyTextureToBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "source",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyTextureInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyBufferInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "copySize",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUExtent3D"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copytexturetobuffer"
          },
          {
            "type": "operation",
            "name": "copyTextureToTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "source",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyTextureInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyTextureInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "copySize",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUExtent3D"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-copytexturetotexture"
          },
          {
            "type": "operation",
            "name": "clearBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "buffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "offset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-clearbuffer"
          },
          {
            "type": "operation",
            "name": "resolveQuerySet",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "querySet",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUQuerySet"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "firstQuery",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "queryCount",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destinationOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-resolvequeryset"
          },
          {
            "type": "operation",
            "name": "finish",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCommandBuffer"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCommandBufferDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucommandencoder-finish"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucommandencoder"
      },
      "GPUCommandEncoderDescriptor": {
        "fragment": "dictionary GPUCommandEncoderDescriptor\n         : GPUObjectDescriptorBase {\n};",
        "type": "dictionary",
        "name": "GPUCommandEncoderDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucommandencoderdescriptor"
      },
      "GPUBindingCommandsMixin": {
        "fragment": "interface mixin GPUBindingCommandsMixin {\n    undefined setBindGroup(GPUIndex32 index, GPUBindGroup? bindGroup,\n        optional sequence<GPUBufferDynamicOffset> dynamicOffsets = []);\n\n    undefined setBindGroup(GPUIndex32 index, GPUBindGroup? bindGroup,\n        [AllowShared] Uint32Array dynamicOffsetsData,\n        GPUSize64 dynamicOffsetsDataStart,\n        GPUSize32 dynamicOffsetsDataLength);\n};",
        "type": "interface mixin",
        "name": "GPUBindingCommandsMixin",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "setBindGroup",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIndex32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "bindGroup",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUBindGroup"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "dynamicOffsets",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "GPUBufferDynamicOffset"
                    }
                  ]
                },
                "default": {
                  "type": "sequence",
                  "value": []
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindingcommandsmixin-setbindgroup"
          },
          {
            "type": "operation",
            "name": "setBindGroup",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "index",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIndex32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "bindGroup",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUBindGroup"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "dynamicOffsetsData",
                "extAttrs": [
                  {
                    "type": "extended-attribute",
                    "name": "AllowShared",
                    "rhs": null,
                    "arguments": []
                  }
                ],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "Uint32Array"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "dynamicOffsetsDataStart",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "dynamicOffsetsDataLength",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpubindingcommandsmixin-setbindgroup-index-bindgroup-dynamicoffsetsdata-dynamicoffsetsdatastart-dynamicoffsetsdatalength"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpubindingcommandsmixin"
      },
      "GPUDebugCommandsMixin": {
        "fragment": "interface mixin GPUDebugCommandsMixin {\n    undefined pushDebugGroup(USVString groupLabel);\n    undefined popDebugGroup();\n    undefined insertDebugMarker(USVString markerLabel);\n};",
        "type": "interface mixin",
        "name": "GPUDebugCommandsMixin",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "pushDebugGroup",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "groupLabel",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudebugcommandsmixin-pushdebuggroup"
          },
          {
            "type": "operation",
            "name": "popDebugGroup",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudebugcommandsmixin-popdebuggroup"
          },
          {
            "type": "operation",
            "name": "insertDebugMarker",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "markerLabel",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "USVString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudebugcommandsmixin-insertdebugmarker"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpudebugcommandsmixin"
      },
      "GPUComputePassEncoder": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUComputePassEncoder {\n    undefined setPipeline(GPUComputePipeline pipeline);\n    undefined dispatchWorkgroups(GPUSize32 workgroupCountX, optional GPUSize32 workgroupCountY = 1, optional GPUSize32 workgroupCountZ = 1);\n    undefined dispatchWorkgroupsIndirect(GPUBuffer indirectBuffer, GPUSize64 indirectOffset);\n\n    undefined end();\n};",
        "type": "interface",
        "name": "GPUComputePassEncoder",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "setPipeline",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "pipeline",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUComputePipeline"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepassencoder-setpipeline"
          },
          {
            "type": "operation",
            "name": "dispatchWorkgroups",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "workgroupCountX",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "workgroupCountY",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "1"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "workgroupCountZ",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "1"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepassencoder-dispatchworkgroups"
          },
          {
            "type": "operation",
            "name": "dispatchWorkgroupsIndirect",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "indirectBuffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "indirectOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepassencoder-dispatchworkgroupsindirect"
          },
          {
            "type": "operation",
            "name": "end",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepassencoder-end"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucomputepassencoder"
      },
      "GPUComputePassTimestampWrites": {
        "fragment": "dictionary GPUComputePassTimestampWrites {\n    required GPUQuerySet querySet;\n    GPUSize32 beginningOfPassWriteIndex;\n    GPUSize32 endOfPassWriteIndex;\n};",
        "type": "dictionary",
        "name": "GPUComputePassTimestampWrites",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "querySet",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQuerySet"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepasstimestampwrites-queryset"
          },
          {
            "type": "field",
            "name": "beginningOfPassWriteIndex",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepasstimestampwrites-beginningofpasswriteindex"
          },
          {
            "type": "field",
            "name": "endOfPassWriteIndex",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepasstimestampwrites-endofpasswriteindex"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucomputepasstimestampwrites"
      },
      "GPUComputePassDescriptor": {
        "fragment": "dictionary GPUComputePassDescriptor\n         : GPUObjectDescriptorBase {\n    GPUComputePassTimestampWrites timestampWrites;\n};",
        "type": "dictionary",
        "name": "GPUComputePassDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "timestampWrites",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUComputePassTimestampWrites"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucomputepassdescriptor-timestampwrites"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucomputepassdescriptor"
      },
      "GPURenderPassEncoder": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPURenderPassEncoder {\n    undefined setViewport(float x, float y,\n        float width, float height,\n        float minDepth, float maxDepth);\n\n    undefined setScissorRect(GPUIntegerCoordinate x, GPUIntegerCoordinate y,\n                        GPUIntegerCoordinate width, GPUIntegerCoordinate height);\n\n    undefined setBlendConstant(GPUColor color);\n    undefined setStencilReference(GPUStencilValue reference);\n\n    undefined beginOcclusionQuery(GPUSize32 queryIndex);\n    undefined endOcclusionQuery();\n\n    undefined executeBundles(sequence<GPURenderBundle> bundles);\n    undefined end();\n};",
        "type": "interface",
        "name": "GPURenderPassEncoder",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "setViewport",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "x",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "float"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "y",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "float"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "width",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "float"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "height",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "float"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "minDepth",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "float"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "maxDepth",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "float"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-setviewport"
          },
          {
            "type": "operation",
            "name": "setScissorRect",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "x",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "y",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "width",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "height",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-setscissorrect"
          },
          {
            "type": "operation",
            "name": "setBlendConstant",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "color",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUColor"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-setblendconstant"
          },
          {
            "type": "operation",
            "name": "setStencilReference",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "reference",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUStencilValue"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-setstencilreference"
          },
          {
            "type": "operation",
            "name": "beginOcclusionQuery",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "queryIndex",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-beginocclusionquery"
          },
          {
            "type": "operation",
            "name": "endOcclusionQuery",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-endocclusionquery"
          },
          {
            "type": "operation",
            "name": "executeBundles",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "bundles",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "GPURenderBundle"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-executebundles"
          },
          {
            "type": "operation",
            "name": "end",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassencoder-end"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpurenderpassencoder"
      },
      "GPURenderPassTimestampWrites": {
        "fragment": "dictionary GPURenderPassTimestampWrites {\n    required GPUQuerySet querySet;\n    GPUSize32 beginningOfPassWriteIndex;\n    GPUSize32 endOfPassWriteIndex;\n};",
        "type": "dictionary",
        "name": "GPURenderPassTimestampWrites",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "querySet",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQuerySet"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasstimestampwrites-queryset"
          },
          {
            "type": "field",
            "name": "beginningOfPassWriteIndex",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasstimestampwrites-beginningofpasswriteindex"
          },
          {
            "type": "field",
            "name": "endOfPassWriteIndex",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasstimestampwrites-endofpasswriteindex"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpasstimestampwrites"
      },
      "GPURenderPassDescriptor": {
        "fragment": "dictionary GPURenderPassDescriptor\n         : GPUObjectDescriptorBase {\n    required sequence<GPURenderPassColorAttachment?> colorAttachments;\n    GPURenderPassDepthStencilAttachment depthStencilAttachment;\n    GPUQuerySet occlusionQuerySet;\n    GPURenderPassTimestampWrites timestampWrites;\n    GPUSize64 maxDrawCount = 50000000;\n};",
        "type": "dictionary",
        "name": "GPURenderPassDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "colorAttachments",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPURenderPassColorAttachment"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdescriptor-colorattachments"
          },
          {
            "type": "field",
            "name": "depthStencilAttachment",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPURenderPassDepthStencilAttachment"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdescriptor-depthstencilattachment"
          },
          {
            "type": "field",
            "name": "occlusionQuerySet",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQuerySet"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdescriptor-occlusionqueryset"
          },
          {
            "type": "field",
            "name": "timestampWrites",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPURenderPassTimestampWrites"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdescriptor-timestampwrites"
          },
          {
            "type": "field",
            "name": "maxDrawCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize64"
            },
            "default": {
              "type": "number",
              "value": "50000000"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdescriptor-maxdrawcount"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpassdescriptor"
      },
      "GPURenderPassColorAttachment": {
        "fragment": "dictionary GPURenderPassColorAttachment {\n    required (GPUTexture or GPUTextureView) view;\n    GPUIntegerCoordinate depthSlice;\n    (GPUTexture or GPUTextureView) resolveTarget;\n\n    GPUColor clearValue;\n    required GPULoadOp loadOp;\n    required GPUStoreOp storeOp;\n};",
        "type": "dictionary",
        "name": "GPURenderPassColorAttachment",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "view",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexture"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureView"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasscolorattachment-view"
          },
          {
            "type": "field",
            "name": "depthSlice",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasscolorattachment-depthslice"
          },
          {
            "type": "field",
            "name": "resolveTarget",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexture"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureView"
                }
              ]
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasscolorattachment-resolvetarget"
          },
          {
            "type": "field",
            "name": "clearValue",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUColor"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasscolorattachment-clearvalue"
          },
          {
            "type": "field",
            "name": "loadOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPULoadOp"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasscolorattachment-loadop"
          },
          {
            "type": "field",
            "name": "storeOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStoreOp"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasscolorattachment-storeop"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpasscolorattachment"
      },
      "GPURenderPassDepthStencilAttachment": {
        "fragment": "dictionary GPURenderPassDepthStencilAttachment {\n    required (GPUTexture or GPUTextureView) view;\n\n    float depthClearValue;\n    GPULoadOp depthLoadOp;\n    GPUStoreOp depthStoreOp;\n    boolean depthReadOnly = false;\n\n    GPUStencilValue stencilClearValue = 0;\n    GPULoadOp stencilLoadOp;\n    GPUStoreOp stencilStoreOp;\n    boolean stencilReadOnly = false;\n};",
        "type": "dictionary",
        "name": "GPURenderPassDepthStencilAttachment",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "view",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexture"
                },
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureView"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-view"
          },
          {
            "type": "field",
            "name": "depthClearValue",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "float"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-depthclearvalue"
          },
          {
            "type": "field",
            "name": "depthLoadOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPULoadOp"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-depthloadop"
          },
          {
            "type": "field",
            "name": "depthStoreOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStoreOp"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-depthstoreop"
          },
          {
            "type": "field",
            "name": "depthReadOnly",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-depthreadonly"
          },
          {
            "type": "field",
            "name": "stencilClearValue",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStencilValue"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-stencilclearvalue"
          },
          {
            "type": "field",
            "name": "stencilLoadOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPULoadOp"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-stencilloadop"
          },
          {
            "type": "field",
            "name": "stencilStoreOp",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUStoreOp"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-stencilstoreop"
          },
          {
            "type": "field",
            "name": "stencilReadOnly",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpassdepthstencilattachment-stencilreadonly"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpassdepthstencilattachment"
      },
      "GPULoadOp": {
        "fragment": "enum GPULoadOp {\n    \"load\",\n    \"clear\",\n};",
        "type": "enum",
        "name": "GPULoadOp",
        "values": [
          {
            "type": "enum-value",
            "value": "load",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuloadop-load"
          },
          {
            "type": "enum-value",
            "value": "clear",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuloadop-clear"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuloadop"
      },
      "GPUStoreOp": {
        "fragment": "enum GPUStoreOp {\n    \"store\",\n    \"discard\",\n};",
        "type": "enum",
        "name": "GPUStoreOp",
        "values": [
          {
            "type": "enum-value",
            "value": "store",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoreop-store"
          },
          {
            "type": "enum-value",
            "value": "discard",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpustoreop-discard"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpustoreop"
      },
      "GPURenderPassLayout": {
        "fragment": "dictionary GPURenderPassLayout\n         : GPUObjectDescriptorBase {\n    required sequence<GPUTextureFormat?> colorFormats;\n    GPUTextureFormat depthStencilFormat;\n    GPUSize32 sampleCount = 1;\n};",
        "type": "dictionary",
        "name": "GPURenderPassLayout",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "colorFormats",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUTextureFormat"
                }
              ]
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasslayout-colorformats"
          },
          {
            "type": "field",
            "name": "depthStencilFormat",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasslayout-depthstencilformat"
          },
          {
            "type": "field",
            "name": "sampleCount",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderpasslayout-samplecount"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpasslayout"
      },
      "GPURenderCommandsMixin": {
        "fragment": "interface mixin GPURenderCommandsMixin {\n    undefined setPipeline(GPURenderPipeline pipeline);\n\n    undefined setIndexBuffer(GPUBuffer buffer, GPUIndexFormat indexFormat, optional GPUSize64 offset = 0, optional GPUSize64 size);\n    undefined setVertexBuffer(GPUIndex32 slot, GPUBuffer? buffer, optional GPUSize64 offset = 0, optional GPUSize64 size);\n\n    undefined draw(GPUSize32 vertexCount, optional GPUSize32 instanceCount = 1,\n        optional GPUSize32 firstVertex = 0, optional GPUSize32 firstInstance = 0);\n    undefined drawIndexed(GPUSize32 indexCount, optional GPUSize32 instanceCount = 1,\n        optional GPUSize32 firstIndex = 0,\n        optional GPUSignedOffset32 baseVertex = 0,\n        optional GPUSize32 firstInstance = 0);\n\n    undefined drawIndirect(GPUBuffer indirectBuffer, GPUSize64 indirectOffset);\n    undefined drawIndexedIndirect(GPUBuffer indirectBuffer, GPUSize64 indirectOffset);\n};",
        "type": "interface mixin",
        "name": "GPURenderCommandsMixin",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "setPipeline",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "pipeline",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderPipeline"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-setpipeline"
          },
          {
            "type": "operation",
            "name": "setIndexBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "buffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "indexFormat",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIndexFormat"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "offset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-setindexbuffer"
          },
          {
            "type": "operation",
            "name": "setVertexBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "slot",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIndex32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "buffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": true,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "offset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-setvertexbuffer"
          },
          {
            "type": "operation",
            "name": "draw",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "vertexCount",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "instanceCount",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "1"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "firstVertex",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "firstInstance",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-draw"
          },
          {
            "type": "operation",
            "name": "drawIndexed",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "indexCount",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "instanceCount",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "1"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "firstIndex",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "baseVertex",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSignedOffset32"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "firstInstance",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize32"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-drawindexed"
          },
          {
            "type": "operation",
            "name": "drawIndirect",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "indirectBuffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "indirectOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-drawindirect"
          },
          {
            "type": "operation",
            "name": "drawIndexedIndirect",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "indirectBuffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "indirectOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurendercommandsmixin-drawindexedindirect"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpurendercommandsmixin"
      },
      "GPURenderBundle": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPURenderBundle {\n};",
        "type": "interface",
        "name": "GPURenderBundle",
        "inheritance": null,
        "members": [],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpurenderbundle"
      },
      "GPURenderBundleDescriptor": {
        "fragment": "dictionary GPURenderBundleDescriptor\n         : GPUObjectDescriptorBase {\n};",
        "type": "dictionary",
        "name": "GPURenderBundleDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderbundledescriptor"
      },
      "GPURenderBundleEncoder": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPURenderBundleEncoder {\n    GPURenderBundle finish(optional GPURenderBundleDescriptor descriptor = {});\n};",
        "type": "interface",
        "name": "GPURenderBundleEncoder",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "finish",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPURenderBundle"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "descriptor",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPURenderBundleDescriptor"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderbundleencoder-finish"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpurenderbundleencoder"
      },
      "GPURenderBundleEncoderDescriptor": {
        "fragment": "dictionary GPURenderBundleEncoderDescriptor\n         : GPURenderPassLayout {\n    boolean depthReadOnly = false;\n    boolean stencilReadOnly = false;\n};",
        "type": "dictionary",
        "name": "GPURenderBundleEncoderDescriptor",
        "inheritance": "GPURenderPassLayout",
        "members": [
          {
            "type": "field",
            "name": "depthReadOnly",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderbundleencoderdescriptor-depthreadonly"
          },
          {
            "type": "field",
            "name": "stencilReadOnly",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpurenderbundleencoderdescriptor-stencilreadonly"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpurenderbundleencoderdescriptor"
      },
      "GPUQueueDescriptor": {
        "fragment": "dictionary GPUQueueDescriptor\n         : GPUObjectDescriptorBase {\n};",
        "type": "dictionary",
        "name": "GPUQueueDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuqueuedescriptor"
      },
      "GPUQueue": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUQueue {\n    undefined submit(sequence<GPUCommandBuffer> commandBuffers);\n\n    Promise<undefined> onSubmittedWorkDone();\n\n    undefined writeBuffer(\n        GPUBuffer buffer,\n        GPUSize64 bufferOffset,\n        AllowSharedBufferSource data,\n        optional GPUSize64 dataOffset = 0,\n        optional GPUSize64 size);\n\n    undefined writeTexture(\n        GPUTexelCopyTextureInfo destination,\n        AllowSharedBufferSource data,\n        GPUTexelCopyBufferLayout dataLayout,\n        GPUExtent3D size);\n\n    undefined copyExternalImageToTexture(\n        GPUCopyExternalImageSourceInfo source,\n        GPUCopyExternalImageDestInfo destination,\n        GPUExtent3D copySize);\n};",
        "type": "interface",
        "name": "GPUQueue",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "submit",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "commandBuffers",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "sequence",
                  "nullable": false,
                  "union": false,
                  "idlType": [
                    {
                      "type": "argument-type",
                      "extAttrs": [],
                      "generic": "",
                      "nullable": false,
                      "union": false,
                      "idlType": "GPUCommandBuffer"
                    }
                  ]
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueue-submit"
          },
          {
            "type": "operation",
            "name": "onSubmittedWorkDone",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueue-onsubmittedworkdone"
          },
          {
            "type": "operation",
            "name": "writeBuffer",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "buffer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUBuffer"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "bufferOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "data",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "AllowSharedBufferSource"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "dataOffset",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": {
                  "type": "number",
                  "value": "0"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUSize64"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueue-writebuffer"
          },
          {
            "type": "operation",
            "name": "writeTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyTextureInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "data",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "AllowSharedBufferSource"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "dataLayout",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTexelCopyBufferLayout"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "size",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUExtent3D"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueue-writetexture"
          },
          {
            "type": "operation",
            "name": "copyExternalImageToTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "source",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCopyExternalImageSourceInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCopyExternalImageDestInfo"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "copySize",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUExtent3D"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueue-copyexternalimagetotexture"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuqueue"
      },
      "GPUQuerySet": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUQuerySet {\n    undefined destroy();\n\n    readonly attribute GPUQueryType type;\n    readonly attribute GPUSize32Out count;\n};",
        "type": "interface",
        "name": "GPUQuerySet",
        "inheritance": null,
        "members": [
          {
            "type": "operation",
            "name": "destroy",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueryset-destroy"
          },
          {
            "type": "attribute",
            "name": "type",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQueryType"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueryset-type"
          },
          {
            "type": "attribute",
            "name": "count",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32Out"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuqueryset-count"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuqueryset"
      },
      "GPUQuerySetDescriptor": {
        "fragment": "dictionary GPUQuerySetDescriptor\n         : GPUObjectDescriptorBase {\n    required GPUQueryType type;\n    required GPUSize32 count;\n};",
        "type": "dictionary",
        "name": "GPUQuerySetDescriptor",
        "inheritance": "GPUObjectDescriptorBase",
        "members": [
          {
            "type": "field",
            "name": "type",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUQueryType"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuquerysetdescriptor-type"
          },
          {
            "type": "field",
            "name": "count",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUSize32"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuquerysetdescriptor-count"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuquerysetdescriptor"
      },
      "GPUQueryType": {
        "fragment": "enum GPUQueryType {\n    \"occlusion\",\n    \"timestamp\",\n};",
        "type": "enum",
        "name": "GPUQueryType",
        "values": [
          {
            "type": "enum-value",
            "value": "occlusion",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuquerytype-occlusion"
          },
          {
            "type": "enum-value",
            "value": "timestamp",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuquerytype-timestamp"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuquerytype"
      },
      "GPUCanvasContext": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUCanvasContext {\n    readonly attribute (HTMLCanvasElement or OffscreenCanvas) canvas;\n\n    undefined configure(GPUCanvasConfiguration configuration);\n    undefined unconfigure();\n\n    GPUCanvasConfiguration? getConfiguration();\n    GPUTexture getCurrentTexture();\n};",
        "type": "interface",
        "name": "GPUCanvasContext",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "canvas",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": true,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "HTMLCanvasElement"
                },
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "OffscreenCanvas"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvascontext-canvas"
          },
          {
            "type": "operation",
            "name": "configure",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "configuration",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUCanvasConfiguration"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvascontext-configure"
          },
          {
            "type": "operation",
            "name": "unconfigure",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvascontext-unconfigure"
          },
          {
            "type": "operation",
            "name": "getConfiguration",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "GPUCanvasConfiguration"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvascontext-getconfiguration"
          },
          {
            "type": "operation",
            "name": "getCurrentTexture",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTexture"
            },
            "arguments": [],
            "extAttrs": [],
            "special": "",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvascontext-getcurrenttexture"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpucanvascontext"
      },
      "GPUCanvasAlphaMode": {
        "fragment": "enum GPUCanvasAlphaMode {\n    \"opaque\",\n    \"premultiplied\",\n};",
        "type": "enum",
        "name": "GPUCanvasAlphaMode",
        "values": [
          {
            "type": "enum-value",
            "value": "opaque",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasalphamode-opaque"
          },
          {
            "type": "enum-value",
            "value": "premultiplied",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasalphamode-premultiplied"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#gpucanvasalphamode"
      },
      "GPUCanvasToneMappingMode": {
        "fragment": "enum GPUCanvasToneMappingMode {\n    \"standard\",\n    \"extended\",\n};",
        "type": "enum",
        "name": "GPUCanvasToneMappingMode",
        "values": [
          {
            "type": "enum-value",
            "value": "standard",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvastonemappingmode-standard"
          },
          {
            "type": "enum-value",
            "value": "extended",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvastonemappingmode-extended"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#gpucanvastonemappingmode"
      },
      "GPUCanvasToneMapping": {
        "fragment": "dictionary GPUCanvasToneMapping {\n  GPUCanvasToneMappingMode mode = \"standard\";\n};",
        "type": "dictionary",
        "name": "GPUCanvasToneMapping",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "mode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCanvasToneMappingMode"
            },
            "default": {
              "type": "string",
              "value": "standard"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvastonemapping-mode"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucanvastonemapping"
      },
      "GPUCanvasConfiguration": {
        "fragment": "dictionary GPUCanvasConfiguration {\n    required GPUDevice device;\n    required GPUTextureFormat format;\n    GPUTextureUsageFlags usage = 0x10;  // GPUTextureUsage.RENDER_ATTACHMENT\n    sequence<GPUTextureFormat> viewFormats = [];\n    PredefinedColorSpace colorSpace = \"srgb\";\n    GPUCanvasToneMapping toneMapping = {};\n    GPUCanvasAlphaMode alphaMode = \"opaque\";\n};",
        "type": "dictionary",
        "name": "GPUCanvasConfiguration",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "device",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUDevice"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-device"
          },
          {
            "type": "field",
            "name": "format",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureFormat"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-format"
          },
          {
            "type": "field",
            "name": "usage",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUTextureUsageFlags"
            },
            "default": {
              "type": "number",
              "value": "0x10"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-usage"
          },
          {
            "type": "field",
            "name": "viewFormats",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "dictionary-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUTextureFormat"
                }
              ]
            },
            "default": {
              "type": "sequence",
              "value": []
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-viewformats"
          },
          {
            "type": "field",
            "name": "colorSpace",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "PredefinedColorSpace"
            },
            "default": {
              "type": "string",
              "value": "srgb"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-colorspace"
          },
          {
            "type": "field",
            "name": "toneMapping",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCanvasToneMapping"
            },
            "default": {
              "type": "dictionary"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-tonemapping"
          },
          {
            "type": "field",
            "name": "alphaMode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUCanvasAlphaMode"
            },
            "default": {
              "type": "string",
              "value": "opaque"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucanvasconfiguration-alphamode"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucanvasconfiguration"
      },
      "GPUDeviceLostReason": {
        "fragment": "enum GPUDeviceLostReason {\n    \"unknown\",\n    \"destroyed\",\n};",
        "type": "enum",
        "name": "GPUDeviceLostReason",
        "values": [
          {
            "type": "enum-value",
            "value": "unknown",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicelostreason-unknown"
          },
          {
            "type": "enum-value",
            "value": "destroyed",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicelostreason-destroyed"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpudevicelostreason"
      },
      "GPUDeviceLostInfo": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUDeviceLostInfo {\n    readonly attribute GPUDeviceLostReason reason;\n    readonly attribute DOMString message;\n};",
        "type": "interface",
        "name": "GPUDeviceLostInfo",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "reason",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUDeviceLostReason"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicelostinfo-reason"
          },
          {
            "type": "attribute",
            "name": "message",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevicelostinfo-message"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpudevicelostinfo"
      },
      "GPUError": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUError {\n    readonly attribute DOMString message;\n};",
        "type": "interface",
        "name": "GPUError",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "message",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "DOMString"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuerror-message"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuerror"
      },
      "GPUValidationError": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUValidationError\n        : GPUError {\n    constructor(DOMString message);\n};",
        "type": "interface",
        "name": "GPUValidationError",
        "inheritance": "GPUError",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "message",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuvalidationerror-gpuvalidationerror"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuvalidationerror"
      },
      "GPUOutOfMemoryError": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUOutOfMemoryError\n        : GPUError {\n    constructor(DOMString message);\n};",
        "type": "interface",
        "name": "GPUOutOfMemoryError",
        "inheritance": "GPUError",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "message",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuoutofmemoryerror-gpuoutofmemoryerror"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuoutofmemoryerror"
      },
      "GPUInternalError": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUInternalError\n        : GPUError {\n    constructor(DOMString message);\n};",
        "type": "interface",
        "name": "GPUInternalError",
        "inheritance": "GPUError",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "message",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuinternalerror-gpuinternalerror"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuinternalerror"
      },
      "GPUErrorFilter": {
        "fragment": "enum GPUErrorFilter {\n    \"validation\",\n    \"out-of-memory\",\n    \"internal\",\n};",
        "type": "enum",
        "name": "GPUErrorFilter",
        "values": [
          {
            "type": "enum-value",
            "value": "validation",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuerrorfilter-validation"
          },
          {
            "type": "enum-value",
            "value": "out-of-memory",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuerrorfilter-out-of-memory"
          },
          {
            "type": "enum-value",
            "value": "internal",
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuerrorfilter-internal"
          }
        ],
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#enumdef-gpuerrorfilter"
      },
      "GPUUncapturedErrorEvent": {
        "fragment": "[Exposed=(Window, Worker), SecureContext]\ninterface GPUUncapturedErrorEvent : Event {\n    constructor(\n        DOMString type,\n        GPUUncapturedErrorEventInit gpuUncapturedErrorEventInitDict\n    );\n    [SameObject] readonly attribute GPUError error;\n};",
        "type": "interface",
        "name": "GPUUncapturedErrorEvent",
        "inheritance": "Event",
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "type",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "DOMString"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "gpuUncapturedErrorEventInitDict",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUUncapturedErrorEventInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuuncapturederrorevent-gpuuncapturederrorevent"
          },
          {
            "type": "attribute",
            "name": "error",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUError"
            },
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "SameObject",
                "rhs": null,
                "arguments": []
              }
            ],
            "special": "",
            "readonly": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuuncapturederrorevent-error"
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "identifier-list",
              "value": [
                {
                  "value": "Window"
                },
                {
                  "value": "Worker"
                }
              ]
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "SecureContext",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#gpuuncapturederrorevent"
      },
      "GPUUncapturedErrorEventInit": {
        "fragment": "dictionary GPUUncapturedErrorEventInit : EventInit {\n    required GPUError error;\n};",
        "type": "dictionary",
        "name": "GPUUncapturedErrorEventInit",
        "inheritance": "EventInit",
        "members": [
          {
            "type": "field",
            "name": "error",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUError"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuuncapturederroreventinit-error"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuuncapturederroreventinit"
      },
      "GPUBufferDynamicOffset": {
        "fragment": "typedef [EnforceRange] unsigned long GPUBufferDynamicOffset;",
        "type": "typedef",
        "name": "GPUBufferDynamicOffset",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpubufferdynamicoffset"
      },
      "GPUStencilValue": {
        "fragment": "typedef [EnforceRange] unsigned long GPUStencilValue;",
        "type": "typedef",
        "name": "GPUStencilValue",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpustencilvalue"
      },
      "GPUSampleMask": {
        "fragment": "typedef [EnforceRange] unsigned long GPUSampleMask;",
        "type": "typedef",
        "name": "GPUSampleMask",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpusamplemask"
      },
      "GPUDepthBias": {
        "fragment": "typedef [EnforceRange] long GPUDepthBias;",
        "type": "typedef",
        "name": "GPUDepthBias",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpudepthbias"
      },
      "GPUSize64": {
        "fragment": "typedef [EnforceRange] unsigned long long GPUSize64;",
        "type": "typedef",
        "name": "GPUSize64",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpusize64"
      },
      "GPUIntegerCoordinate": {
        "fragment": "typedef [EnforceRange] unsigned long GPUIntegerCoordinate;",
        "type": "typedef",
        "name": "GPUIntegerCoordinate",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuintegercoordinate"
      },
      "GPUIndex32": {
        "fragment": "typedef [EnforceRange] unsigned long GPUIndex32;",
        "type": "typedef",
        "name": "GPUIndex32",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuindex32"
      },
      "GPUSize32": {
        "fragment": "typedef [EnforceRange] unsigned long GPUSize32;",
        "type": "typedef",
        "name": "GPUSize32",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpusize32"
      },
      "GPUSignedOffset32": {
        "fragment": "typedef [EnforceRange] long GPUSignedOffset32;",
        "type": "typedef",
        "name": "GPUSignedOffset32",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [
            {
              "type": "extended-attribute",
              "name": "EnforceRange",
              "rhs": null,
              "arguments": []
            }
          ],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpusignedoffset32"
      },
      "GPUSize64Out": {
        "fragment": "typedef unsigned long long GPUSize64Out;",
        "type": "typedef",
        "name": "GPUSize64Out",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpusize64out"
      },
      "GPUIntegerCoordinateOut": {
        "fragment": "typedef unsigned long GPUIntegerCoordinateOut;",
        "type": "typedef",
        "name": "GPUIntegerCoordinateOut",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuintegercoordinateout"
      },
      "GPUSize32Out": {
        "fragment": "typedef unsigned long GPUSize32Out;",
        "type": "typedef",
        "name": "GPUSize32Out",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpusize32out"
      },
      "GPUFlagsConstant": {
        "fragment": "typedef unsigned long GPUFlagsConstant;",
        "type": "typedef",
        "name": "GPUFlagsConstant",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unsigned long"
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuflagsconstant"
      },
      "GPUColorDict": {
        "fragment": "dictionary GPUColorDict {\n    required double r;\n    required double g;\n    required double b;\n    required double a;\n};",
        "type": "dictionary",
        "name": "GPUColorDict",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "r",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolordict-r"
          },
          {
            "type": "field",
            "name": "g",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolordict-g"
          },
          {
            "type": "field",
            "name": "b",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolordict-b"
          },
          {
            "type": "field",
            "name": "a",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "double"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpucolordict-a"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpucolordict"
      },
      "GPUColor": {
        "fragment": "typedef (sequence<double> or GPUColorDict) GPUColor;",
        "type": "typedef",
        "name": "GPUColor",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "typedef-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "double"
                }
              ]
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUColorDict"
            }
          ]
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpucolor"
      },
      "GPUOrigin2DDict": {
        "fragment": "dictionary GPUOrigin2DDict {\n    GPUIntegerCoordinate x = 0;\n    GPUIntegerCoordinate y = 0;\n};",
        "type": "dictionary",
        "name": "GPUOrigin2DDict",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "x",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuorigin2ddict-x"
          },
          {
            "type": "field",
            "name": "y",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuorigin2ddict-y"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuorigin2ddict"
      },
      "GPUOrigin2D": {
        "fragment": "typedef (sequence<GPUIntegerCoordinate> or GPUOrigin2DDict) GPUOrigin2D;",
        "type": "typedef",
        "name": "GPUOrigin2D",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "typedef-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                }
              ]
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUOrigin2DDict"
            }
          ]
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuorigin2d"
      },
      "GPUOrigin3DDict": {
        "fragment": "dictionary GPUOrigin3DDict {\n    GPUIntegerCoordinate x = 0;\n    GPUIntegerCoordinate y = 0;\n    GPUIntegerCoordinate z = 0;\n};",
        "type": "dictionary",
        "name": "GPUOrigin3DDict",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "x",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuorigin3ddict-x"
          },
          {
            "type": "field",
            "name": "y",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuorigin3ddict-y"
          },
          {
            "type": "field",
            "name": "z",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "0"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuorigin3ddict-z"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuorigin3ddict"
      },
      "GPUOrigin3D": {
        "fragment": "typedef (sequence<GPUIntegerCoordinate> or GPUOrigin3DDict) GPUOrigin3D;",
        "type": "typedef",
        "name": "GPUOrigin3D",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "typedef-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                }
              ]
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUOrigin3DDict"
            }
          ]
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuorigin3d"
      },
      "GPUExtent3DDict": {
        "fragment": "dictionary GPUExtent3DDict {\n    required GPUIntegerCoordinate width;\n    GPUIntegerCoordinate height = 1;\n    GPUIntegerCoordinate depthOrArrayLayers = 1;\n};",
        "type": "dictionary",
        "name": "GPUExtent3DDict",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "width",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": null,
            "required": true,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuextent3ddict-width"
          },
          {
            "type": "field",
            "name": "height",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuextent3ddict-height"
          },
          {
            "type": "field",
            "name": "depthOrArrayLayers",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUIntegerCoordinate"
            },
            "default": {
              "type": "number",
              "value": "1"
            },
            "required": false,
            "href": "https://gpuweb.github.io/gpuweb/#dom-gpuextent3ddict-depthorarraylayers"
          }
        ],
        "extAttrs": [],
        "partial": false,
        "href": "https://gpuweb.github.io/gpuweb/#dictdef-gpuextent3ddict"
      },
      "GPUExtent3D": {
        "fragment": "typedef (sequence<GPUIntegerCoordinate> or GPUExtent3DDict) GPUExtent3D;",
        "type": "typedef",
        "name": "GPUExtent3D",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "typedef-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "GPUIntegerCoordinate"
                }
              ]
            },
            {
              "type": "typedef-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "GPUExtent3DDict"
            }
          ]
        },
        "extAttrs": [],
        "href": "https://gpuweb.github.io/gpuweb/#typedefdef-gpuextent3d"
      }
    },
    "idlExtendedNames": {
      "Navigator": [
        {
          "fragment": "Navigator includes NavigatorGPU;",
          "type": "includes",
          "extAttrs": [],
          "target": "Navigator",
          "includes": "NavigatorGPU"
        }
      ],
      "WorkerNavigator": [
        {
          "fragment": "WorkerNavigator includes NavigatorGPU;",
          "type": "includes",
          "extAttrs": [],
          "target": "WorkerNavigator",
          "includes": "NavigatorGPU"
        }
      ],
      "GPUDevice": [
        {
          "fragment": "GPUDevice includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUDevice",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "partial interface GPUDevice {\n    readonly attribute Promise<GPUDeviceLostInfo> lost;\n};",
          "type": "interface",
          "name": "GPUDevice",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "lost",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "Promise",
                "nullable": false,
                "union": false,
                "idlType": [
                  {
                    "type": "attribute-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "GPUDeviceLostInfo"
                  }
                ]
              },
              "extAttrs": [],
              "special": "",
              "readonly": true,
              "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-lost"
            }
          ],
          "extAttrs": [],
          "partial": true
        },
        {
          "fragment": "partial interface GPUDevice {\n    undefined pushErrorScope(GPUErrorFilter filter);\n    Promise<GPUError?> popErrorScope();\n};",
          "type": "interface",
          "name": "GPUDevice",
          "inheritance": null,
          "members": [
            {
              "type": "operation",
              "name": "pushErrorScope",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "undefined"
              },
              "arguments": [
                {
                  "type": "argument",
                  "name": "filter",
                  "extAttrs": [],
                  "idlType": {
                    "type": "argument-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": false,
                    "union": false,
                    "idlType": "GPUErrorFilter"
                  },
                  "default": null,
                  "optional": false,
                  "variadic": false
                }
              ],
              "extAttrs": [],
              "special": "",
              "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-pusherrorscope"
            },
            {
              "type": "operation",
              "name": "popErrorScope",
              "idlType": {
                "type": "return-type",
                "extAttrs": [],
                "generic": "Promise",
                "nullable": false,
                "union": false,
                "idlType": [
                  {
                    "type": "return-type",
                    "extAttrs": [],
                    "generic": "",
                    "nullable": true,
                    "union": false,
                    "idlType": "GPUError"
                  }
                ]
              },
              "arguments": [],
              "extAttrs": [],
              "special": "",
              "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-poperrorscope"
            }
          ],
          "extAttrs": [],
          "partial": true
        },
        {
          "fragment": "partial interface GPUDevice {\n    attribute EventHandler onuncapturederror;\n};",
          "type": "interface",
          "name": "GPUDevice",
          "inheritance": null,
          "members": [
            {
              "type": "attribute",
              "name": "onuncapturederror",
              "idlType": {
                "type": "attribute-type",
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "EventHandler"
              },
              "extAttrs": [],
              "special": "",
              "readonly": false,
              "href": "https://gpuweb.github.io/gpuweb/#dom-gpudevice-onuncapturederror"
            }
          ],
          "extAttrs": [],
          "partial": true
        }
      ],
      "GPUBuffer": [
        {
          "fragment": "GPUBuffer includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUBuffer",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUTexture": [
        {
          "fragment": "GPUTexture includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUTexture",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUTextureView": [
        {
          "fragment": "GPUTextureView includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUTextureView",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUExternalTexture": [
        {
          "fragment": "GPUExternalTexture includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUExternalTexture",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUSampler": [
        {
          "fragment": "GPUSampler includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUSampler",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUBindGroupLayout": [
        {
          "fragment": "GPUBindGroupLayout includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUBindGroupLayout",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUBindGroup": [
        {
          "fragment": "GPUBindGroup includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUBindGroup",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUPipelineLayout": [
        {
          "fragment": "GPUPipelineLayout includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUPipelineLayout",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUShaderModule": [
        {
          "fragment": "GPUShaderModule includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUShaderModule",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUComputePipeline": [
        {
          "fragment": "GPUComputePipeline includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUComputePipeline",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "GPUComputePipeline includes GPUPipelineBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUComputePipeline",
          "includes": "GPUPipelineBase"
        }
      ],
      "GPURenderPipeline": [
        {
          "fragment": "GPURenderPipeline includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPipeline",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "GPURenderPipeline includes GPUPipelineBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPipeline",
          "includes": "GPUPipelineBase"
        }
      ],
      "GPUCommandBuffer": [
        {
          "fragment": "GPUCommandBuffer includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUCommandBuffer",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUCommandEncoder": [
        {
          "fragment": "GPUCommandEncoder includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUCommandEncoder",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "GPUCommandEncoder includes GPUCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUCommandEncoder",
          "includes": "GPUCommandsMixin"
        },
        {
          "fragment": "GPUCommandEncoder includes GPUDebugCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUCommandEncoder",
          "includes": "GPUDebugCommandsMixin"
        }
      ],
      "GPUComputePassEncoder": [
        {
          "fragment": "GPUComputePassEncoder includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUComputePassEncoder",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "GPUComputePassEncoder includes GPUCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUComputePassEncoder",
          "includes": "GPUCommandsMixin"
        },
        {
          "fragment": "GPUComputePassEncoder includes GPUDebugCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUComputePassEncoder",
          "includes": "GPUDebugCommandsMixin"
        },
        {
          "fragment": "GPUComputePassEncoder includes GPUBindingCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUComputePassEncoder",
          "includes": "GPUBindingCommandsMixin"
        }
      ],
      "GPURenderPassEncoder": [
        {
          "fragment": "GPURenderPassEncoder includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPassEncoder",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "GPURenderPassEncoder includes GPUCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPassEncoder",
          "includes": "GPUCommandsMixin"
        },
        {
          "fragment": "GPURenderPassEncoder includes GPUDebugCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPassEncoder",
          "includes": "GPUDebugCommandsMixin"
        },
        {
          "fragment": "GPURenderPassEncoder includes GPUBindingCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPassEncoder",
          "includes": "GPUBindingCommandsMixin"
        },
        {
          "fragment": "GPURenderPassEncoder includes GPURenderCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderPassEncoder",
          "includes": "GPURenderCommandsMixin"
        }
      ],
      "GPURenderBundle": [
        {
          "fragment": "GPURenderBundle includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderBundle",
          "includes": "GPUObjectBase"
        }
      ],
      "GPURenderBundleEncoder": [
        {
          "fragment": "GPURenderBundleEncoder includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderBundleEncoder",
          "includes": "GPUObjectBase"
        },
        {
          "fragment": "GPURenderBundleEncoder includes GPUCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderBundleEncoder",
          "includes": "GPUCommandsMixin"
        },
        {
          "fragment": "GPURenderBundleEncoder includes GPUDebugCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderBundleEncoder",
          "includes": "GPUDebugCommandsMixin"
        },
        {
          "fragment": "GPURenderBundleEncoder includes GPUBindingCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderBundleEncoder",
          "includes": "GPUBindingCommandsMixin"
        },
        {
          "fragment": "GPURenderBundleEncoder includes GPURenderCommandsMixin;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPURenderBundleEncoder",
          "includes": "GPURenderCommandsMixin"
        }
      ],
      "GPUQueue": [
        {
          "fragment": "GPUQueue includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUQueue",
          "includes": "GPUObjectBase"
        }
      ],
      "GPUQuerySet": [
        {
          "fragment": "GPUQuerySet includes GPUObjectBase;",
          "type": "includes",
          "extAttrs": [],
          "target": "GPUQuerySet",
          "includes": "GPUObjectBase"
        }
      ]
    },
    "globals": {},
    "exposed": {
      "Window": [
        "GPUSupportedLimits",
        "GPUSupportedFeatures",
        "WGSLLanguageFeatures",
        "GPUAdapterInfo",
        "GPU",
        "GPUAdapter",
        "GPUDevice",
        "GPUBuffer",
        "GPUBufferUsage",
        "GPUMapMode",
        "GPUTexture",
        "GPUTextureUsage",
        "GPUTextureView",
        "GPUExternalTexture",
        "GPUSampler",
        "GPUBindGroupLayout",
        "GPUShaderStage",
        "GPUBindGroup",
        "GPUPipelineLayout",
        "GPUShaderModule",
        "GPUCompilationMessage",
        "GPUCompilationInfo",
        "GPUPipelineError",
        "GPUComputePipeline",
        "GPURenderPipeline",
        "GPUColorWrite",
        "GPUCommandBuffer",
        "GPUCommandEncoder",
        "GPUComputePassEncoder",
        "GPURenderPassEncoder",
        "GPURenderBundle",
        "GPURenderBundleEncoder",
        "GPUQueue",
        "GPUQuerySet",
        "GPUCanvasContext",
        "GPUDeviceLostInfo",
        "GPUError",
        "GPUValidationError",
        "GPUOutOfMemoryError",
        "GPUInternalError",
        "GPUUncapturedErrorEvent"
      ],
      "Worker": [
        "GPUSupportedLimits",
        "GPUSupportedFeatures",
        "WGSLLanguageFeatures",
        "GPUAdapterInfo",
        "GPU",
        "GPUAdapter",
        "GPUDevice",
        "GPUBuffer",
        "GPUBufferUsage",
        "GPUMapMode",
        "GPUTexture",
        "GPUTextureUsage",
        "GPUTextureView",
        "GPUExternalTexture",
        "GPUSampler",
        "GPUBindGroupLayout",
        "GPUShaderStage",
        "GPUBindGroup",
        "GPUPipelineLayout",
        "GPUShaderModule",
        "GPUCompilationMessage",
        "GPUCompilationInfo",
        "GPUPipelineError",
        "GPUComputePipeline",
        "GPURenderPipeline",
        "GPUColorWrite",
        "GPUCommandBuffer",
        "GPUCommandEncoder",
        "GPUComputePassEncoder",
        "GPURenderPassEncoder",
        "GPURenderBundle",
        "GPURenderBundleEncoder",
        "GPUQueue",
        "GPUQuerySet",
        "GPUCanvasContext",
        "GPUDeviceLostInfo",
        "GPUError",
        "GPUValidationError",
        "GPUOutOfMemoryError",
        "GPUInternalError",
        "GPUUncapturedErrorEvent"
      ]
    },
    "dependencies": {
      "GPUObjectBase": [],
      "GPUObjectDescriptorBase": [],
      "GPUSupportedLimits": [],
      "GPUSupportedFeatures": [],
      "WGSLLanguageFeatures": [],
      "GPUAdapterInfo": [],
      "NavigatorGPU": [
        "GPU"
      ],
      "Navigator": [
        "NavigatorGPU"
      ],
      "WorkerNavigator": [
        "NavigatorGPU"
      ],
      "GPU": [
        "GPUAdapter",
        "GPURequestAdapterOptions",
        "GPUTextureFormat",
        "WGSLLanguageFeatures"
      ],
      "GPURequestAdapterOptions": [
        "GPUPowerPreference"
      ],
      "GPUAdapter": [
        "GPUSupportedFeatures",
        "GPUSupportedLimits",
        "GPUAdapterInfo",
        "GPUDevice",
        "GPUDeviceDescriptor"
      ],
      "GPUDeviceDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUFeatureName",
        "GPUSize64",
        "GPUQueueDescriptor"
      ],
      "GPUDevice": [
        "EventTarget",
        "GPUSupportedFeatures",
        "GPUSupportedLimits",
        "GPUAdapterInfo",
        "GPUQueue",
        "GPUBuffer",
        "GPUBufferDescriptor",
        "GPUTexture",
        "GPUTextureDescriptor",
        "GPUSampler",
        "GPUSamplerDescriptor",
        "GPUExternalTexture",
        "GPUExternalTextureDescriptor",
        "GPUBindGroupLayout",
        "GPUBindGroupLayoutDescriptor",
        "GPUPipelineLayout",
        "GPUPipelineLayoutDescriptor",
        "GPUBindGroup",
        "GPUBindGroupDescriptor",
        "GPUShaderModule",
        "GPUShaderModuleDescriptor",
        "GPUComputePipeline",
        "GPUComputePipelineDescriptor",
        "GPURenderPipeline",
        "GPURenderPipelineDescriptor",
        "GPUCommandEncoder",
        "GPUCommandEncoderDescriptor",
        "GPURenderBundleEncoder",
        "GPURenderBundleEncoderDescriptor",
        "GPUQuerySet",
        "GPUQuerySetDescriptor",
        "GPUObjectBase",
        "GPUDeviceLostInfo",
        "GPUErrorFilter",
        "GPUError",
        "EventHandler"
      ],
      "GPUBuffer": [
        "GPUSize64Out",
        "GPUFlagsConstant",
        "GPUBufferMapState",
        "GPUMapModeFlags",
        "GPUSize64",
        "ArrayBuffer",
        "GPUObjectBase"
      ],
      "GPUBufferDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUSize64",
        "GPUBufferUsageFlags"
      ],
      "GPUBufferUsage": [],
      "GPUMapMode": [],
      "GPUTexture": [
        "GPUTextureView",
        "GPUTextureViewDescriptor",
        "GPUIntegerCoordinateOut",
        "GPUSize32Out",
        "GPUTextureDimension",
        "GPUTextureFormat",
        "GPUFlagsConstant",
        "GPUObjectBase"
      ],
      "GPUTextureDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUExtent3D",
        "GPUIntegerCoordinate",
        "GPUSize32",
        "GPUTextureDimension",
        "GPUTextureFormat",
        "GPUTextureUsageFlags"
      ],
      "GPUTextureUsage": [],
      "GPUTextureView": [
        "GPUObjectBase"
      ],
      "GPUTextureViewDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUTextureFormat",
        "GPUTextureViewDimension",
        "GPUTextureUsageFlags",
        "GPUTextureAspect",
        "GPUIntegerCoordinate"
      ],
      "GPUExternalTexture": [
        "GPUObjectBase"
      ],
      "GPUExternalTextureDescriptor": [
        "GPUObjectDescriptorBase",
        "HTMLVideoElement",
        "VideoFrame",
        "PredefinedColorSpace"
      ],
      "GPUSampler": [
        "GPUObjectBase"
      ],
      "GPUSamplerDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUAddressMode",
        "GPUFilterMode",
        "GPUMipmapFilterMode",
        "GPUCompareFunction"
      ],
      "GPUBindGroupLayout": [
        "GPUObjectBase"
      ],
      "GPUBindGroupLayoutDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUBindGroupLayoutEntry"
      ],
      "GPUBindGroupLayoutEntry": [
        "GPUIndex32",
        "GPUShaderStageFlags",
        "GPUBufferBindingLayout",
        "GPUSamplerBindingLayout",
        "GPUTextureBindingLayout",
        "GPUStorageTextureBindingLayout",
        "GPUExternalTextureBindingLayout"
      ],
      "GPUShaderStage": [],
      "GPUBufferBindingLayout": [
        "GPUBufferBindingType",
        "GPUSize64"
      ],
      "GPUSamplerBindingLayout": [
        "GPUSamplerBindingType"
      ],
      "GPUTextureBindingLayout": [
        "GPUTextureSampleType",
        "GPUTextureViewDimension"
      ],
      "GPUStorageTextureBindingLayout": [
        "GPUStorageTextureAccess",
        "GPUTextureFormat",
        "GPUTextureViewDimension"
      ],
      "GPUExternalTextureBindingLayout": [],
      "GPUBindGroup": [
        "GPUObjectBase"
      ],
      "GPUBindGroupDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUBindGroupLayout",
        "GPUBindGroupEntry"
      ],
      "GPUBindGroupEntry": [
        "GPUIndex32",
        "GPUBindingResource"
      ],
      "GPUBufferBinding": [
        "GPUBuffer",
        "GPUSize64"
      ],
      "GPUPipelineLayout": [
        "GPUObjectBase"
      ],
      "GPUPipelineLayoutDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUBindGroupLayout"
      ],
      "GPUShaderModule": [
        "GPUCompilationInfo",
        "GPUObjectBase"
      ],
      "GPUShaderModuleDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUShaderModuleCompilationHint"
      ],
      "GPUShaderModuleCompilationHint": [
        "GPUPipelineLayout",
        "GPUAutoLayoutMode"
      ],
      "GPUCompilationMessage": [
        "GPUCompilationMessageType"
      ],
      "GPUCompilationInfo": [
        "GPUCompilationMessage"
      ],
      "GPUPipelineError": [
        "DOMException",
        "GPUPipelineErrorInit",
        "GPUPipelineErrorReason"
      ],
      "GPUPipelineErrorInit": [
        "GPUPipelineErrorReason"
      ],
      "GPUPipelineDescriptorBase": [
        "GPUObjectDescriptorBase",
        "GPUPipelineLayout",
        "GPUAutoLayoutMode"
      ],
      "GPUPipelineBase": [
        "GPUBindGroupLayout"
      ],
      "GPUProgrammableStage": [
        "GPUShaderModule",
        "GPUPipelineConstantValue"
      ],
      "GPUComputePipeline": [
        "GPUObjectBase",
        "GPUPipelineBase"
      ],
      "GPUComputePipelineDescriptor": [
        "GPUPipelineDescriptorBase",
        "GPUProgrammableStage"
      ],
      "GPURenderPipeline": [
        "GPUObjectBase",
        "GPUPipelineBase"
      ],
      "GPURenderPipelineDescriptor": [
        "GPUPipelineDescriptorBase",
        "GPUVertexState",
        "GPUPrimitiveState",
        "GPUDepthStencilState",
        "GPUMultisampleState",
        "GPUFragmentState"
      ],
      "GPUPrimitiveState": [
        "GPUPrimitiveTopology",
        "GPUIndexFormat",
        "GPUFrontFace",
        "GPUCullMode"
      ],
      "GPUMultisampleState": [
        "GPUSize32",
        "GPUSampleMask"
      ],
      "GPUFragmentState": [
        "GPUProgrammableStage",
        "GPUColorTargetState"
      ],
      "GPUColorTargetState": [
        "GPUTextureFormat",
        "GPUBlendState",
        "GPUColorWriteFlags"
      ],
      "GPUBlendState": [
        "GPUBlendComponent"
      ],
      "GPUColorWrite": [],
      "GPUBlendComponent": [
        "GPUBlendOperation",
        "GPUBlendFactor"
      ],
      "GPUDepthStencilState": [
        "GPUTextureFormat",
        "GPUCompareFunction",
        "GPUStencilFaceState",
        "GPUStencilValue",
        "GPUDepthBias"
      ],
      "GPUStencilFaceState": [
        "GPUCompareFunction",
        "GPUStencilOperation"
      ],
      "GPUVertexState": [
        "GPUProgrammableStage",
        "GPUVertexBufferLayout"
      ],
      "GPUVertexBufferLayout": [
        "GPUSize64",
        "GPUVertexStepMode",
        "GPUVertexAttribute"
      ],
      "GPUVertexAttribute": [
        "GPUVertexFormat",
        "GPUSize64",
        "GPUIndex32"
      ],
      "GPUTexelCopyBufferLayout": [
        "GPUSize64",
        "GPUSize32"
      ],
      "GPUTexelCopyBufferInfo": [
        "GPUTexelCopyBufferLayout",
        "GPUBuffer"
      ],
      "GPUTexelCopyTextureInfo": [
        "GPUTexture",
        "GPUIntegerCoordinate",
        "GPUOrigin3D",
        "GPUTextureAspect"
      ],
      "GPUCopyExternalImageDestInfo": [
        "GPUTexelCopyTextureInfo",
        "PredefinedColorSpace"
      ],
      "GPUCopyExternalImageSourceInfo": [
        "GPUCopyExternalImageSource",
        "GPUOrigin2D"
      ],
      "GPUCommandBuffer": [
        "GPUObjectBase"
      ],
      "GPUCommandBufferDescriptor": [
        "GPUObjectDescriptorBase"
      ],
      "GPUCommandsMixin": [],
      "GPUCommandEncoder": [
        "GPURenderPassEncoder",
        "GPURenderPassDescriptor",
        "GPUComputePassEncoder",
        "GPUComputePassDescriptor",
        "GPUBuffer",
        "GPUSize64",
        "GPUTexelCopyBufferInfo",
        "GPUTexelCopyTextureInfo",
        "GPUExtent3D",
        "GPUQuerySet",
        "GPUSize32",
        "GPUCommandBuffer",
        "GPUCommandBufferDescriptor",
        "GPUObjectBase",
        "GPUCommandsMixin",
        "GPUDebugCommandsMixin"
      ],
      "GPUCommandEncoderDescriptor": [
        "GPUObjectDescriptorBase"
      ],
      "GPUBindingCommandsMixin": [
        "GPUIndex32",
        "GPUBindGroup",
        "GPUBufferDynamicOffset",
        "Uint32Array",
        "GPUSize64",
        "GPUSize32"
      ],
      "GPUDebugCommandsMixin": [],
      "GPUComputePassEncoder": [
        "GPUComputePipeline",
        "GPUSize32",
        "GPUBuffer",
        "GPUSize64",
        "GPUObjectBase",
        "GPUCommandsMixin",
        "GPUDebugCommandsMixin",
        "GPUBindingCommandsMixin"
      ],
      "GPUComputePassTimestampWrites": [
        "GPUQuerySet",
        "GPUSize32"
      ],
      "GPUComputePassDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUComputePassTimestampWrites"
      ],
      "GPURenderPassEncoder": [
        "GPUIntegerCoordinate",
        "GPUColor",
        "GPUStencilValue",
        "GPUSize32",
        "GPURenderBundle",
        "GPUObjectBase",
        "GPUCommandsMixin",
        "GPUDebugCommandsMixin",
        "GPUBindingCommandsMixin",
        "GPURenderCommandsMixin"
      ],
      "GPURenderPassTimestampWrites": [
        "GPUQuerySet",
        "GPUSize32"
      ],
      "GPURenderPassDescriptor": [
        "GPUObjectDescriptorBase",
        "GPURenderPassColorAttachment",
        "GPURenderPassDepthStencilAttachment",
        "GPUQuerySet",
        "GPURenderPassTimestampWrites",
        "GPUSize64"
      ],
      "GPURenderPassColorAttachment": [
        "GPUTexture",
        "GPUTextureView",
        "GPUIntegerCoordinate",
        "GPUColor",
        "GPULoadOp",
        "GPUStoreOp"
      ],
      "GPURenderPassDepthStencilAttachment": [
        "GPUTexture",
        "GPUTextureView",
        "GPULoadOp",
        "GPUStoreOp",
        "GPUStencilValue"
      ],
      "GPURenderPassLayout": [
        "GPUObjectDescriptorBase",
        "GPUTextureFormat",
        "GPUSize32"
      ],
      "GPURenderCommandsMixin": [
        "GPURenderPipeline",
        "GPUBuffer",
        "GPUIndexFormat",
        "GPUSize64",
        "GPUIndex32",
        "GPUSize32",
        "GPUSignedOffset32"
      ],
      "GPURenderBundle": [
        "GPUObjectBase"
      ],
      "GPURenderBundleDescriptor": [
        "GPUObjectDescriptorBase"
      ],
      "GPURenderBundleEncoder": [
        "GPURenderBundle",
        "GPURenderBundleDescriptor",
        "GPUObjectBase",
        "GPUCommandsMixin",
        "GPUDebugCommandsMixin",
        "GPUBindingCommandsMixin",
        "GPURenderCommandsMixin"
      ],
      "GPURenderBundleEncoderDescriptor": [
        "GPURenderPassLayout"
      ],
      "GPUQueueDescriptor": [
        "GPUObjectDescriptorBase"
      ],
      "GPUQueue": [
        "GPUCommandBuffer",
        "GPUBuffer",
        "GPUSize64",
        "AllowSharedBufferSource",
        "GPUTexelCopyTextureInfo",
        "GPUTexelCopyBufferLayout",
        "GPUExtent3D",
        "GPUCopyExternalImageSourceInfo",
        "GPUCopyExternalImageDestInfo",
        "GPUObjectBase"
      ],
      "GPUQuerySet": [
        "GPUQueryType",
        "GPUSize32Out",
        "GPUObjectBase"
      ],
      "GPUQuerySetDescriptor": [
        "GPUObjectDescriptorBase",
        "GPUQueryType",
        "GPUSize32"
      ],
      "GPUCanvasContext": [
        "HTMLCanvasElement",
        "OffscreenCanvas",
        "GPUCanvasConfiguration",
        "GPUTexture"
      ],
      "GPUCanvasToneMapping": [
        "GPUCanvasToneMappingMode"
      ],
      "GPUCanvasConfiguration": [
        "GPUDevice",
        "GPUTextureFormat",
        "GPUTextureUsageFlags",
        "PredefinedColorSpace",
        "GPUCanvasToneMapping",
        "GPUCanvasAlphaMode"
      ],
      "GPUDeviceLostInfo": [
        "GPUDeviceLostReason"
      ],
      "GPUError": [],
      "GPUValidationError": [
        "GPUError"
      ],
      "GPUOutOfMemoryError": [
        "GPUError"
      ],
      "GPUInternalError": [
        "GPUError"
      ],
      "GPUUncapturedErrorEvent": [
        "Event",
        "GPUUncapturedErrorEventInit",
        "GPUError"
      ],
      "GPUUncapturedErrorEventInit": [
        "EventInit",
        "GPUError"
      ],
      "GPUColorDict": [],
      "GPUOrigin2DDict": [
        "GPUIntegerCoordinate"
      ],
      "GPUOrigin3DDict": [
        "GPUIntegerCoordinate"
      ],
      "GPUExtent3DDict": [
        "GPUIntegerCoordinate"
      ]
    },
    "externalDependencies": [
      "EventTarget",
      "ArrayBuffer",
      "HTMLVideoElement",
      "VideoFrame",
      "PredefinedColorSpace",
      "DOMException",
      "ImageBitmap",
      "ImageData",
      "HTMLImageElement",
      "HTMLCanvasElement",
      "OffscreenCanvas",
      "Uint32Array",
      "AllowSharedBufferSource",
      "Event",
      "EventInit",
      "EventHandler"
    ],
    "hasObsoleteIdl": false
  }
}