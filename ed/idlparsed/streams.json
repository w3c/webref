{
  "spec": {
    "title": "Streams Standard",
    "url": "https://streams.spec.whatwg.org/"
  },
  "idlparsed": {
    "jsNames": {
      "constructors": {
        "*": [
          "ReadableStream",
          "ReadableStreamDefaultReader",
          "ReadableStreamBYOBReader",
          "WritableStream",
          "WritableStreamDefaultWriter",
          "TransformStream",
          "ByteLengthQueuingStrategy",
          "CountQueuingStrategy"
        ]
      },
      "functions": {
        "*": [
          "ReadableStreamDefaultController",
          "ReadableByteStreamController",
          "ReadableStreamBYOBRequest",
          "WritableStreamDefaultController",
          "TransformStreamDefaultController"
        ]
      }
    },
    "idlNames": {
      "ReadableStream": {
        "fragment": "[Exposed=*, Transferable]\ninterface ReadableStream {\n  constructor(optional object underlyingSource, optional QueuingStrategy strategy = {});\n\n  readonly attribute boolean locked;\n\n  Promise<undefined> cancel(optional any reason);\n  ReadableStreamReader getReader(optional ReadableStreamGetReaderOptions options = {});\n  ReadableStream pipeThrough(ReadableWritablePair transform, optional StreamPipeOptions options = {});\n  Promise<undefined> pipeTo(WritableStream destination, optional StreamPipeOptions options = {});\n  sequence<ReadableStream> tee();\n\n  async iterable<any>(optional ReadableStreamIteratorOptions options = {});\n};",
        "type": "interface",
        "name": "ReadableStream",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "underlyingSource",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "object"
                },
                "default": null,
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "strategy",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "QueuingStrategy"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "locked",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "cancel",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "reason",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getReader",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamReader"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStreamGetReaderOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "pipeThrough",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStream"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "transform",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableWritablePair"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "StreamPipeOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "pipeTo",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "destination",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "WritableStream"
                },
                "default": null,
                "optional": false,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "StreamPipeOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "tee",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "sequence",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStream"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "iterable",
            "idlType": [
              {
                "type": null,
                "extAttrs": [],
                "generic": "",
                "nullable": false,
                "union": false,
                "idlType": "any"
              }
            ],
            "arguments": [
              {
                "type": "argument",
                "name": "options",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStreamIteratorOptions"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "readonly": false,
            "async": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Transferable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false
      },
      "ReadableStreamReader": {
        "fragment": "typedef (ReadableStreamDefaultReader or ReadableStreamBYOBReader) ReadableStreamReader;",
        "type": "typedef",
        "name": "ReadableStreamReader",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamDefaultReader"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamBYOBReader"
            }
          ]
        },
        "extAttrs": []
      },
      "ReadableStreamReaderMode": {
        "fragment": "enum ReadableStreamReaderMode { \"byob\" };",
        "type": "enum",
        "name": "ReadableStreamReaderMode",
        "values": [
          {
            "type": "enum-value",
            "value": "byob"
          }
        ],
        "extAttrs": []
      },
      "ReadableStreamGetReaderOptions": {
        "fragment": "dictionary ReadableStreamGetReaderOptions {\n  ReadableStreamReaderMode mode;\n};",
        "type": "dictionary",
        "name": "ReadableStreamGetReaderOptions",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "mode",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamReaderMode"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ReadableStreamIteratorOptions": {
        "fragment": "dictionary ReadableStreamIteratorOptions {\n  boolean preventCancel = false;\n};",
        "type": "dictionary",
        "name": "ReadableStreamIteratorOptions",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "preventCancel",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ReadableWritablePair": {
        "fragment": "dictionary ReadableWritablePair {\n  required ReadableStream readable;\n  required WritableStream writable;\n};",
        "type": "dictionary",
        "name": "ReadableWritablePair",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "readable",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStream"
            },
            "default": null,
            "required": true
          },
          {
            "type": "field",
            "name": "writable",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WritableStream"
            },
            "default": null,
            "required": true
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "StreamPipeOptions": {
        "fragment": "dictionary StreamPipeOptions {\n  boolean preventClose = false;\n  boolean preventAbort = false;\n  boolean preventCancel = false;\n  AbortSignal signal;\n};",
        "type": "dictionary",
        "name": "StreamPipeOptions",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "preventClose",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          },
          {
            "type": "field",
            "name": "preventAbort",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          },
          {
            "type": "field",
            "name": "preventCancel",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": {
              "type": "boolean",
              "value": false
            },
            "required": false
          },
          {
            "type": "field",
            "name": "signal",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "AbortSignal"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "UnderlyingSource": {
        "fragment": "dictionary UnderlyingSource {\n  UnderlyingSourceStartCallback start;\n  UnderlyingSourcePullCallback pull;\n  UnderlyingSourceCancelCallback cancel;\n  ReadableStreamType type;\n  [EnforceRange] unsigned long long autoAllocateChunkSize;\n};",
        "type": "dictionary",
        "name": "UnderlyingSource",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "start",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSourceStartCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "pull",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSourcePullCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "cancel",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSourceCancelCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "type",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamType"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "autoAllocateChunkSize",
            "extAttrs": [
              {
                "type": "extended-attribute",
                "name": "EnforceRange",
                "rhs": null,
                "arguments": []
              }
            ],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unsigned long long"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ReadableStreamController": {
        "fragment": "typedef (ReadableStreamDefaultController or ReadableByteStreamController) ReadableStreamController;",
        "type": "typedef",
        "name": "ReadableStreamController",
        "idlType": {
          "type": "typedef-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": true,
          "idlType": [
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamDefaultController"
            },
            {
              "type": null,
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableByteStreamController"
            }
          ]
        },
        "extAttrs": []
      },
      "UnderlyingSourceStartCallback": {
        "fragment": "callback UnderlyingSourceStartCallback = any (ReadableStreamController controller);",
        "type": "callback",
        "name": "UnderlyingSourceStartCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "any"
        },
        "arguments": [
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "UnderlyingSourcePullCallback": {
        "fragment": "callback UnderlyingSourcePullCallback = Promise<undefined> (ReadableStreamController controller);",
        "type": "callback",
        "name": "UnderlyingSourcePullCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStreamController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "UnderlyingSourceCancelCallback": {
        "fragment": "callback UnderlyingSourceCancelCallback = Promise<undefined> (optional any reason);",
        "type": "callback",
        "name": "UnderlyingSourceCancelCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [
          {
            "type": "argument",
            "name": "reason",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "optional": true,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "ReadableStreamType": {
        "fragment": "enum ReadableStreamType { \"bytes\" };",
        "type": "enum",
        "name": "ReadableStreamType",
        "values": [
          {
            "type": "enum-value",
            "value": "bytes"
          }
        ],
        "extAttrs": []
      },
      "ReadableStreamGenericReader": {
        "fragment": "interface mixin ReadableStreamGenericReader {\n  readonly attribute Promise<undefined> closed;\n\n  Promise<undefined> cancel(optional any reason);\n};",
        "type": "interface mixin",
        "name": "ReadableStreamGenericReader",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "closed",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "cancel",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "reason",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ReadableStreamDefaultReader": {
        "fragment": "[Exposed=*]\ninterface ReadableStreamDefaultReader {\n  constructor(ReadableStream stream);\n\n  Promise<ReadableStreamDefaultReadResult> read();\n  undefined releaseLock();\n};",
        "type": "interface",
        "name": "ReadableStreamDefaultReader",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "stream",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStream"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "operation",
            "name": "read",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStreamDefaultReadResult"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "releaseLock",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "ReadableStreamDefaultReadResult": {
        "fragment": "dictionary ReadableStreamDefaultReadResult {\n  any value;\n  boolean done;\n};",
        "type": "dictionary",
        "name": "ReadableStreamDefaultReadResult",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "value",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "done",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ReadableStreamBYOBReader": {
        "fragment": "[Exposed=*]\ninterface ReadableStreamBYOBReader {\n  constructor(ReadableStream stream);\n\n  Promise<ReadableStreamBYOBReadResult> read(ArrayBufferView view);\n  undefined releaseLock();\n};",
        "type": "interface",
        "name": "ReadableStreamBYOBReader",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "stream",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStream"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "operation",
            "name": "read",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ReadableStreamBYOBReadResult"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "view",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBufferView"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "releaseLock",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "ReadableStreamBYOBReadResult": {
        "fragment": "dictionary ReadableStreamBYOBReadResult {\n  ArrayBufferView value;\n  boolean done;\n};",
        "type": "dictionary",
        "name": "ReadableStreamBYOBReadResult",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "value",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ArrayBufferView"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "done",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ReadableStreamDefaultController": {
        "fragment": "[Exposed=*]\ninterface ReadableStreamDefaultController {\n  readonly attribute unrestricted double? desiredSize;\n\n  undefined close();\n  undefined enqueue(optional any chunk);\n  undefined error(optional any e);\n};",
        "type": "interface",
        "name": "ReadableStreamDefaultController",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "desiredSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "unrestricted double"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "close",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "enqueue",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "chunk",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "error",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "e",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "ReadableByteStreamController": {
        "fragment": "[Exposed=*]\ninterface ReadableByteStreamController {\n  readonly attribute ReadableStreamBYOBRequest? byobRequest;\n  readonly attribute unrestricted double? desiredSize;\n\n  undefined close();\n  undefined enqueue(ArrayBufferView chunk);\n  undefined error(optional any e);\n};",
        "type": "interface",
        "name": "ReadableByteStreamController",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "byobRequest",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "ReadableStreamBYOBRequest"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "desiredSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "unrestricted double"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "close",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "enqueue",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "chunk",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBufferView"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "error",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "e",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "ReadableStreamBYOBRequest": {
        "fragment": "[Exposed=*]\ninterface ReadableStreamBYOBRequest {\n  readonly attribute ArrayBufferView? view;\n\n  undefined respond([EnforceRange] unsigned long long bytesWritten);\n  undefined respondWithNewView(ArrayBufferView view);\n};",
        "type": "interface",
        "name": "ReadableStreamBYOBRequest",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "view",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "ArrayBufferView"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "respond",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "bytesWritten",
                "extAttrs": [
                  {
                    "type": "extended-attribute",
                    "name": "EnforceRange",
                    "rhs": null,
                    "arguments": []
                  }
                ],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "unsigned long long"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "respondWithNewView",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "view",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "ArrayBufferView"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "WritableStream": {
        "fragment": "[Exposed=*, Transferable]\ninterface WritableStream {\n  constructor(optional object underlyingSink, optional QueuingStrategy strategy = {});\n\n  readonly attribute boolean locked;\n\n  Promise<undefined> abort(optional any reason);\n  Promise<undefined> close();\n  WritableStreamDefaultWriter getWriter();\n};",
        "type": "interface",
        "name": "WritableStream",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "underlyingSink",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "object"
                },
                "default": null,
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "strategy",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "QueuingStrategy"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "locked",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "boolean"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "abort",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "reason",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "close",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "getWriter",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WritableStreamDefaultWriter"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Transferable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false
      },
      "UnderlyingSink": {
        "fragment": "dictionary UnderlyingSink {\n  UnderlyingSinkStartCallback start;\n  UnderlyingSinkWriteCallback write;\n  UnderlyingSinkCloseCallback close;\n  UnderlyingSinkAbortCallback abort;\n  any type;\n};",
        "type": "dictionary",
        "name": "UnderlyingSink",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "start",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSinkStartCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "write",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSinkWriteCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "close",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSinkCloseCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "abort",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "UnderlyingSinkAbortCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "type",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "UnderlyingSinkStartCallback": {
        "fragment": "callback UnderlyingSinkStartCallback = any (WritableStreamDefaultController controller);",
        "type": "callback",
        "name": "UnderlyingSinkStartCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "any"
        },
        "arguments": [
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WritableStreamDefaultController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "UnderlyingSinkWriteCallback": {
        "fragment": "callback UnderlyingSinkWriteCallback = Promise<undefined> (any chunk, WritableStreamDefaultController controller);",
        "type": "callback",
        "name": "UnderlyingSinkWriteCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [
          {
            "type": "argument",
            "name": "chunk",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "optional": false,
            "variadic": false
          },
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WritableStreamDefaultController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "UnderlyingSinkCloseCallback": {
        "fragment": "callback UnderlyingSinkCloseCallback = Promise<undefined> ();",
        "type": "callback",
        "name": "UnderlyingSinkCloseCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [],
        "extAttrs": []
      },
      "UnderlyingSinkAbortCallback": {
        "fragment": "callback UnderlyingSinkAbortCallback = Promise<undefined> (optional any reason);",
        "type": "callback",
        "name": "UnderlyingSinkAbortCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [
          {
            "type": "argument",
            "name": "reason",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "optional": true,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "WritableStreamDefaultWriter": {
        "fragment": "[Exposed=*]\ninterface WritableStreamDefaultWriter {\n  constructor(WritableStream stream);\n\n  readonly attribute Promise<undefined> closed;\n  readonly attribute unrestricted double? desiredSize;\n  readonly attribute Promise<undefined> ready;\n\n  Promise<undefined> abort(optional any reason);\n  Promise<undefined> close();\n  undefined releaseLock();\n  Promise<undefined> write(optional any chunk);\n};",
        "type": "interface",
        "name": "WritableStreamDefaultWriter",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "stream",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "WritableStream"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "closed",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "desiredSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "unrestricted double"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "ready",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "attribute-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "abort",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "reason",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "close",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "releaseLock",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "write",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "Promise",
              "nullable": false,
              "union": false,
              "idlType": [
                {
                  "type": "return-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "undefined"
                }
              ]
            },
            "arguments": [
              {
                "type": "argument",
                "name": "chunk",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "WritableStreamDefaultController": {
        "fragment": "[Exposed=*]\ninterface WritableStreamDefaultController {\n  readonly attribute AbortSignal signal;\n  undefined error(optional any e);\n};",
        "type": "interface",
        "name": "WritableStreamDefaultController",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "signal",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "AbortSignal"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "error",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "e",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "TransformStream": {
        "fragment": "[Exposed=*, Transferable]\ninterface TransformStream {\n  constructor(optional object transformer,\n              optional QueuingStrategy writableStrategy = {},\n              optional QueuingStrategy readableStrategy = {});\n\n  readonly attribute ReadableStream readable;\n  readonly attribute WritableStream writable;\n};",
        "type": "interface",
        "name": "TransformStream",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "transformer",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "object"
                },
                "default": null,
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "writableStrategy",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "QueuingStrategy"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              },
              {
                "type": "argument",
                "name": "readableStrategy",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "QueuingStrategy"
                },
                "default": {
                  "type": "dictionary"
                },
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "readable",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStream"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "writable",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WritableStream"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          },
          {
            "type": "extended-attribute",
            "name": "Transferable",
            "rhs": null,
            "arguments": []
          }
        ],
        "partial": false
      },
      "Transformer": {
        "fragment": "dictionary Transformer {\n  TransformerStartCallback start;\n  TransformerTransformCallback transform;\n  TransformerFlushCallback flush;\n  any readableType;\n  any writableType;\n};",
        "type": "dictionary",
        "name": "Transformer",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "start",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "TransformerStartCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "transform",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "TransformerTransformCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "flush",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "TransformerFlushCallback"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "readableType",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "writableType",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "TransformerStartCallback": {
        "fragment": "callback TransformerStartCallback = any (TransformStreamDefaultController controller);",
        "type": "callback",
        "name": "TransformerStartCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "any"
        },
        "arguments": [
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "TransformStreamDefaultController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "TransformerFlushCallback": {
        "fragment": "callback TransformerFlushCallback = Promise<undefined> (TransformStreamDefaultController controller);",
        "type": "callback",
        "name": "TransformerFlushCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "TransformStreamDefaultController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "TransformerTransformCallback": {
        "fragment": "callback TransformerTransformCallback = Promise<undefined> (any chunk, TransformStreamDefaultController controller);",
        "type": "callback",
        "name": "TransformerTransformCallback",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "Promise",
          "nullable": false,
          "union": false,
          "idlType": [
            {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            }
          ]
        },
        "arguments": [
          {
            "type": "argument",
            "name": "chunk",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "optional": false,
            "variadic": false
          },
          {
            "type": "argument",
            "name": "controller",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "TransformStreamDefaultController"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "TransformStreamDefaultController": {
        "fragment": "[Exposed=*]\ninterface TransformStreamDefaultController {\n  readonly attribute unrestricted double? desiredSize;\n\n  undefined enqueue(optional any chunk);\n  undefined error(optional any reason);\n  undefined terminate();\n};",
        "type": "interface",
        "name": "TransformStreamDefaultController",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "desiredSize",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": true,
              "union": false,
              "idlType": "unrestricted double"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "operation",
            "name": "enqueue",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "chunk",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "error",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [
              {
                "type": "argument",
                "name": "reason",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "any"
                },
                "default": null,
                "optional": true,
                "variadic": false
              }
            ],
            "extAttrs": [],
            "special": ""
          },
          {
            "type": "operation",
            "name": "terminate",
            "idlType": {
              "type": "return-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "undefined"
            },
            "arguments": [],
            "extAttrs": [],
            "special": ""
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "QueuingStrategy": {
        "fragment": "dictionary QueuingStrategy {\n  unrestricted double highWaterMark;\n  QueuingStrategySize size;\n};",
        "type": "dictionary",
        "name": "QueuingStrategy",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "highWaterMark",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unrestricted double"
            },
            "default": null,
            "required": false
          },
          {
            "type": "field",
            "name": "size",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "QueuingStrategySize"
            },
            "default": null,
            "required": false
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "QueuingStrategySize": {
        "fragment": "callback QueuingStrategySize = unrestricted double (any chunk);",
        "type": "callback",
        "name": "QueuingStrategySize",
        "idlType": {
          "type": "return-type",
          "extAttrs": [],
          "generic": "",
          "nullable": false,
          "union": false,
          "idlType": "unrestricted double"
        },
        "arguments": [
          {
            "type": "argument",
            "name": "chunk",
            "extAttrs": [],
            "idlType": {
              "type": "argument-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "any"
            },
            "default": null,
            "optional": false,
            "variadic": false
          }
        ],
        "extAttrs": []
      },
      "QueuingStrategyInit": {
        "fragment": "dictionary QueuingStrategyInit {\n  required unrestricted double highWaterMark;\n};",
        "type": "dictionary",
        "name": "QueuingStrategyInit",
        "inheritance": null,
        "members": [
          {
            "type": "field",
            "name": "highWaterMark",
            "extAttrs": [],
            "idlType": {
              "type": "dictionary-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unrestricted double"
            },
            "default": null,
            "required": true
          }
        ],
        "extAttrs": [],
        "partial": false
      },
      "ByteLengthQueuingStrategy": {
        "fragment": "[Exposed=*]\ninterface ByteLengthQueuingStrategy {\n  constructor(QueuingStrategyInit init);\n\n  readonly attribute unrestricted double highWaterMark;\n  readonly attribute Function size;\n};",
        "type": "interface",
        "name": "ByteLengthQueuingStrategy",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "init",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "QueuingStrategyInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "highWaterMark",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unrestricted double"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "size",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "Function"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "CountQueuingStrategy": {
        "fragment": "[Exposed=*]\ninterface CountQueuingStrategy {\n  constructor(QueuingStrategyInit init);\n\n  readonly attribute unrestricted double highWaterMark;\n  readonly attribute Function size;\n};",
        "type": "interface",
        "name": "CountQueuingStrategy",
        "inheritance": null,
        "members": [
          {
            "type": "constructor",
            "arguments": [
              {
                "type": "argument",
                "name": "init",
                "extAttrs": [],
                "idlType": {
                  "type": "argument-type",
                  "extAttrs": [],
                  "generic": "",
                  "nullable": false,
                  "union": false,
                  "idlType": "QueuingStrategyInit"
                },
                "default": null,
                "optional": false,
                "variadic": false
              }
            ],
            "extAttrs": []
          },
          {
            "type": "attribute",
            "name": "highWaterMark",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "unrestricted double"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "size",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "Function"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [
          {
            "type": "extended-attribute",
            "name": "Exposed",
            "rhs": {
              "type": "*",
              "value": null
            },
            "arguments": []
          }
        ],
        "partial": false
      },
      "GenericTransformStream": {
        "fragment": "interface mixin GenericTransformStream {\n  readonly attribute ReadableStream readable;\n  readonly attribute WritableStream writable;\n};",
        "type": "interface mixin",
        "name": "GenericTransformStream",
        "inheritance": null,
        "members": [
          {
            "type": "attribute",
            "name": "readable",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "ReadableStream"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          },
          {
            "type": "attribute",
            "name": "writable",
            "idlType": {
              "type": "attribute-type",
              "extAttrs": [],
              "generic": "",
              "nullable": false,
              "union": false,
              "idlType": "WritableStream"
            },
            "extAttrs": [],
            "special": "",
            "readonly": true
          }
        ],
        "extAttrs": [],
        "partial": false
      }
    },
    "idlExtendedNames": {
      "ReadableStreamDefaultReader": [
        {
          "fragment": "ReadableStreamDefaultReader includes ReadableStreamGenericReader;",
          "type": "includes",
          "extAttrs": [],
          "target": "ReadableStreamDefaultReader",
          "includes": "ReadableStreamGenericReader"
        }
      ],
      "ReadableStreamBYOBReader": [
        {
          "fragment": "ReadableStreamBYOBReader includes ReadableStreamGenericReader;",
          "type": "includes",
          "extAttrs": [],
          "target": "ReadableStreamBYOBReader",
          "includes": "ReadableStreamGenericReader"
        }
      ]
    },
    "globals": {},
    "exposed": {
      "*": [
        "ReadableStream",
        "ReadableStreamDefaultReader",
        "ReadableStreamBYOBReader",
        "ReadableStreamDefaultController",
        "ReadableByteStreamController",
        "ReadableStreamBYOBRequest",
        "WritableStream",
        "WritableStreamDefaultWriter",
        "WritableStreamDefaultController",
        "TransformStream",
        "TransformStreamDefaultController",
        "ByteLengthQueuingStrategy",
        "CountQueuingStrategy"
      ]
    },
    "dependencies": {
      "ReadableStream": [
        "QueuingStrategy",
        "ReadableStreamReader",
        "ReadableStreamGetReaderOptions",
        "ReadableStream",
        "ReadableWritablePair",
        "StreamPipeOptions",
        "WritableStream"
      ],
      "ReadableStreamGetReaderOptions": [
        "ReadableStreamReaderMode"
      ],
      "ReadableStreamIteratorOptions": [],
      "ReadableWritablePair": [
        "ReadableStream",
        "WritableStream"
      ],
      "StreamPipeOptions": [
        "AbortSignal"
      ],
      "UnderlyingSource": [
        "UnderlyingSourceStartCallback",
        "UnderlyingSourcePullCallback",
        "UnderlyingSourceCancelCallback",
        "ReadableStreamType"
      ],
      "ReadableStreamGenericReader": [],
      "ReadableStreamDefaultReader": [
        "ReadableStream",
        "ReadableStreamDefaultReadResult",
        "ReadableStreamGenericReader"
      ],
      "ReadableStreamDefaultReadResult": [],
      "ReadableStreamBYOBReader": [
        "ReadableStream",
        "ReadableStreamBYOBReadResult",
        "ArrayBufferView",
        "ReadableStreamGenericReader"
      ],
      "ReadableStreamBYOBReadResult": [
        "ArrayBufferView"
      ],
      "ReadableStreamDefaultController": [],
      "ReadableByteStreamController": [
        "ReadableStreamBYOBRequest",
        "ArrayBufferView"
      ],
      "ReadableStreamBYOBRequest": [
        "ArrayBufferView"
      ],
      "WritableStream": [
        "QueuingStrategy",
        "WritableStreamDefaultWriter"
      ],
      "UnderlyingSink": [
        "UnderlyingSinkStartCallback",
        "UnderlyingSinkWriteCallback",
        "UnderlyingSinkCloseCallback",
        "UnderlyingSinkAbortCallback"
      ],
      "WritableStreamDefaultWriter": [
        "WritableStream"
      ],
      "WritableStreamDefaultController": [
        "AbortSignal"
      ],
      "TransformStream": [
        "QueuingStrategy",
        "ReadableStream",
        "WritableStream"
      ],
      "Transformer": [
        "TransformerStartCallback",
        "TransformerTransformCallback",
        "TransformerFlushCallback"
      ],
      "TransformStreamDefaultController": [],
      "QueuingStrategy": [
        "QueuingStrategySize"
      ],
      "QueuingStrategyInit": [],
      "ByteLengthQueuingStrategy": [
        "QueuingStrategyInit",
        "Function"
      ],
      "CountQueuingStrategy": [
        "QueuingStrategyInit",
        "Function"
      ],
      "GenericTransformStream": [
        "ReadableStream",
        "WritableStream"
      ]
    },
    "externalDependencies": [
      "AbortSignal",
      "ArrayBufferView",
      "Function"
    ],
    "hasObsoleteIdl": false
  }
}