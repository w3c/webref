{
  "name": "BiquadFilterNode",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "Web Audio API",
      "url": "https://www.w3.org/TR/webaudio/"
    },
    "fragment": "[Exposed=Window]\ninterface BiquadFilterNode : AudioNode {\n  constructor (BaseAudioContext context, optional BiquadFilterOptions options = {});\n  attribute BiquadFilterType type;\n  readonly attribute AudioParam frequency;\n  readonly attribute AudioParam detune;\n  readonly attribute AudioParam Q;\n  readonly attribute AudioParam gain;\n  undefined getFrequencyResponse (Float32Array frequencyHz,\n                                  Float32Array magResponse,\n                                  Float32Array phaseResponse);\n};",
    "href": "https://webaudio.github.io/web-audio-api/#biquadfilternode"
  },
  "extended": [],
  "inheritance": {
    "name": "AudioNode",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "Web Audio API",
        "url": "https://www.w3.org/TR/webaudio/"
      },
      "fragment": "[Exposed=Window]\ninterface AudioNode : EventTarget {\n  AudioNode connect (AudioNode destinationNode,\n                     optional unsigned long output = 0,\n                     optional unsigned long input = 0);\n  undefined connect (AudioParam destinationParam, optional unsigned long output = 0);\n  undefined disconnect ();\n  undefined disconnect (unsigned long output);\n  undefined disconnect (AudioNode destinationNode);\n  undefined disconnect (AudioNode destinationNode, unsigned long output);\n  undefined disconnect (AudioNode destinationNode,\n                        unsigned long output,\n                        unsigned long input);\n  undefined disconnect (AudioParam destinationParam);\n  undefined disconnect (AudioParam destinationParam, unsigned long output);\n  readonly attribute BaseAudioContext context;\n  readonly attribute unsigned long numberOfInputs;\n  readonly attribute unsigned long numberOfOutputs;\n  attribute unsigned long channelCount;\n  attribute ChannelCountMode channelCountMode;\n  attribute ChannelInterpretation channelInterpretation;\n};",
      "href": "https://webaudio.github.io/web-audio-api/#audionode"
    },
    "extended": [],
    "inheritance": {
      "name": "EventTarget",
      "type": "interface",
      "defined": {
        "spec": {
          "title": "DOM Standard",
          "url": "https://dom.spec.whatwg.org/"
        },
        "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
        "href": "https://dom.spec.whatwg.org/#eventtarget"
      },
      "extended": [],
      "inheritance": null,
      "includes": []
    },
    "includes": []
  },
  "includes": []
}