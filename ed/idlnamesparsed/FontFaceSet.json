{
  "name": "FontFaceSet",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "CSS Font Loading Module Level 3",
      "url": "https://www.w3.org/TR/css-font-loading-3/"
    },
    "fragment": "[Exposed=(Window,Worker)]\ninterface FontFaceSet : EventTarget {\n  constructor(sequence<FontFace> initialFaces);\n\n  setlike<FontFace>;\n  FontFaceSet add(FontFace font);\n  boolean delete(FontFace font);\n  undefined clear();\n\n  // events for when loading state changes\n  attribute EventHandler onloading;\n  attribute EventHandler onloadingdone;\n  attribute EventHandler onloadingerror;\n\n  // check and start loads if appropriate\n  // and fulfill promise when all loads complete\n  Promise<sequence<FontFace>> load(CSSOMString font, optional CSSOMString text = \" \");\n\n  // return whether all fonts in the fontlist are loaded\n  // (does not initiate load if not available)\n  boolean check(CSSOMString font, optional CSSOMString text = \" \");\n\n  // async notification that font loading and layout operations are done\n  readonly attribute Promise<FontFaceSet> ready;\n\n  // loading state, \"loading\" while one or more fonts loading, \"loaded\" otherwise\n  readonly attribute FontFaceSetLoadStatus status;\n};",
    "href": "https://drafts.csswg.org/css-font-loading/#fontfaceset"
  },
  "extended": [],
  "inheritance": {
    "name": "EventTarget",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}