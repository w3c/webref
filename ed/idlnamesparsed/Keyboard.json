{
  "name": "Keyboard",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "Keyboard Lock",
      "url": "https://wicg.github.io/keyboard-lock/"
    },
    "fragment": "[SecureContext, Exposed=Window]\ninterface Keyboard : EventTarget {\n  Promise<undefined> lock(optional sequence<DOMString> keyCodes = []);\n  undefined unlock();\n};",
    "href": "https://wicg.github.io/keyboard-lock/#keyboard"
  },
  "extended": [
    {
      "spec": {
        "title": "Keyboard Map",
        "url": "https://wicg.github.io/keyboard-map/"
      },
      "fragment": "partial interface Keyboard {\n  Promise<KeyboardLayoutMap> getLayoutMap();\n\n  attribute EventHandler onlayoutchange;\n};"
    }
  ],
  "inheritance": {
    "name": "EventTarget",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}