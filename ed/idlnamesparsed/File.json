{
  "name": "File",
  "defined": {
    "spec": {
      "title": "File API",
      "url": "https://www.w3.org/TR/FileAPI/"
    },
    "fragment": "[Exposed=(Window,Worker), Serializable]\ninterface File : Blob {\n  constructor(sequence<BlobPart> fileBits,\n              USVString fileName,\n              optional FilePropertyBag options = {});\n  readonly attribute DOMString name;\n  readonly attribute long long lastModified;\n};",
    "href": "https://w3c.github.io/FileAPI/#dfn-file"
  },
  "extended": [
    {
      "spec": {
        "title": "File and Directory Entries API",
        "url": "https://wicg.github.io/entries-api/"
      },
      "fragment": "partial interface File {\n    readonly attribute USVString webkitRelativePath;\n};"
    }
  ],
  "inheritance": {
    "name": "Blob",
    "defined": {
      "spec": {
        "title": "File API",
        "url": "https://www.w3.org/TR/FileAPI/"
      },
      "fragment": "[Exposed=(Window,Worker), Serializable]\ninterface Blob {\n  constructor(optional sequence<BlobPart> blobParts,\n              optional BlobPropertyBag options = {});\n\n  readonly attribute unsigned long long size;\n  readonly attribute DOMString type;\n\n  // slice Blob into byte-ranged chunks\n  Blob slice(optional [Clamp] long long start,\n            optional [Clamp] long long end,\n            optional DOMString contentType);\n\n  // read from the Blob.\n  [NewObject] ReadableStream stream();\n  [NewObject] Promise<USVString> text();\n  [NewObject] Promise<ArrayBuffer> arrayBuffer();\n};",
      "href": "https://w3c.github.io/FileAPI/#dfn-Blob"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}