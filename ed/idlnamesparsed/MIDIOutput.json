{
  "name": "MIDIOutput",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "Web MIDI API",
      "url": "https://www.w3.org/TR/webmidi/"
    },
    "fragment": "[SecureContext, Exposed=Window] interface MIDIOutput : MIDIPort {\n  undefined send(sequence<octet> data, optional DOMHighResTimeStamp timestamp = 0);\n  undefined clear();\n};",
    "href": "https://webaudio.github.io/web-midi-api/#dom-midioutput"
  },
  "extended": [],
  "inheritance": {
    "name": "MIDIPort",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "Web MIDI API",
        "url": "https://www.w3.org/TR/webmidi/"
      },
      "fragment": "[SecureContext, Exposed=Window] interface MIDIPort: EventTarget {\n  readonly attribute DOMString id;\n  readonly attribute DOMString? manufacturer;\n  readonly attribute DOMString? name;\n  readonly attribute MIDIPortType type;\n  readonly attribute DOMString? version;\n  readonly attribute MIDIPortDeviceState state;\n  readonly attribute MIDIPortConnectionState connection;\n  attribute EventHandler onstatechange;\n  Promise <MIDIPort> open();\n  Promise <MIDIPort> close();\n};",
      "href": "https://webaudio.github.io/web-midi-api/#dom-midiport"
    },
    "extended": [],
    "inheritance": {
      "name": "EventTarget",
      "type": "interface",
      "defined": {
        "spec": {
          "title": "DOM Standard",
          "url": "https://dom.spec.whatwg.org/"
        },
        "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
        "href": "https://dom.spec.whatwg.org/#eventtarget"
      },
      "extended": [],
      "inheritance": null,
      "includes": []
    },
    "includes": []
  },
  "includes": []
}