{
  "name": "ServiceWorkerRegistration",
  "defined": {
    "spec": {
      "title": "Service Workers Nightly",
      "url": "https://www.w3.org/TR/service-workers-1/"
    },
    "fragment": "[SecureContext, Exposed=(Window,Worker)]\ninterface ServiceWorkerRegistration : EventTarget {\n  readonly attribute ServiceWorker? installing;\n  readonly attribute ServiceWorker? waiting;\n  readonly attribute ServiceWorker? active;\n  [SameObject] readonly attribute NavigationPreloadManager navigationPreload;\n\n  readonly attribute USVString scope;\n  readonly attribute ServiceWorkerUpdateViaCache updateViaCache;\n\n  [NewObject] Promise<undefined> update();\n  [NewObject] Promise<boolean> unregister();\n\n  // event\n  attribute EventHandler onupdatefound;\n};",
    "href": "https://w3c.github.io/ServiceWorker/#serviceworkerregistration"
  },
  "extended": [
    {
      "spec": {
        "title": "Notifications API Standard",
        "url": "https://notifications.spec.whatwg.org/"
      },
      "fragment": "partial interface ServiceWorkerRegistration {\n  Promise<undefined> showNotification(DOMString title, optional NotificationOptions options = {});\n  Promise<sequence<Notification>> getNotifications(optional GetNotificationOptions filter = {});\n};"
    },
    {
      "spec": {
        "title": "Payment Handler API",
        "url": "https://www.w3.org/TR/payment-handler/"
      },
      "fragment": "partial interface ServiceWorkerRegistration {\n  [SameObject] readonly attribute PaymentManager paymentManager;\n};"
    },
    {
      "spec": {
        "title": "Push API",
        "url": "https://www.w3.org/TR/push-api/"
      },
      "fragment": "[SecureContext]\npartial interface ServiceWorkerRegistration {\n  readonly attribute PushManager pushManager;\n};"
    }
  ],
  "inheritance": {
    "name": "EventTarget",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=(Window,Worker,AudioWorklet)]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}