{
  "name": "XRSession",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "WebXR Device API",
      "url": "https://www.w3.org/TR/webxr/"
    },
    "fragment": "[SecureContext, Exposed=Window] interface XRSession : EventTarget {\n  // Attributes\n  readonly attribute XRVisibilityState visibilityState;\n  readonly attribute float? frameRate;\n  readonly attribute Float32Array? supportedFrameRates;\n  [SameObject] readonly attribute XRRenderState renderState;\n  [SameObject] readonly attribute XRInputSourceArray inputSources;\n\n  // Methods\n  undefined updateRenderState(optional XRRenderStateInit state = {});\n  Promise<undefined> updateTargetFrameRate(float rate);\n  [NewObject] Promise<XRReferenceSpace> requestReferenceSpace(XRReferenceSpaceType type);\n\n  unsigned long requestAnimationFrame(XRFrameRequestCallback callback);\n  undefined cancelAnimationFrame(unsigned long handle);\n\n  Promise<undefined> end();\n\n  // Events\n  attribute EventHandler onend;\n  attribute EventHandler oninputsourceschange;\n  attribute EventHandler onselect;\n  attribute EventHandler onselectstart;\n  attribute EventHandler onselectend;\n  attribute EventHandler onsqueeze;\n  attribute EventHandler onsqueezestart;\n  attribute EventHandler onsqueezeend;\n  attribute EventHandler onvisibilitychange;\n  attribute EventHandler onframeratechange;\n};",
    "href": "https://immersive-web.github.io/webxr/#xrsession"
  },
  "extended": [
    {
      "spec": {
        "title": "WebXR Augmented Reality Module - Level 1",
        "url": "https://www.w3.org/TR/webxr-ar-module-1/"
      },
      "fragment": "partial interface XRSession {\n  // Attributes\n  readonly attribute XREnvironmentBlendMode environmentBlendMode;\n};"
    },
    {
      "spec": {
        "title": "WebXR Augmented Reality Module - Level 1",
        "url": "https://www.w3.org/TR/webxr-ar-module-1/"
      },
      "fragment": "partial interface XRSession {\n  // Attributes\n  readonly attribute XRInteractionMode interactionMode;\n};"
    },
    {
      "spec": {
        "title": "WebXR Depth Sensing Module",
        "url": "https://www.w3.org/TR/webxr-depth-sensing-1/"
      },
      "fragment": "partial interface XRSession {\n  readonly attribute XRDepthUsage depthUsage;\n  readonly attribute XRDepthDataFormat depthDataFormat;\n};"
    },
    {
      "spec": {
        "title": "WebXR DOM Overlays Module",
        "url": "https://www.w3.org/TR/webxr-dom-overlays-1/"
      },
      "fragment": "partial interface XRSession {\n  readonly attribute XRDOMOverlayState? domOverlayState;\n};"
    },
    {
      "spec": {
        "title": "WebXR Hit Test Module",
        "url": "https://www.w3.org/TR/webxr-hit-test-1/"
      },
      "fragment": "partial interface XRSession {\n  Promise<XRHitTestSource> requestHitTestSource(XRHitTestOptionsInit options);\n  Promise<XRTransientInputHitTestSource> requestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit options);\n};"
    },
    {
      "spec": {
        "title": "WebXR Lighting Estimation API Level 1",
        "url": "https://www.w3.org/TR/webxr-lighting-estimation-1/"
      },
      "fragment": "partial interface XRSession {\n  Promise<XRLightProbe> requestLightProbe(optional XRLightProbeInit options = {});\n  readonly attribute XRReflectionFormat preferredReflectionFormat;\n};"
    }
  ],
  "inheritance": {
    "name": "EventTarget",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}