{
  "name": "USBPermissionResult",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "WebUSB API",
      "url": "https://wicg.github.io/webusb/"
    },
    "fragment": "[Exposed=(DedicatedWorker,SharedWorker,Window)]\ninterface USBPermissionResult : PermissionStatus {\n  attribute FrozenArray<USBDevice> devices;\n};",
    "href": "https://wicg.github.io/webusb/#usbpermissionresult"
  },
  "extended": [],
  "inheritance": {
    "name": "PermissionStatus",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "Permissions",
        "url": "https://www.w3.org/TR/permissions/"
      },
      "fragment": "[Exposed=(Window,Worker)]\ninterface PermissionStatus : EventTarget {\n  readonly attribute PermissionState state;\n  readonly attribute PermissionName name;\n  attribute EventHandler onchange;\n};",
      "href": "https://w3c.github.io/permissions/#dom-permissionstatus"
    },
    "extended": [],
    "inheritance": {
      "name": "EventTarget",
      "type": "interface",
      "defined": {
        "spec": {
          "title": "DOM Standard",
          "url": "https://dom.spec.whatwg.org/"
        },
        "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
        "href": "https://dom.spec.whatwg.org/#eventtarget"
      },
      "extended": [],
      "inheritance": null,
      "includes": []
    },
    "includes": []
  },
  "includes": []
}