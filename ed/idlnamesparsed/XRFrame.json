{
  "name": "XRFrame",
  "defined": {
    "spec": {
      "title": "WebXR Device API",
      "url": "https://www.w3.org/TR/webxr/"
    },
    "fragment": "[SecureContext, Exposed=Window] interface XRFrame {\n  [SameObject] readonly attribute XRSession session;\n\n  XRViewerPose? getViewerPose(XRReferenceSpace referenceSpace);\n  XRPose? getPose(XRSpace space, XRSpace baseSpace);\n};",
    "href": "https://immersive-web.github.io/webxr/#xrframe"
  },
  "extended": [
    {
      "spec": {
        "title": "WebXR Anchors Module",
        "url": "https://immersive-web.github.io/anchors/"
      },
      "fragment": "partial interface XRFrame {\n  Promise<XRAnchor> createAnchor(XRRigidTransform pose, XRSpace space);\n};"
    },
    {
      "spec": {
        "title": "WebXR Anchors Module",
        "url": "https://immersive-web.github.io/anchors/"
      },
      "fragment": "partial interface XRFrame {\n  [SameObject] readonly attribute XRAnchorSet trackedAnchors;\n};"
    },
    {
      "spec": {
        "title": "WebXR Depth Sensing Module",
        "url": "https://immersive-web.github.io/depth-sensing/"
      },
      "fragment": "partial interface XRFrame {\n  XRCPUDepthInformation? getDepthInformation(XRView view);\n};"
    },
    {
      "spec": {
        "title": "WebXR Hit Test Module",
        "url": "https://immersive-web.github.io/hit-test/"
      },
      "fragment": "partial interface XRFrame {\n  FrozenArray<XRHitTestResult> getHitTestResults(XRHitTestSource hitTestSource);\n  FrozenArray<XRTransientInputHitTestResult> getHitTestResultsForTransientInput(XRTransientInputHitTestSource hitTestSource);\n};"
    },
    {
      "spec": {
        "title": "WebXR Lighting Estimation API Level 1",
        "url": "https://immersive-web.github.io/lighting-estimation/"
      },
      "fragment": "partial interface XRFrame {\n  XRLightEstimate? getLightEstimate(XRLightProbe lightProbe);\n};"
    },
    {
      "spec": {
        "title": "WebXR Hand Input Module - Level 1",
        "url": "https://www.w3.org/TR/webxr-hand-input-1/"
      },
      "fragment": "partial interface XRFrame {\n    XRJointPose? getJointPose(XRJointSpace joint, XRSpace baseSpace);\n    boolean fillJointRadii(sequence<XRJointSpace> jointSpaces, Float32Array radii);\n\n    boolean fillPoses(sequence<XRSpace> spaces, XRSpace baseSpace, Float32Array transforms);\n};"
    }
  ],
  "inheritance": null,
  "includes": []
}