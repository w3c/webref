{
  "name": "Animation",
  "type": "interface",
  "defined": {
    "spec": {
      "title": "Web Animations Module Level 1",
      "url": "https://www.w3.org/TR/web-animations-1/"
    },
    "fragment": "[Exposed=Window]\ninterface Animation : EventTarget {\n  constructor(optional AnimationEffect? effect = null,\n              optional AnimationTimeline? timeline);\n           attribute DOMString                id;\n           attribute AnimationEffect?         effect;\n           attribute AnimationTimeline?       timeline;\n           attribute double                   playbackRate;\n  readonly attribute AnimationPlayState       playState;\n  readonly attribute AnimationReplaceState    replaceState;\n  readonly attribute boolean                  pending;\n  readonly attribute Promise<Animation>       ready;\n  readonly attribute Promise<Animation>       finished;\n           attribute EventHandler             onfinish;\n           attribute EventHandler             oncancel;\n           attribute EventHandler             onremove;\n  undefined cancel();\n  undefined finish();\n  undefined play();\n  undefined pause();\n  undefined updatePlaybackRate(double playbackRate);\n  undefined reverse();\n  undefined persist();\n  [CEReactions]\n  undefined commitStyles();\n};",
    "href": "https://drafts.csswg.org/web-animations-1/#animation"
  },
  "extended": [
    {
      "spec": {
        "title": "Web Animations Module Level 2",
        "url": "https://www.w3.org/TR/web-animations-2/"
      },
      "fragment": "[Exposed=Window]\npartial interface Animation {\n    attribute CSSNumberish?       startTime;\n    attribute CSSNumberish?       currentTime;\n    attribute AnimationTrigger?   trigger;\n    readonly attribute double? overallProgress;\n};"
    }
  ],
  "inheritance": {
    "name": "EventTarget",
    "type": "interface",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=*]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [
      {
        "spec": {
          "title": "Observable",
          "url": "https://wicg.github.io/observable/"
        },
        "fragment": "partial interface EventTarget {\n  Observable when(DOMString type, optional ObservableEventListenerOptions options = {});\n};"
      }
    ],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}