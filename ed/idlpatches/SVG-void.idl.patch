From 36cbbb25c6a82b7b5ca9d694e3db56a8fc466d1d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Philip=20J=C3=A4genstedt?= <philip@foolip.org>
Date: Wed, 14 Apr 2021 09:11:50 +0200
Subject: [PATCH] Fix void in SVG specs

https://github.com/w3c/svgwg/pull/833
---
 ed/idl/SVG.idl            | 54 +++++++++++++++++++--------------------
 ed/idl/svg-animations.idl | 16 ++++++------
 2 files changed, 35 insertions(+), 35 deletions(-)

diff --git a/ed/idl/SVG.idl b/ed/idl/SVG.idl
index e0b013bfa..5c32cba3e 100644
--- a/ed/idl/SVG.idl
+++ b/ed/idl/SVG.idl
@@ -70,8 +70,8 @@ interface SVGLength {
            attribute float valueInSpecifiedUnits;
            attribute DOMString valueAsString;
 
-  void newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);
-  void convertToSpecifiedUnits(unsigned short unitType);
+  undefined newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);
+  undefined convertToSpecifiedUnits(unsigned short unitType);
 };
 
 [Exposed=Window]
@@ -89,8 +89,8 @@ interface SVGAngle {
            attribute float valueInSpecifiedUnits;
            attribute DOMString valueAsString;
 
-  void newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);
-  void convertToSpecifiedUnits(unsigned short unitType);
+  undefined newValueSpecifiedUnits(unsigned short unitType, float valueInSpecifiedUnits);
+  undefined convertToSpecifiedUnits(unsigned short unitType);
 };
 
 [Exposed=Window]
@@ -99,14 +99,14 @@ interface SVGNumberList {
   readonly attribute unsigned long length;
   readonly attribute unsigned long numberOfItems;
 
-  void clear();
+  undefined clear();
   SVGNumber initialize(SVGNumber newItem);
   getter SVGNumber getItem(unsigned long index);
   SVGNumber insertItemBefore(SVGNumber newItem, unsigned long index);
   SVGNumber replaceItem(SVGNumber newItem, unsigned long index);
   SVGNumber removeItem(unsigned long index);
   SVGNumber appendItem(SVGNumber newItem);
-  setter void (unsigned long index, SVGNumber newItem);
+  setter undefined (unsigned long index, SVGNumber newItem);
 };
 
 [Exposed=Window]
@@ -115,14 +115,14 @@ interface SVGLengthList {
   readonly attribute unsigned long length;
   readonly attribute unsigned long numberOfItems;
 
-  void clear();
+  undefined clear();
   SVGLength initialize(SVGLength newItem);
   getter SVGLength getItem(unsigned long index);
   SVGLength insertItemBefore(SVGLength newItem, unsigned long index);
   SVGLength replaceItem(SVGLength newItem, unsigned long index);
   SVGLength removeItem(unsigned long index);
   SVGLength appendItem(SVGLength newItem);
-  setter void (unsigned long index, SVGLength newItem);
+  setter undefined (unsigned long index, SVGLength newItem);
 };
 
 [Exposed=Window]
@@ -131,14 +131,14 @@ interface SVGStringList {
   readonly attribute unsigned long length;
   readonly attribute unsigned long numberOfItems;
 
-  void clear();
+  undefined clear();
   DOMString initialize(DOMString newItem);
   getter DOMString getItem(unsigned long index);
   DOMString insertItemBefore(DOMString newItem, unsigned long index);
   DOMString replaceItem(DOMString newItem, unsigned long index);
   DOMString removeItem(unsigned long index);
   DOMString appendItem(DOMString newItem);
-  setter void (unsigned long index, DOMString newItem);
+  setter undefined (unsigned long index, DOMString newItem);
 };
 
 [Exposed=Window]
@@ -243,7 +243,7 @@ interface SVGSVGElement : SVGGraphicsElement {
   boolean checkIntersection(SVGElement element, DOMRectReadOnly rect);
   boolean checkEnclosure(SVGElement element, DOMRectReadOnly rect);
 
-  void deselectAll();
+  undefined deselectAll();
 
   SVGNumber createSVGNumber();
   SVGLength createSVGLength();
@@ -259,9 +259,9 @@ interface SVGSVGElement : SVGGraphicsElement {
   // Deprecated methods that have no effect when called,
   // but which are kept for compatibility reasons.
   unsigned long suspendRedraw(unsigned long maxWaitMilliseconds);
-  void unsuspendRedraw(unsigned long suspendHandleID);
-  void unsuspendRedrawAll();
-  void forceRedraw();
+  undefined unsuspendRedraw(unsigned long suspendHandleID);
+  undefined unsuspendRedrawAll();
+  undefined forceRedraw();
 };
 
 SVGSVGElement includes SVGFitToViewBox;
@@ -353,12 +353,12 @@ interface SVGTransform {
   [SameObject] readonly attribute DOMMatrix matrix;
   readonly attribute float angle;
 
-  void setMatrix(optional DOMMatrix2DInit matrix);
-  void setTranslate(float tx, float ty);
-  void setScale(float sx, float sy);
-  void setRotate(float angle, float cx, float cy);
-  void setSkewX(float angle);
-  void setSkewY(float angle);
+  undefined setMatrix(optional DOMMatrix2DInit matrix);
+  undefined setTranslate(float tx, float ty);
+  undefined setScale(float sx, float sy);
+  undefined setRotate(float angle, float cx, float cy);
+  undefined setSkewX(float angle);
+  undefined setSkewY(float angle);
 };
 
 [Exposed=Window]
@@ -367,14 +367,14 @@ interface SVGTransformList {
   readonly attribute unsigned long length;
   readonly attribute unsigned long numberOfItems;
 
-  void clear();
+  undefined clear();
   SVGTransform initialize(SVGTransform newItem);
   getter SVGTransform getItem(unsigned long index);
   SVGTransform insertItemBefore(SVGTransform newItem, unsigned long index);
   SVGTransform replaceItem(SVGTransform newItem, unsigned long index);
   SVGTransform removeItem(unsigned long index);
   SVGTransform appendItem(SVGTransform newItem);
-  setter void (unsigned long index, SVGTransform newItem);
+  setter undefined (unsigned long index, SVGTransform newItem);
 
   // Additional methods not common to other list interfaces.
   SVGTransform createSVGTransformFromMatrix(optional DOMMatrix2DInit matrix);
@@ -466,14 +466,14 @@ interface SVGPointList {
   readonly attribute unsigned long length;
   readonly attribute unsigned long numberOfItems;
 
-  void clear();
+  undefined clear();
   DOMPoint initialize(DOMPoint newItem);
   getter DOMPoint getItem(unsigned long index);
   DOMPoint insertItemBefore(DOMPoint newItem, unsigned long index);
   DOMPoint replaceItem(DOMPoint newItem, unsigned long index);
   DOMPoint removeItem(unsigned long index);
   DOMPoint appendItem(DOMPoint newItem);
-  setter void (unsigned long index, DOMPoint newItem);
+  setter undefined (unsigned long index, DOMPoint newItem);
 };
 
 [Exposed=Window]
@@ -507,7 +507,7 @@ interface SVGTextContentElement : SVGGraphicsElement {
   DOMRect getExtentOfChar(unsigned long charnum);
   float getRotationOfChar(unsigned long charnum);
   long getCharNumAtPosition(optional DOMPointInit point = {});
-  void selectSubString(unsigned long charnum, unsigned long nchars);
+  undefined selectSubString(unsigned long charnum, unsigned long nchars);
 };
 
 [Exposed=Window]
@@ -589,8 +589,8 @@ interface SVGMarkerElement : SVGElement {
   [SameObject] readonly attribute SVGAnimatedAngle orientAngle;
   attribute DOMString orient;
 
-  void setOrientToAuto();
-  void setOrientToAngle(SVGAngle angle);
+  undefined setOrientToAuto();
+  undefined setOrientToAngle(SVGAngle angle);
 };
 
 SVGMarkerElement includes SVGFitToViewBox;
diff --git a/ed/idl/svg-animations.idl b/ed/idl/svg-animations.idl
index 79ef3121b..6c9579433 100644
--- a/ed/idl/svg-animations.idl
+++ b/ed/idl/svg-animations.idl
@@ -8,7 +8,7 @@ interface TimeEvent : Event {
   readonly attribute WindowProxy? view;
   readonly attribute long detail;
 
-  void initTimeEvent(DOMString typeArg, Window? viewArg, long detailArg);
+  undefined initTimeEvent(DOMString typeArg, Window? viewArg, long detailArg);
 };
 
 interface SVGAnimationElement : SVGElement {
@@ -23,10 +23,10 @@ interface SVGAnimationElement : SVGElement {
   float getCurrentTime();
   float getSimpleDuration();
 
-  void beginElement();
-  void beginElementAt(float offset);
-  void endElement();
-  void endElementAt(float offset);
+  undefined beginElement();
+  undefined beginElementAt(float offset);
+  undefined endElement();
+  undefined endElementAt(float offset);
 };
 
 SVGAnimationElement includes SVGTests;
@@ -52,9 +52,9 @@ interface SVGDiscardElement : SVGAnimationElement {
 };
 
 partial interface SVGSVGElement {
-  void pauseAnimations();
-  void unpauseAnimations();
+  undefined pauseAnimations();
+  undefined unpauseAnimations();
   boolean animationsPaused();
   float getCurrentTime();
-  void setCurrentTime(float seconds);
+  undefined setCurrentTime(float seconds);
 };
-- 
2.31.1.295.g9ea45b61b8-goog

