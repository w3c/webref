{
  "spec": {
    "title": "CSS Easing Functions Module Level 2",
    "url": "https://drafts.csswg.org/css-easing-2/"
  },
  "algorithms": [
    {
      "name": "linear() canonicalization",
      "href": "https://drafts.csswg.org/css-easing-2/#linear-canonicalization",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"linear() canonicalization|canonicalize a linear()\" id=\"linear-canonicalization\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">canonicalize a linear()</dfn> function’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point④\">control points</a>,\n  perform the following:\n\n\n    \n    <p>After canonicalization,\n  every <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point①③\">control point</a> has an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value①⑦\">input progress value</a>,\n  and the <span id=\"ref-for-easing-function-input-progress-value①⑧\">input progress values</span> are monotonically non-decreasing\n  along the list.</p>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the first <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point⑤\">control point</a> lacks an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value⑥\">input progress value</a>,\nset its <span id=\"ref-for-easing-function-input-progress-value⑦\">input progress value</span> to 0.</p>"
        },
        {
          "html": "<p>If the last <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point⑥\">control point</a> lacks an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value⑧\">input progress value</a>,\nset its <span id=\"ref-for-easing-function-input-progress-value⑨\">input progress value</span> to 1.</p>"
        },
        {
          "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point⑦\">control point</a> has an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value①⓪\">input progress value</a>\nthat is less than the <span id=\"ref-for-easing-function-input-progress-value①①\">input progress value</span> of any preceding <span id=\"ref-for-linear-control-point⑧\">control point</span>,\nset its <span id=\"ref-for-easing-function-input-progress-value①②\">input progress value</span> to the largest <span id=\"ref-for-easing-function-input-progress-value①③\">input progress value</span>\nof any preceding <span id=\"ref-for-linear-control-point⑨\">control point</span>.</p>"
        },
        {
          "html": "<p>If any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point①⓪\">control point</a> still lacks an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value①④\">input progress value</a>,\nthen for each contiguous run of such <span id=\"ref-for-linear-control-point①①\">control points</span>,\nset their <span id=\"ref-for-easing-function-input-progress-value①⑤\">input progress values</span>\nso that they are evenly spaced\nbetween the preceding and following <span id=\"ref-for-linear-control-point①②\">control points</span>\nwith <span id=\"ref-for-easing-function-input-progress-value①⑥\">input progress values</span>.</p>"
        }
      ]
    },
    {
      "name": "serialize a linear() function",
      "href": "https://drafts.csswg.org/css-easing-2/#serialize-a-linear-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-linear-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a linear() function</dfn>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the string \"linear(\".</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#serialize-a-linear-control-point\" id=\"ref-for-serialize-a-linear-control-point\">Serialize each control point</a> of the function,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-concatenate\" id=\"ref-for-string-concatenate\">concatenate</a> the results using the separator \", \",\nand append the result to <var>s</var>.</p>"
        },
        {
          "html": "<p>Append \")\" to <var>s</var>,\nand return it.</p>"
        }
      ]
    },
    {
      "name": "serialize a linear() control point",
      "href": "https://drafts.csswg.org/css-easing-2/#serialize-a-linear-control-point",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-linear-control-point\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a linear() control point</dfn>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the serialization,\nas a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#number-value\" id=\"ref-for-number-value③\">&lt;number&gt;</a>,\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point①⑤\">control point’s</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value⑥\">output progress value</a>.</p>"
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point①⑥\">control point</a> originally lacked an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②⓪\">input progress value</a>,\nreturn <var>s</var>.</p>"
        },
        {
          "html": "<p>Otherwise, append \" \" (U+0020 SPACE) to <var>s</var>,\nthen serialize the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point①⑦\">control point’s</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②①\">input progress value</a>\nas a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#percentage-value\" id=\"ref-for-percentage-value⑤\">&lt;percentage&gt;</a>\nand append it to <var>s</var>.</p>"
        },
        {
          "html": "<p>Return <var>s</var>.</p>"
        }
      ]
    },
    {
      "name": "calculate linear easing output progress",
      "href": "https://drafts.csswg.org/css-easing-2/#calculate-linear-easing-output-progress",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"calculate-linear-easing-output-progress\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">calculate linear easing output progress</dfn>\n  for a given <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-easing-function\" id=\"ref-for-linear-easing-function②\">linear easing function</a> <var>func</var>,\n  an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②④\">input progress value</a> <var>inputProgress</var>,\n  and an optional <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-before-flag\" id=\"ref-for-easing-function-before-flag\">before flag</a> (defaulting to false),\n  perform the following.\n  It returns an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value⑦\">output progress value</a>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>points</var> be <var>func</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point②⓪\">control points</a>.</p>"
        },
        {
          "html": "<p>If <var>points</var> holds only a single item,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value⑧\">output progress value</a>\nof that item.</p>"
        },
        {
          "html": "<p>If <var>inputProgress</var> matches the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②⑤\">input progress value</a>\nof the first point in <var>points</var>,\nand the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-before-flag\" id=\"ref-for-easing-function-before-flag①\">before flag</a> is true,\nreturn the first point’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value⑨\">output progress value</a>.</p>"
        },
        {
          "html": "<p>If <var>inputProgress</var> matches the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②⑥\">input progress value</a>\nof at least one point in <var>points</var>,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value①⓪\">output progress value</a> of the last such point.</p>"
        },
        {
          "html": "Otherwise, find two <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point②①\">control points</a> in <var>points</var>,\n<var>A</var> and <var>B</var>,\nwhich will be used for interpolation:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>inputProgress</var> is smaller\nthan any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②⑦\">input progress value</a> in <var>points</var>,\nlet <var>A</var> and <var>B</var> be the first two items in <var>points</var>.\nIf <var>A</var> and <var>B</var> have the same <span id=\"ref-for-easing-function-input-progress-value②⑧\">input progress value</span>,\nreturn <var>A</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value①①\">output progress value</a>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>inputProgress</var> is larger\nthan any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value②⑨\">input progress value</a> in <var>points</var>,\nlet <var>A</var> and <var>B</var> be the last two items in <var>points</var>.\nIf <var>A</var> and <var>B</var> have the same <span id=\"ref-for-easing-function-input-progress-value③⓪\">input progress value</span>,\nreturn <var>B</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value①②\">output progress value</a>.</p>"
            },
            {
              "html": "<p>Otherwise, let <var>A</var> be the last <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#linear-control-point\" id=\"ref-for-linear-control-point②②\">control point</a>\nwhose <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value③①\">input progress value</a> is smaller than <var>inputProgress</var>,\nand let <var>B</var> be the first <span id=\"ref-for-linear-control-point②③\">control point</span>\nwhose <span id=\"ref-for-easing-function-input-progress-value③②\">input progress value</span> is larger than <var>inputProgress</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Linearly interpolate (or extrapolate) <var>inputProgress</var>\nalong the line defined by <var>A</var> and <var>B</var>,\nand return the result.</p>"
        }
      ]
    },
    {
      "name": "serialize a cubic-bezier() function",
      "href": "https://drafts.csswg.org/css-easing-2/#serialize-a-cubic-bezier-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-cubic-bezier-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a cubic-bezier() function</dfn>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the string \"cubic-bezier(\".</p>"
        },
        {
          "html": "<p>Serialize the function’s four arguments as <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#number-value\" id=\"ref-for-number-value⑥\">&lt;number&gt;</a>s,\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-concatenate\" id=\"ref-for-string-concatenate①\">concatenate</a> the results using the separator \", \",\nand append the result to <var>s</var>.</p>"
        },
        {
          "html": "<p>Append \")\" to <var>s</var>, and return it.</p>"
        }
      ]
    },
    {
      "name": "calculate cubic Bézier easing output progress",
      "href": "https://drafts.csswg.org/css-easing-2/#calculate-cubic-bzier-easing-output-progress",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"calculate cubic Bézier easing output progress|calculate cubic Bezier easing output progress\" id=\"calculate-cubic-bzier-easing-output-progress\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">calculate cubic Bézier easing output progress</dfn>\n  for a given <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#cubic-bzier-easing-function\" id=\"ref-for-cubic-bzier-easing-function②\">cubic Bézier easing function</a> <var>func</var>\n  and an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value③④\">input progress value</a> <var>inputProgress</var>,\n  perform the following.\n  It returns an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value①③\">output progress value</a>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>p0</var> be the point (0,0),\n<var>p1</var> be the point given by <var>func</var>’s first two arguments,\n<var>p2</var> be the point given by <var>func</var>’s second two arguments,\nand <var>p3</var> be the point (1,1).</p>"
        },
        {
          "html": "<p>If <var>inputProgress</var> is within the range [0,1] (inclusive),\nreturn the y value\ncorresponding to <var>inputProgress</var> as an x value\nfor the cubic Bézier curve\ndefined as having <var>p0</var> and <var>p3</var> as endpoints,\nand <var>p1</var> and <var>p2</var> as control points.</p>\n      <p>The evaluation of this curve is covered in many sources,\nsuch as <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/css-easing-2/#biblio-fund-comp-graphics\" title=\"Fundamentals of Computer Graphics\">[FUND-COMP-GRAPHICS]</a>.</p>"
        },
        {
          "html": "If <var>inputProgress</var> is less than 0,\nlet <var>t1</var> be <var>p0</var>.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the x value of <var>p1</var> is greater than 0,\nlet <var>t2</var> be <var>p1</var>.</p>"
            },
            {
              "html": "<p>Otherwise, if the x value of <var>p2</var> is greater than 0,\nlet <var>t2</var> be <var>p2</var>.</p>"
            },
            {
              "html": "<p>Otherwise, return 0.</p>"
            }
          ],
          "additional": [
            {
              "html": "If <var>inputProgress</var> is greater than 1,\nlet <var>t2</var> be <var>p3</var>.",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If the x value of <var>p2</var> is less than 1,\nlet <var>t1</var> be <var>p2</var>.</p>"
                },
                {
                  "html": "<p>Otherwise, if the x value of <var>p1</var> is less than 1,\nlet <var>t1</var> be <var>p1</var>.</p>"
                },
                {
                  "html": "<p>Otherwise, return 1.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "serialize a steps() functions",
      "href": "https://drafts.csswg.org/css-easing-2/#serialize-a-steps-functions",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-steps-functions\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a steps() functions</dfn>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the string \"steps(\".</p>"
        },
        {
          "html": "<p>Serialize the function’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#steps-steps\" id=\"ref-for-steps-steps\">steps</a>,\nand append it to <var>s</var>.</p>"
        },
        {
          "html": "<p>If the function’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#steps-step-position\" id=\"ref-for-steps-step-position\">step position</a> is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-easing-2/#valdef-step-position-end\" id=\"ref-for-valdef-step-position-end②\">end</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-easing-2/#valdef-step-position-jump-end\" id=\"ref-for-valdef-step-position-jump-end②\">jump-end</a>,\nappend \")\" to <var>s</var> and return <var>s</var>.</p>"
        },
        {
          "html": "<p>Otherwise, append \", \" to <var>s</var>.\nSerialize the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#steps-step-position\" id=\"ref-for-steps-step-position①\">step position</a> as a keyword,\nand append the result to <var>s</var>.\nAppend \")\" to <var>s</var>.\nReturn <var>s</var>.</p>"
        }
      ]
    },
    {
      "name": "calculate step easing output progress",
      "href": "https://drafts.csswg.org/css-easing-2/#calculate-step-easing-output-progress",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"calculate-step-easing-output-progress\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">calculate step easing output progress</dfn>\n  for a given <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#step-easing-function\" id=\"ref-for-step-easing-function\">step easing function</a> <var>func</var>,\n  an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-input-progress-value\" id=\"ref-for-easing-function-input-progress-value③⑤\">input progress value</a> <var>inputProgress</var>,\n  and an optional <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-before-flag\" id=\"ref-for-easing-function-before-flag②\">before flag</a> (defaulting to false),\n  perform the following.\n  It returns an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-output-progress-value\" id=\"ref-for-easing-function-output-progress-value①⑨\">output progress value</a>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#easing-function-before-flag\" id=\"ref-for-easing-function-before-flag③\">before flag</a> is true, return 0.</p>"
        },
        {
          "html": "<p>Let <var>steps</var> be <var>func</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#steps-steps\" id=\"ref-for-steps-steps①\">steps</a>,\nand <var>position</var> be <var>func</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-easing-2/#steps-step-position\" id=\"ref-for-steps-step-position②\">step position</a>.</p>"
        },
        {
          "html": "<p>Divide the interval [-∞, ∞] into several segments,\neach with an associated value,\nas follows:</p>",
          "ignored": [
            "[-∞, 0) has the value 0. [1, ∞] has the value 1. [0, 1) is divided into steps half-open intervals, [0, ...) to [..., 1) with their values assigned as defined for the position (see <step-position>)."
          ]
        },
        {
          "html": "<p>Return the associated value\nfor the interval that <var>inputProgress</var> is in.</p>"
        }
      ]
    }
  ]
}