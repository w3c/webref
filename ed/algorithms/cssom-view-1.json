{
  "spec": {
    "title": "CSSOM View Module Level 1",
    "url": "https://drafts.csswg.org/cssom-view-1/"
  },
  "algorithms": [
    {
      "name": "beginning edges",
      "href": "https://drafts.csswg.org/cssom-view-1/#beginning-edges",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"beginning-edges\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">beginning edges</dfn> of a particular set of edges of a box or element are the following edges:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If the overflow directions are rightward and downward",
              "html": "The top and left edges."
            },
            {
              "case": "If the overflow directions are leftward and downward",
              "html": "The top and right edges."
            },
            {
              "case": "If the overflow directions are leftward and upward",
              "html": "The bottom and right edges."
            },
            {
              "case": "If the overflow directions are rightward and upward",
              "html": "The bottom and left edges."
            }
          ]
        }
      ]
    },
    {
      "name": "ending edges",
      "href": "https://drafts.csswg.org/cssom-view-1/#ending-edges",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"ending-edges\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ending edges</dfn> of a particular set of edges of a box or element are the following edges:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If the overflow directions are rightward and downward",
              "html": "The bottom and right edges."
            },
            {
              "case": "If the overflow directions are leftward and downward",
              "html": "The bottom and left edges."
            },
            {
              "case": "If the overflow directions are leftward and upward",
              "html": "The top and left edges."
            },
            {
              "case": "If the overflow directions are rightward and upward",
              "html": "The top and right edges."
            }
          ]
        }
      ]
    },
    {
      "name": "perform a scroll of a box",
      "href": "https://drafts.csswg.org/cssom-view-1/#perform-a-scroll",
      "html": "When a user agent is to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"perform-a-scroll\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">perform a scroll</dfn> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box②\">scrolling box</a> <var>box</var>,\nto a given position <var>position</var>,\nan associated element or <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#pseudo-element\" id=\"ref-for-pseudo-element\">pseudo-element</a> <var>element</var> and optionally a scroll behavior <var>behavior</var>\n(which is \"<code>auto</code>\" if omitted),\nthe following steps must be run:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#smooth-scroll-aborted\" id=\"ref-for-smooth-scroll-aborted\">Abort</a> any ongoing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-smooth-scroll\" id=\"ref-for-concept-smooth-scroll\">smooth scroll</a> for <var>box</var>.</p>"
        },
        {
          "html": "<p>Resolve all pending scroll <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise\">Promise</a></code>s whose scroll container is <var>box</var>.</p>"
        },
        {
          "html": "<p>Let <var>scrollPromise</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①\">Promise</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>, and run the remaining steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel\">in parallel</a>.</p>"
        },
        {
          "html": "<p>If the user agent honors the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-overflow-3/#propdef-scroll-behavior\" id=\"ref-for-propdef-scroll-behavior\">scroll-behavior</a> property and one of the following is true:</p>\n      <ul>\n       <li><var>behavior</var> is \"<code>auto</code>\" and <var>element</var> is not null and its computed value of the\n  <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-overflow-3/#propdef-scroll-behavior\" id=\"ref-for-propdef-scroll-behavior①\">scroll-behavior</a> property is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-overflow-3/#valdef-scroll-behavior-smooth\" id=\"ref-for-valdef-scroll-behavior-smooth\">smooth</a>, or\n  \n       </li><li><var>behavior</var> is <code>smooth</code>\n\n      </li></ul>\n      \nthen perform a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-smooth-scroll\" id=\"ref-for-concept-smooth-scroll①\">smooth scroll</a> of <var>box</var> to <var>position</var>;\notherwise, perform an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-instant-scroll\" id=\"ref-for-concept-instant-scroll\">instant scroll</a> of <var>box</var> to <var>position</var>."
        },
        {
          "html": "<p>Wait until either the position has finished updating, or <var>scrollPromise</var> has been resolved.</p>"
        },
        {
          "html": "If <var>scrollPromise</var> is still in the pending state:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the scroll position changed as a result of this call, emit the <a class=\"idl-code\" data-link-type=\"event\" href=\"https://drafts.csswg.org/cssom-view-1/#eventdef-document-scrollend\" id=\"ref-for-eventdef-document-scrollend\">scrollend</a> event.</p>"
            },
            {
              "html": "<p>Resolve <var>scrollPromise</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "perform a scroll of a viewport",
      "href": "https://drafts.csswg.org/cssom-view-1/#viewport-perform-a-scroll",
      "html": "When a user agent is to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"viewport\" data-dfn-type=\"dfn\" data-export=\"\" id=\"viewport-perform-a-scroll\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">perform a scroll</dfn> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0①⑧\">viewport</a> to a given position <var>position</var> and optionally a scroll behavior <var>behavior</var>\n(which is \"<code>auto</code>\" if omitted) it must perform a coordinated viewport scroll by following these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>doc</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0①⑨\">viewport’s</a> associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①\">Document</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>vv</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport②\">VisualViewport</a></code> whose <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document\">associated document</a> is <var>doc</var>.</p>"
        },
        {
          "html": "<p>Let <var>maxX</var> be the difference between <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0②⓪\">viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box③\">scrolling box</a>’s width and the value of <var>vv</var>’s <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-width\" id=\"ref-for-dom-visualviewport-width\">width</a> attribute.</p>"
        },
        {
          "html": "<p>Let <var>maxY</var> be the difference between <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0②①\">viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box④\">scrolling box</a>’s height and the value of <var>vv</var>’s <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-height\" id=\"ref-for-dom-visualviewport-height\">height</a> attribute.</p>"
        },
        {
          "html": "<p>Let <var>dx</var> be the horizontal component of <var>position</var> - the value <var>vv</var>’s <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-pageleft\" id=\"ref-for-dom-visualviewport-pageleft\">pageLeft</a> attribute</p>"
        },
        {
          "html": "<p>Let <var>dy</var> be the vertical component of <var>position</var> - the value of <var>vv</var>’s <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-pagetop\" id=\"ref-for-dom-visualviewport-pagetop\">pageTop</a> attribute</p>"
        },
        {
          "html": "<p>Let <var>visual x</var> be the value of <var>vv</var>’s <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-offsetleft\" id=\"ref-for-dom-visualviewport-offsetleft\">offsetLeft</a> attribute.</p>"
        },
        {
          "html": "<p>Let <var>visual y</var> be the value of <var>vv</var>’s <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-offsettop\" id=\"ref-for-dom-visualviewport-offsettop\">offsetTop</a> attribute.</p>"
        },
        {
          "html": "<p>Let <var>visual dx</var> be min(<var>maxX</var>, max(0, <var>visual x</var> + <var>dx</var>)) - <var>visual x</var>.</p>"
        },
        {
          "html": "<p>Let <var>visual dy</var> be min(<var>maxY</var>, max(0, <var>visual y</var> + <var>dy</var>)) - <var>visual y</var>.</p>"
        },
        {
          "html": "<p>Let <var>layout dx</var> be <var>dx</var> - <var>visual dx</var></p>"
        },
        {
          "html": "<p>Let <var>layout dy</var> be <var>dy</var> - <var>visual dy</var></p>"
        },
        {
          "html": "<p>Let <var>element</var> be <var>doc</var>’s root element if there is one, null otherwise.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#perform-a-scroll\" id=\"ref-for-perform-a-scroll\">Perform a scroll</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0②②\">viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box⑤\">scrolling box</a> to its current scroll position + (<var>layout dx</var>, <var>layout dy</var>) with <var>element</var> as the\nassociated element, and <var>behavior</var> as the scroll behavior.\nLet <var>scrollPromise1</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②\">Promise</a></code> returned from this step.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#perform-a-scroll\" id=\"ref-for-perform-a-scroll①\">Perform a scroll</a> of <var>vv</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box⑥\">scrolling box</a> to its current scroll position + (<var>visual dx</var>, <var>visual dy</var>) with <var>element</var> as the associated\nelement, and <var>behavior</var> as the scroll behavior.\nLet <var>scrollPromise2</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③\">Promise</a></code> returned from this step.</p>"
        },
        {
          "html": "<p>Let <var>scrollPromise</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise④\">Promise</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>, and run the remaining steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel①\">in parallel</a>.</p>"
        },
        {
          "html": "<p>Resolve <var>scrollPromise</var> when both <var>scrollPromise1</var> and <var>scrollPromise2</var> have settled.</p>"
        }
      ]
    },
    {
      "name": "scroll to the beginning of the document",
      "href": "https://drafts.csswg.org/cssom-view-1/#scroll-to-the-beginning-of-the-document",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"scroll-to-the-beginning-of-the-document\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">scroll to the beginning of the document</dfn> for a document <var>document</var>, follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>viewport</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0②③\">viewport</a> that is associated with <var>document</var>."
        },
        {
          "html": "Let <var>position</var> be the scroll position <var>viewport</var> would have by aligning the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#beginning-edges\" id=\"ref-for-beginning-edges\">beginning edges</a> of the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area③\">scrolling area</a> with the <span id=\"ref-for-beginning-edges①\">beginning edges</span> of <var>viewport</var>."
        },
        {
          "html": "If <var>position</var> is the same as <var>viewport</var>’s current scroll position, and <var>viewport</var> does not have an ongoing\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-smooth-scroll\" id=\"ref-for-concept-smooth-scroll②\">smooth scroll</a>, abort these steps."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#viewport-perform-a-scroll\" id=\"ref-for-viewport-perform-a-scroll①\">Perform a scroll</a> of <var>viewport</var> to <var>position</var>,\n and <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element\">root element</a> as the associated element, if there is one, or null otherwise."
        }
      ]
    },
    {
      "name": "Window/matchMedia(query)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-matchmedia",
      "html": "When the <dfn class=\"dfn-paneled caniuse-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-window-matchmedia\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>matchMedia(<var>query</var>)</code></dfn> method is invoked these steps must be run:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>parsed media query list</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-media-query-list\" id=\"ref-for-parse-a-media-query-list\">parsing</a>\n <var>query</var>."
        },
        {
          "html": "Return a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylist\" id=\"ref-for-mediaquerylist①\">MediaQueryList</a></code> object,\n with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window①\">associated <code>Document</code></a>\n as the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylist-document\" id=\"ref-for-mediaquerylist-document\">document</a>,\n with <var>parsed media query list</var> as its associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylist-media-query-list\" id=\"ref-for-mediaquerylist-media-query-list\">media query list</a>."
        }
      ]
    },
    {
      "name": "Window/moveTo(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-moveto",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-window-moveto\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>moveTo(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Optionally, return.</p>"
        },
        {
          "html": "<p>Let <var>target</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①\">this</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global\">relevant global object</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window-bc\" id=\"ref-for-window-bc\">browsing context</a>.</p>"
        },
        {
          "html": "<p>If <var>target</var> is not an <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#auxiliary-browsing-context\" id=\"ref-for-auxiliary-browsing-context\">auxiliary browsing context</a> that was created by a script (as opposed to by an action of the user), then return.</p>"
        },
        {
          "html": "<p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not move outside the available space.</p>"
        },
        {
          "html": "<p>Move <var>target</var>’s window such that the window’s top left corner is at coordinates (<var>x</var>, <var>y</var>) relative to the top left corner of the output device, measured in <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px⑥\">CSS pixels</a> of <var>target</var>. The positive axes are rightward and downward.</p>"
        }
      ]
    },
    {
      "name": "Window/moveBy(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-moveby",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-window-moveby\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>moveBy(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Optionally, return.</p>"
        },
        {
          "html": "<p>Let <var>target</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global①\">relevant global object</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window-bc\" id=\"ref-for-window-bc①\">browsing context</a>.</p>"
        },
        {
          "html": "<p>If <var>target</var> is not an <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#auxiliary-browsing-context\" id=\"ref-for-auxiliary-browsing-context①\">auxiliary browsing context</a> that was created by a script (as opposed to by an action of the user), then return.</p>"
        },
        {
          "html": "<p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not move outside the available space.</p>"
        },
        {
          "html": "<p>Move <var>target</var>’s window <var>x</var> <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px⑦\">CSS pixels</a> of <var>target</var> rightward and <var>y</var> <span id=\"ref-for-px⑧\">CSS pixels</span> of <var>target</var> downward.</p>"
        }
      ]
    },
    {
      "name": "Window/resizeTo(width, height)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-resizeto",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-window-resizeto\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>resizeTo(<var>width</var>, <var>height</var>)</code></dfn> method must follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Optionally, return.</p>"
        },
        {
          "html": "<p>Let <var>target</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③\">this</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global②\">relevant global object</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window-bc\" id=\"ref-for-window-bc②\">browsing context</a>.</p>"
        },
        {
          "html": "<p>If <var>target</var> is not an <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#auxiliary-browsing-context\" id=\"ref-for-auxiliary-browsing-context②\">auxiliary browsing context</a> that was created by a script (as opposed to by an action of the user), then return.</p>"
        },
        {
          "html": "<p>Optionally, clamp <var>width</var> and <var>height</var> in a user-agent-defined manner so that the window does not get too small or bigger than the available space.</p>"
        },
        {
          "html": "<p>Resize <var>target</var>’s window by moving its right and bottom edges such that the distance between the left and right edges of the viewport are <var>width</var> <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px⑨\">CSS pixels</a> of <var>target</var> and the distance between the top and bottom edges of the viewport are <var>height</var> <span id=\"ref-for-px①⓪\">CSS pixels</span> of <var>target</var>.</p>"
        },
        {
          "html": "<p>Optionally, move <var>target</var>’s window in a user-agent-defined manner so that it does not grow outside the available space.</p>"
        }
      ]
    },
    {
      "name": "Window/resizeBy(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-resizeby",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-window-resizeby\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>resizeBy(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Optionally, return.</p>"
        },
        {
          "html": "<p>Let <var>target</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global③\">relevant global object</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window-bc\" id=\"ref-for-window-bc③\">browsing context</a>.</p>"
        },
        {
          "html": "<p>If <var>target</var> is not an <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#auxiliary-browsing-context\" id=\"ref-for-auxiliary-browsing-context③\">auxiliary browsing context</a> that was created by a script (as opposed to by an action of the user), then return.</p>"
        },
        {
          "html": "<p>Optionally, clamp <var>x</var> and <var>y</var> in a user-agent-defined manner so that the window does not get too small or bigger than the available space.</p>"
        },
        {
          "html": "<p>Resize <var>target</var>’s window by moving its right edge <var>x</var> <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px①①\">CSS pixels</a> of <var>target</var> rightward and its bottom edge <var>y</var> <span id=\"ref-for-px①②\">CSS pixels</span> of <var>target</var> downward.</p>"
        },
        {
          "html": "<p>Optionally, move <var>target</var>’s window in a user-agent-defined manner so that it does not grow outside the available space.</p>"
        }
      ]
    },
    {
      "name": "Window/scroll(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-scroll",
      "html": "When the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"scroll(x, y)|scroll(options)|scroll()\" id=\"dom-window-scroll\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scroll()</code></dfn> method is invoked these\nsteps must be run:",
      "rationale": "if",
      "steps": [
        {
          "html": "If invoked with one argument, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be the argument.</p>"
            },
            {
              "html": "<p>Let <var>x</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left\">left</a></code> dictionary member of <var>options</var>, if present,\nor the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③②\">viewport’s</a> current scroll position on the x axis otherwise.</p>"
            },
            {
              "html": "<p>Let <var>y</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top\">top</a></code> dictionary member of <var>options</var>, if present,\nor the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③③\">viewport’s</a> current scroll position on the y axis otherwise.</p>"
            }
          ]
        },
        {
          "html": "If invoked with two arguments, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be null <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value\">converted</a> to a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dictdef-scrolltooptions\" id=\"ref-for-dictdef-scrolltooptions③\">ScrollToOptions</a></code> dictionary. <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/cssom-view-1/#biblio-webidl\" title=\"Web IDL Standard\">[WEBIDL]</a></p>"
            },
            {
              "html": "<p>Let <var>x</var> and <var>y</var> be the arguments, respectively.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values\">Normalize non-finite values</a> for <var>x</var> and <var>y</var>.</p>"
        },
        {
          "html": "<p>If there is no <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③④\">viewport</a>, return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①①\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p>Let <var>viewport width</var> be the width of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③⑤\">viewport</a> excluding the width of the scroll bar, if any.</p>"
        },
        {
          "html": "<p>Let <var>viewport height</var> be the height of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③⑥\">viewport</a> excluding the height of the scroll bar, if any.</p>"
        },
        {
          "html": "<dl class=\"switch\">\n      <dt>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③⑦\">viewport</a> has rightward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①⓪\">overflow direction</a>\n    \n      </dt><dd>Let <var>x</var> be max(0, min(<var>x</var>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③⑧\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area④\">scrolling area</a> width - <var>viewport width</var>)).\n\n    \n      </dd><dt>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③⑨\">viewport</a> has leftward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①①\">overflow direction</a>\n    \n      </dt><dd>Let <var>x</var> be min(0, max(<var>x</var>, <var>viewport width</var> - <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④⓪\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑤\">scrolling area</a> width)).\n\n     </dd></dl>",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If the viewport has rightward overflow direction",
                  "html": "Let <var>x</var> be max(0, min(<var>x</var>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0③⑧\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area④\">scrolling area</a> width - <var>viewport width</var>))."
                },
                {
                  "case": "If the viewport has leftward overflow direction",
                  "html": "Let <var>x</var> be min(0, max(<var>x</var>, <var>viewport width</var> - <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④⓪\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑤\">scrolling area</a> width))."
                }
              ]
            }
          ]
        },
        {
          "html": "<dl class=\"switch\">\n      <dt>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④①\">viewport</a> has downward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①②\">overflow direction</a>\n    \n      </dt><dd>Let <var>y</var> be max(0, min(<var>y</var>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④②\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑥\">scrolling area</a> height - <var>viewport height</var>)).\n\n    \n      </dd><dt>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④③\">viewport</a> has upward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①③\">overflow direction</a>\n    \n      </dt><dd>Let <var>y</var> be min(0, max(<var>y</var>, <var>viewport height</var> - <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④④\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑦\">scrolling area</a> height)).\n\n     </dd></dl>",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If the viewport has downward overflow direction",
                  "html": "Let <var>y</var> be max(0, min(<var>y</var>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④②\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑥\">scrolling area</a> height - <var>viewport height</var>))."
                },
                {
                  "case": "If the viewport has upward overflow direction",
                  "html": "Let <var>y</var> be min(0, max(<var>y</var>, <var>viewport height</var> - <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④④\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑦\">scrolling area</a> height))."
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>position</var> be the scroll position the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0④⑤\">viewport</a> would have\nby aligning the x-coordinate <var>x</var> of the <span id=\"ref-for-viewport%E2%91%A0④⑥\">viewport</span> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area⑧\">scrolling area</a>\nwith the left of the <span id=\"ref-for-viewport%E2%91%A0④⑦\">viewport</span>\nand aligning the y-coordinate <var>y</var> of the <span id=\"ref-for-viewport%E2%91%A0④⑧\">viewport</span> <span id=\"ref-for-scrolling-area⑨\">scrolling area</span>\nwith the top of the <span id=\"ref-for-viewport%E2%91%A0④⑨\">viewport</span>.</p>"
        },
        {
          "html": "<p>If <var>position</var> is the same as the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑤⓪\">viewport’s</a> current scroll position,\nand the <span id=\"ref-for-viewport%E2%91%A0⑤①\">viewport</span> does not have an ongoing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-smooth-scroll\" id=\"ref-for-concept-smooth-scroll③\">smooth scroll</a>, return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①②\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p>Let <var>document</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑤②\">viewport’s</a> associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document③\">Document</a></code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#viewport-perform-a-scroll\" id=\"ref-for-viewport-perform-a-scroll②\">Perform a scroll</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑤③\">viewport</a> to <var>position</var>,\n<var>document</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①\">root element</a> as the associated element, if there is one, or null otherwise,\nand the scroll behavior being the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolloptions-behavior\" id=\"ref-for-dom-scrolloptions-behavior\">behavior</a></code> dictionary member of <var>options</var>.\nLet <var>scrollPromise</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①③\">Promise</a></code> returned from this step.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>.</p>"
        }
      ]
    },
    {
      "name": "Window/scrollBy(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-scrollby",
      "html": "When the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"scrollBy(x, y)|scrollBy(options)|scrollBy()\" id=\"dom-window-scrollby\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollBy()</code></dfn> method is invoked, the\nuser agent must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If invoked with two arguments, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be null <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value①\">converted</a> to a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dictdef-scrolltooptions\" id=\"ref-for-dictdef-scrolltooptions④\">ScrollToOptions</a></code> dictionary. <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/cssom-view-1/#biblio-webidl\" title=\"Web IDL Standard\">[WEBIDL]</a></p>"
            },
            {
              "html": "<p>Let <var>x</var> and <var>y</var> be the arguments, respectively.</p>"
            },
            {
              "html": "<p>Let the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left①\">left</a></code> dictionary member of <var>options</var> have the value <var>x</var>.</p>"
            },
            {
              "html": "<p>Let the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top①\">top</a></code> dictionary member of <var>options</var> have the value <var>y</var>.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values①\">Normalize non-finite values</a> for the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left②\">left</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top②\">top</a></code> dictionary members of <var>options</var>.</p>"
        },
        {
          "html": "<p>Add the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx②\">scrollX</a></code> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left③\">left</a></code> dictionary member.</p>"
        },
        {
          "html": "<p>Add the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrolly\" id=\"ref-for-dom-window-scrolly②\">scrollY</a></code> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top③\">top</a></code> dictionary member.</p>"
        },
        {
          "html": "<p>Return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①④\">Promise</a></code> returned from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll③\">scroll()</a></code> after the method is invoked with <var>options</var> as the only argument.</p>"
        }
      ]
    },
    {
      "name": "Window/devicePixelRatio",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-window-devicepixelratio",
      "html": "The <dfn class=\"dfn-paneled caniuse-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-window-devicepixelratio\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>devicePixelRatio</code></dfn> attribute must return the result of the following <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"determine-the-device-pixel-ratio\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">determine the device pixel ratio</dfn> algorithm:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If there is no output device, return 1 and abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>CSS pixel size</var> be the size of a <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px①⑤\">CSS pixel</a> at the current <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#page-zoom\" id=\"ref-for-page-zoom\">page zoom</a> and using a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scale-factor\" id=\"ref-for-scale-factor①\">scale factor</a> of 1.0.</p>"
        },
        {
          "html": "<p>Let <var>device pixel size</var> be the vertical size of a device pixel of the output device.</p>"
        },
        {
          "html": "<p>Return the result of dividing <var>CSS pixel size</var> by <var>device pixel size</var>.</p>"
        }
      ]
    },
    {
      "name": "set up browsing context features",
      "href": "https://drafts.csswg.org/cssom-view-1/#set-up-browsing-context-features",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-up-browsing-context-features\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set up browsing context features</dfn> for a browsing context <var>target</var> given a\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map\">map</a> <var>tokenizedFeatures</var>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be null.</p>"
        },
        {
          "html": "<p>Let <var>y</var> be null.</p>"
        },
        {
          "html": "<p>Let <var>width</var> be null.</p>"
        },
        {
          "html": "<p>Let <var>height</var> be null.</p>"
        },
        {
          "html": "If <var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-left\" id=\"ref-for-supported-open-feature-name-left\">left</a>\"]\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists\">exists</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>x</var> to the result of invoking the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-integers\" id=\"ref-for-rules-for-parsing-integers\">rules for parsing integers</a> on\n<var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-left\" id=\"ref-for-supported-open-feature-name-left①\">left</a>\"].</p>"
            },
            {
              "html": "<p>If <var>x</var> is an error, set <var>x</var> to 0.</p>"
            },
            {
              "html": "<p>Optionally, clamp <var>x</var> in a user-agent-defined manner so that the window does not\nmove outside the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#web-exposed-available-screen-area\" id=\"ref-for-web-exposed-available-screen-area\">Web-exposed available screen area</a>.</p>"
            },
            {
              "html": "<p>Optionally, move <var>target</var>’s window such that the window’s left edge is at the\nhorizontal coordinate <var>x</var> relative to the left edge of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#web-exposed-screen-area\" id=\"ref-for-web-exposed-screen-area②\">Web-exposed screen\narea</a>, measured in <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px①⑥\">CSS pixels</a> of <var>target</var>. The positive axis is rightward.</p>"
            }
          ]
        },
        {
          "html": "If <var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-top\" id=\"ref-for-supported-open-feature-name-top\">top</a>\"]\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">exists</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>y</var> to the result of invoking the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-integers\" id=\"ref-for-rules-for-parsing-integers①\">rules for parsing integers</a> on\n<var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-top\" id=\"ref-for-supported-open-feature-name-top①\">top</a>\"].</p>"
            },
            {
              "html": "<p>If <var>y</var> is an error, set <var>y</var> to 0.</p>"
            },
            {
              "html": "<p>Optionally, clamp <var>y</var> in a user-agent-defined manner so that the window does not\nmove outside the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#web-exposed-available-screen-area\" id=\"ref-for-web-exposed-available-screen-area①\">Web-exposed available screen area</a>.</p>"
            },
            {
              "html": "<p>Optionally, move <var>target</var>’s window such that the window’s top edge is at the\nvertical coordinate <var>y</var> relative to the top edge of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#web-exposed-screen-area\" id=\"ref-for-web-exposed-screen-area③\">Web-exposed screen\narea</a>, measured in <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px①⑦\">CSS pixels</a> of <var>target</var>. The positive axis is downward.</p>"
            }
          ]
        },
        {
          "html": "If <var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-width\" id=\"ref-for-supported-open-feature-name-width\">width</a>\"]\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②\">exists</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>width</var> to the result of invoking the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-integers\" id=\"ref-for-rules-for-parsing-integers②\">rules for parsing integers</a> on\n<var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-width\" id=\"ref-for-supported-open-feature-name-width①\">width</a>\"].</p>"
            },
            {
              "html": "<p>If <var>width</var> is an error, set <var>width</var> to 0.</p>"
            },
            {
              "html": "<p>If <var>width</var> is not 0:</p>",
              "ignored": [
                "Optionally, clamp width in a user-agent-defined manner so that the window does not get too small or bigger than the Web-exposed available screen area. Optionally, size target’s window by moving its right edge such that the distance between the left and right edges of the viewport are width CSS pixels of target. Optionally, move target’s window in a user-agent-defined manner so that it does not grow outside the Web-exposed available screen area."
              ]
            }
          ]
        },
        {
          "html": "If <var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-height\" id=\"ref-for-supported-open-feature-name-height\">height</a>\"]\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">exists</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>height</var> to the result of invoking the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-integers\" id=\"ref-for-rules-for-parsing-integers③\">rules for parsing integers</a> on\n<var>tokenizedFeatures</var>[\"<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#supported-open-feature-name-height\" id=\"ref-for-supported-open-feature-name-height①\">height</a>\"].</p>"
            },
            {
              "html": "<p>If <var>height</var> is an error, set <var>height</var> to 0.</p>"
            },
            {
              "html": "<p>If <var>height</var> is not 0:</p>",
              "ignored": [
                "Optionally, clamp height in a user-agent-defined manner so that the window does not get too small or bigger than the Web-exposed available screen area. Optionally, size target’s window by moving its bottom edge such that the distance between the top and bottom edges of the viewport are height CSS pixels of target. Optionally, move target’s window in a user-agent-defined manner so that it does not grow outside the Web-exposed available screen area."
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "evaluate media queries and report changes",
      "href": "https://drafts.csswg.org/cssom-view-1/#evaluate-media-queries-and-report-changes",
      "html": "When asked to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"evaluate-media-queries-and-report-changes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">evaluate media queries and report changes</dfn> for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document④\">Document</a></code> <var>doc</var>, run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "For each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylist\" id=\"ref-for-mediaquerylist⑥\">MediaQueryList</a></code> object <var>target</var> that has <var>doc</var> as its <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylist-document\" id=\"ref-for-mediaquerylist-document②\">document</a>,\n  in the order they were created, oldest first, run these substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>target</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylist-matches-state\" id=\"ref-for-mediaquerylist-matches-state\">matches state</a> has changed since the last time these steps were run,\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire\">fire an event</a> named <a class=\"idl-code\" data-link-type=\"event\" href=\"https://drafts.csswg.org/cssom-view-1/#eventdef-mediaquerylist-change\" id=\"ref-for-eventdef-mediaquerylist-change\">change</a> at <var>target</var>\n   using <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#mediaquerylistevent\" id=\"ref-for-mediaquerylistevent\">MediaQueryListEvent</a></code>,\n   with its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-istrusted\" id=\"ref-for-dom-event-istrusted\">isTrusted</a></code> attribute initialized to true,\n   its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-mediaquerylist-media\" id=\"ref-for-dom-mediaquerylist-media\">media</a></code> attribute initialized to <var>target</var>’s <u class=\"link-error\" data-lt=\"media\" title=\"LINK ERROR: Ambiguous for-less link for 'media', please see &lt;https://speced.github.io/bikeshed/#ambi-for&gt; for instructions:\nLocal references:\nspec:cssom-view-1; type:dfn; for:MediaQueryList; text:media\nfor-less references:\nspec:css2; type:dfn; for:/; text:media\">media</u>,\n   and its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-mediaquerylistevent-matches\" id=\"ref-for-dom-mediaquerylistevent-matches\">matches</a></code> attribute initialized to <var>target</var>’s <span id=\"ref-for-mediaquerylist-matches-state①\">matches state</span>."
            }
          ]
        }
      ]
    },
    {
      "name": "MediaQueryList/addListener(callback)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-mediaquerylist-addlistener",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MediaQueryList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-mediaquerylist-addlistener\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>addListener(<var>callback</var>)</code></dfn> method,\nwhen invoked, must run these steps:",
      "rationale": "add",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#add-an-event-listener\" id=\"ref-for-add-an-event-listener\">Add an event listener</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤\">this</a>\nand an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener\">event listener</a> whose\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type\">type</a> is <code>change</code>,\nand <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback\">callback</a> is <var>callback</var>.</p>"
        }
      ]
    },
    {
      "name": "MediaQueryList/removeListener(callback)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-mediaquerylist-removelistener",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MediaQueryList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-mediaquerylist-removelistener\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>removeListener(<var>callback</var>)</code></dfn> method,\nwhen invoked, must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list\">event listener list</a>\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain\">contains</a> an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener①\">event listener</a> whose\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type①\">type</a> is <code>change</code>,\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①\">callback</a> is <var>callback</var>,\nand <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture\">capture</a> is false,\nthen <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#remove-an-event-listener\" id=\"ref-for-remove-an-event-listener\">remove an event listener</a> with\n<span id=\"ref-for-this⑦\">this</span> and that <span id=\"ref-for-concept-event-listener②\">event listener</span>.</p>"
        }
      ]
    },
    {
      "name": "Document/elementFromPoint(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-document-elementfrompoint",
      "html": "The <dfn class=\"dfn-paneled caniuse-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-elementfrompoint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>elementFromPoint(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If either argument is negative, <var>x</var> is greater than the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑤⑤\">viewport</a> width excluding the size of a rendered scroll bar (if any), or\n<var>y</var> is greater than the <span id=\"ref-for-viewport%E2%91%A0⑤⑥\">viewport</span> height excluding the size of a rendered scroll bar (if any), or there is no <span id=\"ref-for-viewport%E2%91%A0⑤⑦\">viewport</span>\nassociated with the document, return null and terminate these steps.</p>"
        },
        {
          "html": "<p>If there is a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box④\">box</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑤⑧\">viewport</a> that would be a target for hit testing at coordinates <var>x</var>,<var>y</var>,\nwhen applying the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms\">transforms</a> that apply to the descendants of the <span id=\"ref-for-viewport%E2%91%A0⑤⑨\">viewport</span>, return the associated element and terminate these steps.</p>"
        },
        {
          "html": "<p>If the document has a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②\">root element</a>, return the <span id=\"ref-for-root-element③\">root element</span> and terminate these steps.</p>"
        },
        {
          "html": "<p>Return null.</p>"
        }
      ]
    },
    {
      "name": "Document/elementsFromPoint(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-document-elementsfrompoint",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-elementsfrompoint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>elementsFromPoint(<var>x</var>, <var>y</var>)</code></dfn> method must follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>sequence</var> be a new empty sequence.</p>"
        },
        {
          "html": "<p>If either argument is negative, <var>x</var> is greater than the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑥⓪\">viewport</a> width excluding the size of a rendered scroll bar (if any), or\n<var>y</var> is greater than the <span id=\"ref-for-viewport%E2%91%A0⑥①\">viewport</span> height excluding the size of a rendered scroll bar (if any), or there is no <span id=\"ref-for-viewport%E2%91%A0⑥②\">viewport</span>\nassociated with the document, return <var>sequence</var> and terminate these steps.</p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box⑤\">box</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑥③\">viewport</a>, in paint order, starting with the topmost box, that would be a target for hit testing at\ncoordinates <var>x</var>,<var>y</var> even if nothing would be overlapping it, when applying the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①\">transforms</a> that apply to the descendants of the\n<span id=\"ref-for-viewport%E2%91%A0⑥④\">viewport</span>, append the associated element to <var>sequence</var>.</p>"
        },
        {
          "html": "<p>If the document has a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element④\">root element</a>, and the last item in <var>sequence</var> is not the <span id=\"ref-for-root-element⑤\">root element</span>, append the <span id=\"ref-for-root-element⑥\">root element</span> to <var>sequence</var>.</p>"
        },
        {
          "html": "<p>Return <var>sequence</var>.</p>"
        }
      ]
    },
    {
      "name": "Document/caretPositionFromPoint(x, y, options)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-document-caretpositionfrompoint",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"caretPositionFromPoint(x, y, options)|caretPositionFromPoint(x, y)\" id=\"dom-document-caretpositionfrompoint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>caretPositionFromPoint(<var>x</var>, <var>y</var>, <var>options</var>)</code></dfn> method must return the\nresult of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If there is no <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑥⑤\">viewport</a> associated with the document, return null.</p>"
        },
        {
          "html": "<p>If either argument is negative, <var>x</var> is greater\nthan the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑥⑥\">viewport</a> width excluding the size of a rendered\nscroll bar (if any), <var>y</var> is greater than the\n<span id=\"ref-for-viewport%E2%91%A0⑥⑦\">viewport</span> height excluding the size of a rendered scroll bar\n(if any) return null.</p>"
        },
        {
          "html": "<p>If at the coordinates <var>x</var>,<var>y</var>\nin the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑥⑧\">viewport</a> no text insertion point indicator would have\nbeen inserted when applying the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms②\">transforms</a> that apply to the descendants of the <span id=\"ref-for-viewport%E2%91%A0⑥⑨\">viewport</span>, return null.</p>"
        },
        {
          "html": "<p>If at the coordinates <var>x</var>,<var>y</var>\nin the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦⓪\">viewport</a> a text insertion point indicator would have\nbeen inserted in a text entry widget which is also a replaced element, when applying the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms③\">transforms</a> that apply to the descendants of the\n<span id=\"ref-for-viewport%E2%91%A0⑦①\">viewport</span>, return a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-position\" id=\"ref-for-caret-position\">caret position</a> with its properties set as follows:</p>\n     <dl>\n      <dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-node\" id=\"ref-for-caret-node\">caret node</a>\n    \n      </dt><dd>The node corresponding to the text entry widget.\n\n    \n      </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-offset\" id=\"ref-for-caret-offset\">caret offset</a>\n    \n      </dt><dd>The amount of 16-bit units to the left of where the\n    text insertion point indicator would have inserted.\n\n     </dd></dl>"
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>caretPosition</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#tuple\" id=\"ref-for-tuple\">tuple</a> consisting of a <var>caretPositionNode</var> (a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node\">node</a>) and a <var>caretPositionOffset</var> (a non-negative integer) for the position where the text insertion point indicator would have been inserted when applying\nthe <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms④\">transforms</a> that apply to the descendants of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦②\">viewport</a>.</p>"
            },
            {
              "html": "<p>Let <var>startNode</var> be the <var>caretPositionNode</var> of the <var>caretPosition</var>, and let <var>startOffset</var> be the <var>caretPositionOffset</var> of the <var>caretPosition</var>.</p>"
            },
            {
              "html": "While <var>startNode</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#boundary-point-node\" id=\"ref-for-boundary-point-node\">node</a>, <var>startNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root\">root</a> is a <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/css-scoping-1/#shadow-root\" id=\"ref-for-shadow-root\">shadow root</a>, and <var>startNode</var>’s <span id=\"ref-for-concept-tree-root①\">root</span> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\" id=\"ref-for-concept-shadow-including-inclusive-ancestor\">shadow-including inclusive ancestor</a> of any of <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-caretpositionfrompointoptions-shadowroots\" id=\"ref-for-dom-caretpositionfrompointoptions-shadowroots\">shadowRoots</a></code>\"], repeat these steps:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>startOffset</var> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index\">index</a> of <var>startNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②\">root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host\">host</a>.</p>"
                },
                {
                  "html": "<p>Set <var>startNode</var> to <var>startNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root③\">root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host①\">host</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent\">parent</a>.</p>"
                }
              ]
            },
            {
              "html": "<p>Return a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-position\" id=\"ref-for-caret-position①\">caret position</a> with its properties set as follows:</p>",
              "ignored": [
                "caret node is set to startNode. caret offset is set to startOffset."
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Document/scrollingElement",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-document-scrollingelement",
      "html": "The <dfn class=\"dfn-paneled caniuse-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-document-scrollingelement\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollingElement</code></dfn> attribute, on getting, must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document⑦\">Document</a></code> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks\">quirks mode</a>, follow these substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①\">the <code>body</code> element</a> exists, and it is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable①\">potentially scrollable</a>, return <span id=\"ref-for-the-body-element-2②\">the <code>body</code> element</span> and abort these steps.</p>\n       <p>For this purpose,\na value of <span class=\"css\">overflow:clip</span> on the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2③\">the <code>body</code> element</a>’s parent element\nmust be treated as <span class=\"css\">overflow:hidden</span>.</p>"
            },
            {
              "html": "<p>Return null and abort these steps.</p>"
            }
          ]
        },
        {
          "html": "<p>If there is a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element⑦\">root element</a>, return the <span id=\"ref-for-root-element⑧\">root element</span> and abort these steps.</p>"
        },
        {
          "html": "<p>Return null.</p>"
        }
      ]
    },
    {
      "name": "CaretPosition/getClientRect()",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-caretposition-getclientrect",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CaretPosition\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-caretposition-getclientrect\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getClientRect()</code></dfn> method must follow these steps,\naborting on the first step that returns a value:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-node\" id=\"ref-for-caret-node③\">caret node</a> is a text entry widget that is a replaced element,\nand that is in the document,\nreturn a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#scaled\" id=\"ref-for-scaled\">scaled</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect①\">DOMRect</a></code> object for the caret in the widget\nas represented by the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-offset\" id=\"ref-for-caret-offset③\">caret offset</a> value.\nThe <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms⑤\">transforms</a> that apply to the element and its ancestors are applied.</p>"
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>caretRange</var> be a collapsed <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#range\" id=\"ref-for-range\">Range</a></code> object whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node\">start node</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node\">end node</a> are set to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-node\" id=\"ref-for-caret-node④\">caret node</a>, and whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset\">start offset</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset\">end offset</a> are set to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#caret-offset\" id=\"ref-for-caret-offset④\">caret offset</a>.</p>"
            },
            {
              "html": "<p>Return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect②\">DOMRect</a></code> object which is the result of invoking the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-range-getboundingclientrect\" id=\"ref-for-dom-range-getboundingclientrect\">getBoundingClientRect()</a></code> method on <var>caretRange</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Element/getClientRects()",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-getclientrects",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-getclientrects\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getClientRects()</code></dfn> method, when invoked, must return the result of the following algorithm:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element on which it was invoked does not have an associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box⑥\">box</a> return an empty <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrectlist\" id=\"ref-for-domrectlist①\">DOMRectList</a></code> object and stop this algorithm.</p>"
        },
        {
          "html": "<p>If the element has an associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#svg-layout-box\" id=\"ref-for-svg-layout-box\">SVG layout box</a> return a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#scaled\" id=\"ref-for-scaled①\">scaled</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrectlist\" id=\"ref-for-domrectlist②\">DOMRectList</a></code> object containing a single <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect⑤\">DOMRect</a></code> object that describes the bounding box of the element as defined by the SVG specification, applying the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms⑥\">transforms</a> that apply to the element and its ancestors.</p>"
        },
        {
          "html": "<p>Return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrectlist\" id=\"ref-for-domrectlist③\">DOMRectList</a></code> object containing <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect⑥\">DOMRect</a></code> objects in content order, one for each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-4/#box-fragment\" id=\"ref-for-box-fragment\">box fragment</a>, describing its border area (including those with a height or width of zero) with the following constraints:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Apply the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms⑦\">transforms</a> that apply to the element and its ancestors.</p>\n      </li><li data-md=\"\">\n       <p>If the element on which the method was invoked has a computed value for the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display②\">display</a> property of <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-table\" id=\"ref-for-valdef-display-table\">table</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-inline-table\" id=\"ref-for-valdef-display-inline-table\">inline-table</a> include both the table box and the caption box, if any, but not the anonymous container box.</p>\n      </li><li data-md=\"\">\n       <p>Replace each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#anonymous\" id=\"ref-for-anonymous\">anonymous</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#block-box\" id=\"ref-for-block-box\">block box</a> with its child box(es) and repeat this until no anonymous block boxes are left in the final list.</p>\n     </li></ul>"
        }
      ]
    },
    {
      "name": "Element/get the bounding box",
      "href": "https://drafts.csswg.org/cssom-view-1/#element-get-the-bounding-box",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"dfn\" data-export=\"\" id=\"element-get-the-bounding-box\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get the bounding box</dfn> for <var>element</var>,\nrun the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>list</var> be the result of invoking <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-getclientrects\" id=\"ref-for-dom-element-getclientrects②\">getClientRects()</a></code> on\n<var>element</var>.</p>"
        },
        {
          "html": "<p>If the <var>list</var> is empty return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect⑧\">DOMRect</a></code> object whose <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-x\" id=\"ref-for-dom-domrect-x\">x</a></code>,\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-y\" id=\"ref-for-dom-domrect-y\">y</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-width\" id=\"ref-for-dom-domrect-width\">width</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-height\" id=\"ref-for-dom-domrect-height\">height</a></code> members are zero.</p>"
        },
        {
          "html": "<p>If all rectangles in <var>list</var> have zero width or height, return the first rectangle in\n<var>list</var>.</p>"
        },
        {
          "html": "<p>Otherwise, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect⑨\">DOMRect</a></code> object describing the smallest rectangle that includes all\nof the rectangles in <var>list</var> of which the height or width is not zero.</p>"
        }
      ]
    },
    {
      "name": "Element/checkVisibility(options)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-checkvisibility",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"checkVisibility(options)|checkVisibility()\" id=\"dom-element-checkvisibility\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>checkVisibility(<var>options</var>)</code></dfn> method\n    must run these steps,\n    when called on an element <var>this</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>this</var> does not have an associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box⑦\">box</a>,\nreturn false.</p>"
        },
        {
          "html": "<p>If an ancestor of <var>this</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree\">flat tree</a>\nhas <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility\">content-visibility: hidden</a>,\nreturn false.</p>"
        },
        {
          "html": "<p>If either the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-checkvisibilityoptions-opacityproperty\" id=\"ref-for-dom-checkvisibilityoptions-opacityproperty①\">opacityProperty</a></code>\nor the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-checkvisibilityoptions-checkopacity\" id=\"ref-for-dom-checkvisibilityoptions-checkopacity①\">checkOpacity</a></code>\ndictionary members of <var>options</var>\nare true,\nand <var>this</var>, or an ancestor of <var>this</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree①\">flat tree</a>,\nhas a computed <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-color-4/#propdef-opacity\" id=\"ref-for-propdef-opacity\">opacity</a> value of <span class=\"css\">0</span>,\nreturn false.</p>"
        },
        {
          "html": "<p>If either the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-checkvisibilityoptions-visibilityproperty\" id=\"ref-for-dom-checkvisibilityoptions-visibilityproperty①\">visibilityProperty</a></code>\nor the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-checkvisibilityoptions-checkvisibilitycss\" id=\"ref-for-dom-checkvisibilityoptions-checkvisibilitycss①\">checkVisibilityCSS</a></code>\ndictionary members of <var>options</var>\nare true,\nand <var>this</var> is <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/css-display-4/#invisible\" id=\"ref-for-invisible\">invisible</a>,\nreturn false.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-checkvisibilityoptions-contentvisibilityauto\" id=\"ref-for-dom-checkvisibilityoptions-contentvisibilityauto\">contentVisibilityAuto</a></code> dictionary member of <var>options</var>\nis true\nand an ancestor of <var>this</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree②\">flat tree</a>\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents\">skips its contents</a>\ndue to <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility①\">content-visibility: auto</a>,\nreturn false.</p>"
        },
        {
          "html": "<p>Return true.</p>"
        }
      ]
    },
    {
      "name": "Element/scrollIntoView(arg)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scrollintoview",
      "html": "The <dfn class=\"dfn-paneled caniuse-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"scrollIntoView(arg)|scrollIntoView()\" id=\"dom-element-scrollintoview\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollIntoView(<var>arg</var>)</code></dfn> method must run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>behavior</var> be \"<code>auto</code>\".</p>"
        },
        {
          "html": "<p>Let <var>block</var> be \"<code>start</code>\".</p>"
        },
        {
          "html": "<p>Let <var>inline</var> be \"<code>nearest</code>\".</p>"
        },
        {
          "html": "<p>Let <var>container</var> be <code>null</code>.</p>"
        },
        {
          "html": "If <var>arg</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dictdef-scrollintoviewoptions\" id=\"ref-for-dictdef-scrollintoviewoptions①\">ScrollIntoViewOptions</a></code> dictionary, then:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>behavior</var> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolloptions-behavior\" id=\"ref-for-dom-scrolloptions-behavior①\">behavior</a></code> dictionary member of <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>block</var> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrollintoviewoptions-block\" id=\"ref-for-dom-scrollintoviewoptions-block\">block</a></code> dictionary member of <var>options</var>.</p>"
            },
            {
              "html": "<p>Set <var>inline</var> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrollintoviewoptions-inline\" id=\"ref-for-dom-scrollintoviewoptions-inline\">inline</a></code> dictionary member of <var>options</var>.</p>"
            },
            {
              "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrollintoviewoptions-container\" id=\"ref-for-dom-scrollintoviewoptions-container\">container</a></code> dictionary member of <var>options</var> is \"<code>nearest</code>\",\nset <var>container</var> to the element.</p>"
            }
          ]
        },
        {
          "html": "<p>Otherwise, if <var>arg</var> is false, then set <var>block</var> to \"<code>end</code>\".</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box⑧\">box</a>,\nor is not available to user-agent features,\nthen return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②②\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scroll-a-target-into-view\" id=\"ref-for-scroll-a-target-into-view\">Scroll the element into view</a>\nwith <var>behavior</var>, <var>block</var>, <var>inline</var>, and <var>container</var>.\nLet <var>scrollPromise</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②③\">Promise</a></code> returned from this step</p>"
        },
        {
          "html": "<p>Optionally perform some other action that brings the element to the user’s attention.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>.</p>"
        }
      ]
    },
    {
      "name": "Element/scroll(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scroll",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"scroll(x, y)|scroll(options)|scroll()\" id=\"dom-element-scroll\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scroll()</code></dfn> method must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If invoked with one argument, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be the argument.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values②\">Normalize non-finite values</a> for <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left④\">left</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top④\">top</a></code> dictionary members of <var>options</var>, if present.</p>"
            },
            {
              "html": "<p>Let <var>x</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left⑤\">left</a></code> dictionary member of <var>options</var>, if present, or the element’s current scroll position on the x axis otherwise.</p>"
            },
            {
              "html": "<p>Let <var>y</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top⑤\">top</a></code> dictionary member of <var>options</var>, if present, or the element’s current scroll position on the y axis otherwise.</p>"
            }
          ]
        },
        {
          "html": "If invoked with two arguments, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be null <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value②\">converted</a> to a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dictdef-scrolltooptions\" id=\"ref-for-dictdef-scrolltooptions⑧\">ScrollToOptions</a></code> dictionary. <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/cssom-view-1/#biblio-webidl\" title=\"Web IDL Standard\">[WEBIDL]</a></p>"
            },
            {
              "html": "<p>Let <var>x</var> and <var>y</var> be the arguments, respectively.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values③\">Normalize non-finite values</a> for <var>x</var> and <var>y</var>.</p>"
            },
            {
              "html": "<p>Let the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left⑥\">left</a></code> dictionary member of <var>options</var> have the value <var>x</var>.</p>"
            },
            {
              "html": "<p>Let the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top⑥\">top</a></code> dictionary member of <var>options</var> have the value <var>y</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document\">active document</a>, return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②④\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p>Let <var>window</var> be the value of <var>document</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#dom-document-defaultview\" id=\"ref-for-dom-document-defaultview\">defaultView</a></code> attribute.</p>"
        },
        {
          "html": "<p>If <var>window</var> is null, return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②⑤\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element⑨\">root element</a> and <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks②\">quirks mode</a>, return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②⑥\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①⓪\">root element</a>, return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②⑦\">Promise</a></code> returned by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll④\">scroll()</a></code> on <var>window</var> after the method is invoked with\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx③\">scrollX</a></code> on <var>window</var> as first argument and <var>y</var> as second argument, and abort the remaining steps.</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2⑥\">the <code>body</code> element</a>,\n<var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks③\">quirks mode</a>,\nand the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable②\">potentially scrollable</a>,\nreturn the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②⑧\">Promise</a></code> returned by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll⑤\">scroll()</a></code> on <var>window</var> after the method is invoked with\n<var>options</var> as the only argument, and abort the remaining steps.</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box⑨\">box</a>,\nthe element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box①⓪\">scrolling box</a>,\nor the element has no overflow,\nreturn a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise②⑨\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scroll-an-element\" id=\"ref-for-scroll-an-element\">Scroll the element</a> to <var>x</var>,<var>y</var>,\nwith the scroll behavior being the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolloptions-behavior\" id=\"ref-for-dom-scrolloptions-behavior②\">behavior</a></code> dictionary member of <var>options</var>.  Let <var>scrollPromise</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③⓪\">Promise</a></code> returned from this step.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>.</p>"
        }
      ]
    },
    {
      "name": "Element/scrollBy(x, y)",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scrollby",
      "html": "When the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"scrollBy(x, y)|scrollBy(options)|scrollBy()\" id=\"dom-element-scrollby\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollBy()</code></dfn> method is invoked, the\nuser agent must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If invoked with one argument, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be the argument.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values④\">Normalize non-finite values</a> for <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left⑦\">left</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top⑦\">top</a></code> dictionary members of <var>options</var>, if present.</p>"
            }
          ]
        },
        {
          "html": "If invoked with two arguments, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be null <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value③\">converted</a> to a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dictdef-scrolltooptions\" id=\"ref-for-dictdef-scrolltooptions⑨\">ScrollToOptions</a></code> dictionary. <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/cssom-view-1/#biblio-webidl\" title=\"Web IDL Standard\">[WEBIDL]</a></p>"
            },
            {
              "html": "<p>Let <var>x</var> and <var>y</var> be the arguments, respectively.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values⑤\">Normalize non-finite values</a> for <var>x</var> and <var>y</var>.</p>"
            },
            {
              "html": "<p>Let the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left⑧\">left</a></code> dictionary member of <var>options</var> have the value <var>x</var>.</p>"
            },
            {
              "html": "<p>Let the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top⑧\">top</a></code> dictionary member of <var>options</var> have the value <var>y</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Add the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrollleft\" id=\"ref-for-dom-element-scrollleft②\">scrollLeft</a></code> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-left\" id=\"ref-for-dom-scrolltooptions-left⑨\">left</a></code> dictionary member.</p>"
        },
        {
          "html": "<p>Add the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrolltop\" id=\"ref-for-dom-element-scrolltop②\">scrollTop</a></code> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-scrolltooptions-top\" id=\"ref-for-dom-scrolltooptions-top⑨\">top</a></code> dictionary member.</p>"
        },
        {
          "html": "<p>Return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③①\">Promise</a></code> returned by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scroll\" id=\"ref-for-dom-element-scroll③\">scroll()</a></code> after the method is invoked with <var>options</var> as the only argument.</p>"
        }
      ]
    },
    {
      "name": "Element/scrollTop",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scrolltop",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-scrolltop\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollTop</code></dfn> attribute, on getting, must return the result of running these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document①\">active document</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>window</var> be the value of <var>document</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#dom-document-defaultview\" id=\"ref-for-dom-document-defaultview①\">defaultView</a></code> attribute.</p>"
        },
        {
          "html": "<p>If <var>window</var> is null, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①①\">root element</a> and <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks④\">quirks mode</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①②\">root element</a> return the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrolly\" id=\"ref-for-dom-window-scrolly③\">scrollY</a></code> on <var>window</var>.</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2⑦\">the <code>body</code> element</a>, <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks⑤\">quirks mode</a>, and the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable③\">potentially scrollable</a>, return the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrolly\" id=\"ref-for-dom-window-scrolly④\">scrollY</a></code> on <var>window</var>.</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①⓪\">box</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Return the y-coordinate of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⓪\">scrolling area</a> at the alignment point with the top of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge①⑥\">padding edge</a> of the element.</p>"
        }
      ]
    },
    {
      "html": "When setting the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrolltop\" id=\"ref-for-dom-element-scrolltop③\">scrollTop</a></code> attribute these steps must be run:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>y</var> be the given value.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values⑥\">Normalize non-finite values</a> for <var>y</var>.</p>"
        },
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document②\">active document</a>, terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>window</var> be the value of <var>document</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#dom-document-defaultview\" id=\"ref-for-dom-document-defaultview②\">defaultView</a></code> attribute.</p>"
        },
        {
          "html": "<p>If <var>window</var> is null, terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①③\">root element</a> and <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks⑥\">quirks mode</a>, terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①④\">root element</a> invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll⑥\">scroll()</a></code> on <var>window</var> with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx④\">scrollX</a></code> on <var>window</var> as first argument and <var>y</var> as second argument, and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2⑧\">the <code>body</code> element</a>, <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks⑦\">quirks mode</a>, and the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable④\">potentially scrollable</a>, invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll⑦\">scroll()</a></code> on <var>window</var> with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx⑤\">scrollX</a></code> as first argument and <var>y</var> as second argument, and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①①\">box</a>, the element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box①①\">scrolling box</a>, or the element has no overflow, terminate these steps.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scroll-an-element\" id=\"ref-for-scroll-an-element①\">Scroll the element</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrollleft\" id=\"ref-for-dom-element-scrollleft③\">scrollLeft</a></code>,<var>y</var>, with the scroll behavior being \"<code>auto</code>\".</p>"
        }
      ]
    },
    {
      "name": "Element/scrollLeft",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scrollleft",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-scrollleft\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollLeft</code></dfn> attribute, on getting, must return the result of running these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document③\">active document</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>window</var> be the value of <var>document</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#dom-document-defaultview\" id=\"ref-for-dom-document-defaultview③\">defaultView</a></code> attribute.</p>"
        },
        {
          "html": "<p>If <var>window</var> is null, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①⑤\">root element</a> and <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks⑧\">quirks mode</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①⑥\">root element</a> return the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx⑥\">scrollX</a></code> on <var>window</var>.</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2⑨\">the <code>body</code> element</a>, <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks⑨\">quirks mode</a>, and the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable⑤\">potentially scrollable</a>, return the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx⑦\">scrollX</a></code> on <var>window</var>.</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①②\">box</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Return the x-coordinate of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①①\">scrolling area</a> at the alignment point with the left of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge①⑦\">padding edge</a> of the element.</p>"
        }
      ]
    },
    {
      "html": "When setting the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrollleft\" id=\"ref-for-dom-element-scrollleft④\">scrollLeft</a></code> attribute these steps must be run:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>x</var> be the given value.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#normalize-non-finite-values\" id=\"ref-for-normalize-non-finite-values⑦\">Normalize non-finite values</a> for <var>x</var>.</p>"
        },
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document④\">active document</a>, terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>window</var> be the value of <var>document</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#dom-document-defaultview\" id=\"ref-for-dom-document-defaultview④\">defaultView</a></code> attribute.</p>"
        },
        {
          "html": "<p>If <var>window</var> is null, terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①⑦\">root element</a> and <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①⓪\">quirks mode</a>, terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①⑧\">root element</a> invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll⑧\">scroll()</a></code> on <var>window</var> with <var>x</var> as first argument and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrolly\" id=\"ref-for-dom-window-scrolly⑤\">scrollY</a></code> on <var>window</var> as second argument, and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①⓪\">the <code>body</code> element</a>, <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①①\">quirks mode</a>, and the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable⑥\">potentially scrollable</a>, invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scroll\" id=\"ref-for-dom-window-scroll⑨\">scroll()</a></code> on <var>window</var> with <var>x</var> as first argument and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrolly\" id=\"ref-for-dom-window-scrolly⑥\">scrollY</a></code> on <var>window</var> as second argument, and terminate these steps.</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①③\">box</a>, the element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box①②\">scrolling box</a>, or the element has no overflow, terminate these steps.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scroll-an-element\" id=\"ref-for-scroll-an-element②\">Scroll the element</a> to <var>x</var>,<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrolltop\" id=\"ref-for-dom-element-scrolltop④\">scrollTop</a></code>, with the scroll behavior being \"<code>auto</code>\".</p>"
        }
      ]
    },
    {
      "name": "Element/scrollWidth",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scrollwidth",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-scrollwidth\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollWidth</code></dfn> attribute must return the result of running these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document⑤\">active document</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>viewport width</var> be the width of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦③\">viewport</a> excluding the width of the scroll bar, if any, or zero if there is no <span id=\"ref-for-viewport%E2%91%A0⑦④\">viewport</span>.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element①⑨\">root element</a> and <var>document</var> is not in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①②\">quirks mode</a> return max(<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦⑤\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①②\">scrolling area</a> width, <var>viewport width</var>).</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①①\">the <code>body</code> element</a>, <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①③\">quirks mode</a> and the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable⑦\">potentially scrollable</a>, return max(<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦⑥\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①③\">scrolling area</a> width, <var>viewport width</var>).</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①④\">box</a> return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Return the width of the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①④\">scrolling area</a>.</p>"
        }
      ]
    },
    {
      "name": "Element/scrollHeight",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-scrollheight",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-scrollheight\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollHeight</code></dfn> attribute must return the result of running these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥\">node document</a>.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document\" id=\"ref-for-nav-document⑥\">active document</a>, return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>viewport height</var> be the height of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦⑦\">viewport</a> excluding the height of the scroll bar, if any, or zero if there is no <span id=\"ref-for-viewport%E2%91%A0⑦⑧\">viewport</span>.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②⓪\">root element</a> and <var>document</var> is not in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①④\">quirks mode</a> return max(<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑦⑨\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑤\">scrolling area</a> height, <var>viewport height</var>).</p>"
        },
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①②\">the <code>body</code> element</a>, <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①⑤\">quirks mode</a> and the element is not <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#potentially-scrollable\" id=\"ref-for-potentially-scrollable⑧\">potentially scrollable</a>, return max(<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧⓪\">viewport</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑥\">scrolling area</a> height, <var>viewport height</var>).</p>"
        },
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①⑤\">box</a> return zero and terminate these steps.</p>"
        },
        {
          "html": "<p>Return the height of the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑦\">scrolling area</a>.</p>"
        }
      ]
    },
    {
      "name": "Element/clientTop",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-clienttop",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-clienttop\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>clientTop</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①⑥\">box</a> or if the <span id=\"ref-for-box①⑦\">box</span> is inline, return zero.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled\">unscaled</a> computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-borders-4/#propdef-border-top-width\" id=\"ref-for-propdef-border-top-width\">border-top-width</a> property plus the height of any scrollbar rendered between the top <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge①⑧\">padding edge</a> and the top <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge\">border edge</a>, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms⑧\">transforms</a> that apply to the element and its ancestors.</p>"
        }
      ]
    },
    {
      "name": "Element/clientLeft",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-clientleft",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-clientleft\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>clientLeft</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box①⑧\">box</a> or if the <span id=\"ref-for-box①⑨\">box</span> is inline, return zero.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled①\">unscaled</a> computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-borders-4/#propdef-border-left-width\" id=\"ref-for-propdef-border-left-width\">border-left-width</a> property plus the width of any scrollbar rendered between the left <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge①⑨\">padding edge</a> and the left <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge①\">border edge</a>, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms⑨\">transforms</a> that apply to the element and its ancestors.</p>"
        }
      ]
    },
    {
      "name": "Element/clientWidth",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-clientwidth",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-clientwidth\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>clientWidth</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②⓪\">box</a> or if the <span id=\"ref-for-box②①\">box</span> is inline, return zero.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②①\">root element</a> and the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦\">node document</a> is not in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①⑥\">quirks mode</a>, or if the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①③\">the <code>body</code> element</a> and the element’s <span id=\"ref-for-concept-node-document⑧\">node document</span> <em>is</em> in <span id=\"ref-for-concept-document-quirks①⑦\">quirks mode</span>, return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧①\">viewport</a> width excluding the size of a rendered scroll bar (if any).</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled②\">unscaled</a> width of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⓪\">padding edge</a> excluding the width of any rendered scrollbar between the <span id=\"ref-for-padding-edge②①\">padding edge</span> and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge②\">border edge</a>, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①⓪\">transforms</a> or that apply to the element and its ancestors.</p>"
        }
      ]
    },
    {
      "name": "Element/clientHeight",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-element-clientheight",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-clientheight\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>clientHeight</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element has no associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②②\">box</a> or if the <span id=\"ref-for-box②③\">box</span> is inline, return zero.</p>"
        },
        {
          "html": "<p>If the element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②②\">root element</a> and the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑨\">node document</a> is not in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks①⑧\">quirks mode</a>, or if the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①④\">the <code>body</code> element</a> and the element’s <span id=\"ref-for-concept-node-document①⓪\">node document</span> <em>is</em> in <span id=\"ref-for-concept-document-quirks①⑨\">quirks mode</span>, return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧②\">viewport</a> height excluding the size of a rendered scroll bar (if any).</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled③\">unscaled</a> height of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②②\">padding edge</a> excluding the height of any rendered scrollbar between the <span id=\"ref-for-padding-edge②③\">padding edge</span> and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge③\">border edge</a>, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①①\">transforms</a> that apply to the element and its ancestors.</p>"
        }
      ]
    },
    {
      "name": "determine the scroll-into-view position",
      "href": "https://drafts.csswg.org/cssom-view-1/#determine-the-scroll-into-view-position",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"determine-the-scroll-into-view-position\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">determine the scroll-into-view position</dfn> of a <var>target</var>, which is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element\">Element</a>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#pseudo-element\" id=\"ref-for-pseudo-element①\">pseudo-element</a>, or <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range\" id=\"ref-for-concept-range\">Range</a>,\nwith a scroll behavior <var>behavior</var>,\na block flow direction position <var>block</var>,\nan inline base direction position <var>inline</var>,\nand a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box①③\">scrolling box</a> <var>scrolling box</var>,\nrun the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>target bounding border box</var> be the box represented by the return value of invoking Element’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-getboundingclientrect\" id=\"ref-for-dom-element-getboundingclientrect②\">getBoundingClientRect()</a></code>, if <var>target</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①\">Element</a>, or Range’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-range-getboundingclientrect\" id=\"ref-for-dom-range-getboundingclientrect①\">getBoundingClientRect()</a></code>, if <var>target</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range\" id=\"ref-for-concept-range①\">Range</a>.</p>"
        },
        {
          "html": "<p>Let <var>scrolling box edge A</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#beginning-edges\" id=\"ref-for-beginning-edges②\">beginning edge</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\" id=\"ref-for-block-flow-direction\">block flow direction</a> of <var>scrolling box</var>, and let <var>element edge A</var> be <var>target bounding border box</var>’s edge on the same physical side as that of <var>scrolling box edge A</var>.</p>"
        },
        {
          "html": "<p>Let <var>scrolling box edge B</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#ending-edges\" id=\"ref-for-ending-edges\">ending edge</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\" id=\"ref-for-block-flow-direction①\">block flow direction</a> of <var>scrolling box</var>, and let <var>element edge B</var> be <var>target bounding border box</var>’s edge on the same physical side as that of <var>scrolling box edge B</var>.</p>"
        },
        {
          "html": "<p>Let <var>scrolling box edge C</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#beginning-edges\" id=\"ref-for-beginning-edges③\">beginning edge</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#inline-base-direction\" id=\"ref-for-inline-base-direction\">inline base direction</a> of <var>scrolling box</var>, and let <var>element edge C</var> be <var>target bounding border box</var>’s edge on the same physical side as that of <var>scrolling box edge C</var>.</p>"
        },
        {
          "html": "<p>Let <var>scrolling box edge D</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#ending-edges\" id=\"ref-for-ending-edges①\">ending edge</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#inline-base-direction\" id=\"ref-for-inline-base-direction①\">inline base direction</a> of <var>scrolling box</var>, and let <var>element edge D</var> be <var>target bounding border box</var>’s edge on the same physical side as that of <var>scrolling box edge D</var>.</p>"
        },
        {
          "html": "<p>Let <var>element height</var> be the distance between <var>element edge A</var> and <var>element edge B</var>.</p>"
        },
        {
          "html": "<p>Let <var>scrolling box height</var> be the distance between <var>scrolling box edge A</var> and <var>scrolling box edge B</var>.</p>"
        },
        {
          "html": "<p>Let <var>element width</var> be the distance between <var>element edge C</var> and <var>element edge D</var>.</p>"
        },
        {
          "html": "<p>Let <var>scrolling box width</var> be the distance between <var>scrolling box edge C</var> and <var>scrolling box edge D</var>.</p>"
        },
        {
          "html": "Let <var>position</var> be the scroll position <var>scrolling box</var> would have by following these steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>block</var> is \"<code>start</code>\", then align <var>element edge A</var> with <var>scrolling box edge A</var>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>block</var> is \"<code>end</code>\", then align <var>element edge B</var> with <var>scrolling box edge B</var>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>block</var> is \"<code>center</code>\", then align the center of <var>target bounding border box</var> with the center of <var>scrolling box</var> in <var>scrolling box</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\" id=\"ref-for-block-flow-direction②\">block flow direction</a>.</p>"
            },
            {
              "html": "Otherwise, <var>block</var> is \"<code>nearest</code>\":",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B",
                      "html": "Do nothing."
                    },
                    {
                      "case": "If element edge A is outside scrolling box edge A and element height is less than scrolling box height",
                      "html": "Align <var>element edge A</var> with <var>scrolling box edge A</var>."
                    },
                    {
                      "case": "If element edge B is outside scrolling box edge B and element height is greater than scrolling box height",
                      "html": "Align <var>element edge A</var> with <var>scrolling box edge A</var>."
                    },
                    {
                      "case": "If element edge A is outside scrolling box edge A and element height is greater than scrolling box height",
                      "html": "Align <var>element edge B</var> with <var>scrolling box edge B</var>."
                    },
                    {
                      "case": "If element edge B is outside scrolling box edge B and element height is less than scrolling box height",
                      "html": "Align <var>element edge B</var> with <var>scrolling box edge B</var>."
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If <var>inline</var> is \"<code>start</code>\", then align <var>element edge C</var> with <var>scrolling box edge C</var>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>inline</var> is \"<code>end</code>\", then align <var>element edge D</var> with <var>scrolling box edge D</var>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>inline</var> is \"<code>center</code>\", then align the center of <var>target bounding border box</var> with the center of <var>scrolling box</var> in <var>scrolling box</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#inline-base-direction\" id=\"ref-for-inline-base-direction②\">inline base direction</a>.</p>"
            },
            {
              "html": "Otherwise, <var>inline</var> is \"<code>nearest</code>\":",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D",
                      "html": "Do nothing."
                    },
                    {
                      "case": "If element edge C is outside scrolling box edge C and element width is less than scrolling box width",
                      "html": "Align <var>element edge C</var> with <var>scrolling box edge C</var>."
                    },
                    {
                      "case": "If element edge D is outside scrolling box edge D and element width is greater than scrolling box width",
                      "html": "Align <var>element edge C</var> with <var>scrolling box edge C</var>."
                    },
                    {
                      "case": "If element edge C is outside scrolling box edge C and element width is greater than scrolling box width",
                      "html": "Align <var>element edge D</var> with <var>scrolling box edge D</var>."
                    },
                    {
                      "case": "If element edge D is outside scrolling box edge D and element width is less than scrolling box width",
                      "html": "Align <var>element edge D</var> with <var>scrolling box edge D</var>."
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If <var>target</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element②\">Element</a>, and the target element defines some <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-position\" id=\"ref-for-scroll-snap-position\">scroll snap positions</a>,\nthen the user agent must <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap\" id=\"ref-for-scroll-snap\">scroll snap</a> the resulting <var>position</var> to one of that element’s <span id=\"ref-for-scroll-snap-position①\">scroll snap positions</span>\nif its nearest <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-overflow-3/#scroll-container\" id=\"ref-for-scroll-container\">scroll container</a> is a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-container\" id=\"ref-for-scroll-snap-container\">scroll snap container</a>.\nThe user agent <em>may</em> also do this even when the <span id=\"ref-for-scroll-container①\">scroll container</span> has <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-snap-type\" id=\"ref-for-propdef-scroll-snap-type\">scroll-snap-type: none</a>.</p>"
            },
            {
              "html": "<p>Return <var>position</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "scroll a target into view",
      "href": "https://drafts.csswg.org/cssom-view-1/#scroll-a-target-into-view",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"scroll-a-target-into-view\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">scroll a target into view</dfn> <var>target</var>, which is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element③\">Element</a>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#pseudo-element\" id=\"ref-for-pseudo-element②\">pseudo-element</a>, or <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range\" id=\"ref-for-concept-range②\">Range</a>,\nwith a scroll behavior <var>behavior</var>,\na block flow direction position <var>block</var>,\nan inline base direction position <var>inline</var>,\nand an optional containing <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element\">Element</a> to stop scrolling after reaching <var>container</var>,\nmeans to run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>ancestorPromises</var> be an empty set of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③②\">Promise</a></code>s.</p>"
        },
        {
          "html": "For each ancestor element or <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧③\">viewport</a> that establishes a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box①④\">scrolling box</a> <var>scrolling box</var>,\nin order of innermost to outermost <span id=\"ref-for-scrolling-box①⑤\">scrolling box</span>, run these substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document⑧\">Document</a></code> associated with <var>target</var> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/browsers.html#same-origin\" id=\"ref-for-same-origin\">same origin</a> with the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document⑨\">Document</a></code> associated with the element or <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧④\">viewport</a> associated with <var>scrolling box</var>,\nabort any remaining iteration of this loop.</p>"
            },
            {
              "html": "<p>Let <var>position</var> be the scroll position resulting from running the steps to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#determine-the-scroll-into-view-position\" id=\"ref-for-determine-the-scroll-into-view-position\">determine the scroll-into-view position</a> of <var>target</var> with <var>behavior</var> as the <var>scroll behavior</var>,\n<var>block</var> as the <var>block flow position</var>, <var>inline</var> as the <var>inline base direction position</var> and <var>scrolling box</var> as the <var>scrolling box</var>.</p>"
            },
            {
              "html": "If <var>position</var> is not the same as <var>scrolling box</var>’s current scroll position, or <var>scrolling box</var> has an ongoing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-smooth-scroll\" id=\"ref-for-concept-smooth-scroll④\">smooth scroll</a>,",
              "rationale": "if",
              "steps": [
                {
                  "html": "<dl class=\"switch\">\n           <dt>If <var>scrolling box</var> is associated with an element\n    \n           </dt><dd>\n        <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#perform-a-scroll\" id=\"ref-for-perform-a-scroll③\">Perform a scroll</a> of the element’s <var>scrolling box</var> to <var>position</var>, with the element as the associated element and\n        <var>behavior</var> as the scroll behavior.\n        Add the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③③\">Promise</a></code> retured from this step to the set <var>ancestorPromises</var>.\n    \n           </dd><dt>If <var>scrolling box</var> is associated with a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧⑤\">viewport</a>\n    \n           </dt><dd>\n            \n          </dd></dl>",
                  "rationale": ".switch",
                  "steps": [
                    {
                      "operation": "switch",
                      "steps": [
                        {
                          "case": "If scrolling box is associated with an element",
                          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#perform-a-scroll\" id=\"ref-for-perform-a-scroll③\">Perform a scroll</a> of the element’s <var>scrolling box</var> to <var>position</var>, with the element as the associated element and\n        <var>behavior</var> as the scroll behavior.\n        Add the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③③\">Promise</a></code> retured from this step to the set <var>ancestorPromises</var>."
                        },
                        {
                          "case": "If scrolling box is associated with a viewport",
                          "html": "",
                          "rationale": "let",
                          "steps": [
                            {
                              "html": "<p>Let <var>document</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧⑥\">viewport’s</a> associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①⓪\">Document</a></code>.</p>"
                            },
                            {
                              "html": "<p>Let <var>root element</var> be <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②③\">root element</a>, if there is one, or null otherwise.</p>"
                            },
                            {
                              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#viewport-perform-a-scroll\" id=\"ref-for-viewport-perform-a-scroll④\">Perform a scroll</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧⑦\">viewport</a> to <var>position</var>, with <var>root element</var> as the associated element and <var>behavior</var>\nas the scroll behavior.\nAdd the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③④\">Promise</a></code> retured from this step in the set <var>ancestorPromises</var>.</p>"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>If <var>container</var> is not null and either <var>scrolling box</var>\nis a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\" id=\"ref-for-concept-shadow-including-inclusive-ancestor①\">shadow-including inclusive ancestor</a> of <var>container</var> or\nis a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑧⑧\">viewport</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document\">document</a> is a <span id=\"ref-for-concept-shadow-including-inclusive-ancestor②\">shadow-including inclusive ancestor</span> of <var>container</var>,\nabort any remaining iteration of this loop.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>scrollPromise</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③⑤\">Promise</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>, and run the remaining steps <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel②\">in parallel</a>.</p>"
        },
        {
          "html": "<p>Resolve <var>scrollPromise</var> when all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③⑥\">Promise</a></code>s in <var>ancestorPromises</var> have settled.</p>"
        }
      ]
    },
    {
      "name": "scroll an element",
      "href": "https://drafts.csswg.org/cssom-view-1/#scroll-an-element",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"scroll-an-element\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">scroll an element</dfn> (or <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#pseudo-element\" id=\"ref-for-pseudo-element③\">pseudo-element</a>) <var>element</var> to <var>x</var>,<var>y</var> optionally with a scroll behavior <var>behavior</var> (which is \"<code>auto</code>\" if omitted) means to:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>box</var> be <var>element</var>’s associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-box\" id=\"ref-for-scrolling-box①⑥\">scrolling box</a>.</p>"
        },
        {
          "html": "<dl class=\"switch\">\n       <dt>If <var>box</var> has rightward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①④\">overflow direction</a>\n    \n       </dt><dd>Let <var>x</var> be max(0, min(<var>x</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑧\">scrolling area</a> width - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②④\">padding edge</a> width)).\n\n    \n       </dd><dt>If <var>box</var> has leftward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①⑤\">overflow direction</a>\n    \n       </dt><dd>Let <var>x</var> be min(0, max(<var>x</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑤\">padding edge</a> width - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑨\">scrolling area</a> width)).\n\n      </dd></dl>",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If box has rightward overflow direction",
                  "html": "Let <var>x</var> be max(0, min(<var>x</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑧\">scrolling area</a> width - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②④\">padding edge</a> width))."
                },
                {
                  "case": "If box has leftward overflow direction",
                  "html": "Let <var>x</var> be min(0, max(<var>x</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑤\">padding edge</a> width - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area①⑨\">scrolling area</a> width))."
                }
              ]
            }
          ]
        },
        {
          "html": "<dl class=\"switch\">\n       <dt>If <var>box</var> has downward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①⑥\">overflow direction</a>\n    \n       </dt><dd>Let <var>y</var> be max(0, min(<var>y</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area②⓪\">scrolling area</a> height - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑥\">padding edge</a> height)).\n\n    \n       </dd><dt>If <var>box</var> has upward <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#overflow-directions\" id=\"ref-for-overflow-directions①⑦\">overflow direction</a>\n    \n       </dt><dd>Let <var>y</var> be min(0, max(<var>y</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑦\">padding edge</a> height - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area②①\">scrolling area</a> height)).\n\n      </dd></dl>",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If box has downward overflow direction",
                  "html": "Let <var>y</var> be max(0, min(<var>y</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area②⓪\">scrolling area</a> height - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑥\">padding edge</a> height))."
                },
                {
                  "case": "If box has upward overflow direction",
                  "html": "Let <var>y</var> be min(0, max(<var>y</var>, <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑦\">padding edge</a> height - <var>element</var> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area②①\">scrolling area</a> height))."
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>position</var> be the scroll position <var>box</var> would have by aligning <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scrolling-area\" id=\"ref-for-scrolling-area②②\">scrolling area</a> x-coordinate <var>x</var> with the left of <var>box</var> and aligning <span id=\"ref-for-scrolling-area②③\">scrolling area</span> y-coordinate <var>y</var> with the top of <var>box</var>.</p>"
        },
        {
          "html": "<p>If <var>position</var> is the same as <var>box</var>’s current scroll position, and <var>box</var> does not have an ongoing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#concept-smooth-scroll\" id=\"ref-for-concept-smooth-scroll⑤\">smooth scroll</a>, return a resolved <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③⑦\">Promise</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#perform-a-scroll\" id=\"ref-for-perform-a-scroll④\">Perform a scroll</a> of <var>box</var> to <var>position</var>, <var>element</var> as the associated element and <var>behavior</var> as the scroll behavior.\nLet <var>scrollPromise</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise③⑧\">Promise</a></code> returned from this step.</p>"
        },
        {
          "html": "<p>Return <var>scrollPromise</var>.</p>"
        }
      ]
    },
    {
      "name": "HTMLElement/scrollParent",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-scrollparent",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLElement\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-htmlelement-scrollparent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scrollParent</code></dfn> attribute must return the result of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If any of the following holds true, return null and terminate this algorithm:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>The element does not have an associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②④\">box</a>.</p>\n      </li><li data-md=\"\">\n       <p>The element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②④\">root element</a>.</p>\n      </li><li data-md=\"\">\n       <p>The element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①⑤\">the <code>body</code> element</a>.</p>\n      </li><li data-md=\"\">\n       <p>The element’s computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-position-3/#propdef-position\" id=\"ref-for-propdef-position\">position</a> property is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-position-3/#valdef-position-fixed\" id=\"ref-for-valdef-position-fixed\">fixed</a> and no ancestor establishes a fixed position <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block\">containing block</a>.</p>\n     </li></ul>"
        },
        {
          "html": "Let <var>ancestor</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block①\">containing block</a> of the element in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree③\">flat tree</a> and repeat these substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>ancestor</var> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block①⑨\">initial containing block</a>, return the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-document-scrollingelement\" id=\"ref-for-dom-document-scrollingelement②\">scrollingElement</a></code> for the element’s document if it is not <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-closed-shadow-hidden\" id=\"ref-for-concept-closed-shadow-hidden\">closed-shadow-hidden</a> from the element, otherwise return null.</p>"
            },
            {
              "html": "<p>If <var>ancestor</var> is not <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-closed-shadow-hidden\" id=\"ref-for-concept-closed-shadow-hidden①\">closed-shadow-hidden</a> from the element, and is a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-overflow-3/#scroll-container\" id=\"ref-for-scroll-container②\">scroll container</a>, terminate this algorithm and return <var>ancestor</var>.</p>"
            },
            {
              "html": "<p>If the computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-position-3/#propdef-position\" id=\"ref-for-propdef-position①\">position</a> property of <var>ancestor</var> is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-position-3/#valdef-position-fixed\" id=\"ref-for-valdef-position-fixed①\">fixed</a>,  and no ancestor establishes a fixed position <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block②\">containing block</a>, terminate this algorithm and return null.</p>"
            },
            {
              "html": "<p>Let <var>ancestor</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block③\">containing block</a> of <var>ancestor</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree④\">flat tree</a>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "HTMLElement/offsetParent",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetparent",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLElement\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-htmlelement-offsetparent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetParent</code></dfn> attribute must return the result of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If any of the following holds true return null and terminate this algorithm:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>The element does not have an associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②⑤\">box</a>.</p>\n      </li><li data-md=\"\">\n       <p>The element is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#root-element\" id=\"ref-for-root-element②⑤\">root element</a>.</p>\n      </li><li data-md=\"\">\n       <p>The element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①⑥\">the <code>body</code> element</a>.</p>\n      </li><li data-md=\"\">\n       <p>The element’s computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-position-3/#propdef-position\" id=\"ref-for-propdef-position②\">position</a> property is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-position-3/#valdef-position-fixed\" id=\"ref-for-valdef-position-fixed②\">fixed</a> and no ancestor establishes a fixed position <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block④\">containing block</a>.</p>\n     </li></ul>"
        },
        {
          "html": "Let <var>ancestor</var> be the parent of the element in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree⑤\">flat tree</a> and repeat these substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>ancestor</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-closed-shadow-hidden\" id=\"ref-for-concept-closed-shadow-hidden②\">closed-shadow-hidden</a> from the element, its computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-position-3/#propdef-position\" id=\"ref-for-propdef-position③\">position</a> property is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-position-3/#valdef-position-fixed\" id=\"ref-for-valdef-position-fixed③\">fixed</a>, and no ancestor establishes a fixed position <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block⑤\">containing block</a>, terminate this algorithm and return null.</p>"
            },
            {
              "html": "<p>If <var>ancestor</var> is not <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-closed-shadow-hidden\" id=\"ref-for-concept-closed-shadow-hidden③\">closed-shadow-hidden</a> from the element and satisfies at least one of the following, terminate this algorithm and return <var>ancestor</var>.</p>\n       <ul>\n        <li data-md=\"\">\n         <p>The element is in a fixed position <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block⑥\">containing block</a>, and <var>ancestor</var> is a containing block for fixed-positioned descendants.</p>\n        </li><li data-md=\"\">\n         <p>The element is not in a fixed position <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#containing-block\" id=\"ref-for-containing-block⑦\">containing block</a>, and:</p>\n         <ul>\n          <li data-md=\"\">\n           <p><var>ancestor</var> is a containing block of absolutely-positioned descendants (regardless of whether there are any absolutely-positioned descendants).</p>\n          </li><li data-md=\"\">\n           <p>It is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①⑦\">the <code>body</code> element</a>.</p>\n          </li><li data-md=\"\">\n           <p>The computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-position-3/#propdef-position\" id=\"ref-for-propdef-position④\">position</a> property of the element is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-position-3/#valdef-position-static\" id=\"ref-for-valdef-position-static\">static</a> and the ancestor is one of the following <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#html-elements\" id=\"ref-for-html-elements\">HTML elements</a>: <code>td</code>, <code>th</code>, or <code>table</code>.</p>\n         </li></ul>\n        </li><li data-md=\"\">\n         <p>The element has a different <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#effective-zoom\" id=\"ref-for-effective-zoom①\">effective zoom</a> than <var>ancestor</var>.</p>\n       </li></ul>"
            },
            {
              "html": "<p>If there is no more parent of <var>ancestor</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree⑥\">flat tree</a>, terminate this algorithm and return null.</p>"
            },
            {
              "html": "<p>Let <var>ancestor</var> be the parent of <var>ancestor</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree⑦\">flat tree</a>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "HTMLElement/offsetTop",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsettop",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLElement\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-htmlelement-offsettop\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetTop</code></dfn> attribute must return the result of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①⑧\">the <code>body</code> element</a> or does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②⑥\">box</a> return zero and terminate this algorithm.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetparent\" id=\"ref-for-dom-htmlelement-offsetparent①\">offsetParent</a></code> of the element is null return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled④\">unscaled</a> y-coordinate of the top <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge④\">border edge</a> of the first <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②⑦\">box</a> associated with the element, relative to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②⓪\">initial containing block</a> origin, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①②\">transforms</a>that apply to the element and its ancestors and terminate this algorithm.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled⑤\">unscaled</a> result of subtracting the y-coordinate of the top <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑧\">padding edge</a>\nof the first <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box②⑧\">box</a> associated with the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetparent\" id=\"ref-for-dom-htmlelement-offsetparent②\">offsetParent</a></code> of the element\nfrom the y-coordinate of the top <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge⑤\">border edge</a>\nof the first <span id=\"ref-for-box②⑨\">box</span> associated with the element,\nrelative to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②①\">initial containing block</a> origin,\nignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①③\">transforms</a> that apply to the element and its ancestors.</p>"
        }
      ]
    },
    {
      "name": "HTMLElement/offsetLeft",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetleft",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLElement\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-htmlelement-offsetleft\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetLeft</code></dfn> attribute must return the result of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2①⑨\">the <code>body</code> element</a> or does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box③①\">box</a> return zero and terminate this algorithm.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetparent\" id=\"ref-for-dom-htmlelement-offsetparent③\">offsetParent</a></code> of the element is null return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled⑥\">unscaled</a> x-coordinate of the left <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge⑥\">border edge</a> of the first <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box③②\">box</a> associated with the element, relative to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②②\">initial containing block</a> origin, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①④\">transforms</a> that apply to the element and its ancestors, and terminate this algorithm.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled⑦\">unscaled</a> result of subtracting the x-coordinate of the left <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge②⑨\">padding edge</a> of the first <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box③③\">box</a> associated with the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetparent\" id=\"ref-for-dom-htmlelement-offsetparent④\">offsetParent</a></code> of the element from the x-coordinate of the left <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-edge\" id=\"ref-for-border-edge⑦\">border edge</a> of the first <span id=\"ref-for-box③④\">box</span> associated with the element, relative to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②③\">initial containing block</a> origin, ignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①⑤\">transforms</a> that apply to the element and its ancestors.</p>"
        }
      ]
    },
    {
      "name": "HTMLElement/offsetWidth",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetwidth",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLElement\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-htmlelement-offsetwidth\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetWidth</code></dfn> attribute must return the result of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box③⑤\">box</a> return zero and terminate this algorithm.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled⑧\">unscaled</a> width of the axis-aligned bounding box\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-box\" id=\"ref-for-border-box\">border boxes</a>\nof all fragments generated by the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#principal-box\" id=\"ref-for-principal-box\">principal box</a>,\nignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①⑥\">transforms</a> that apply to the element and its ancestors.</p>\n     <p>If the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#principal-box\" id=\"ref-for-principal-box①\">principal box</a> is an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#inline-level-box\" id=\"ref-for-inline-level-box\">inline-level box</a>\nwhich was \"split\" by a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#block-level\" id=\"ref-for-block-level\">block-level</a> descendant,\nalso include fragments generated by the <span id=\"ref-for-block-level①\">block-level</span> descendants,\nunless they are zero width or height.</p>"
        }
      ]
    },
    {
      "name": "HTMLElement/offsetHeight",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-htmlelement-offsetheight",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLElement\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-htmlelement-offsetheight\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetHeight</code></dfn> attribute must return the result of running these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the element does not have any associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#box\" id=\"ref-for-box③⑥\">box</a> return zero and terminate this algorithm.</p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-viewport/#unscaled\" id=\"ref-for-unscaled⑨\">unscaled</a> height of the axis-aligned bounding box\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#border-box\" id=\"ref-for-border-box①\">border boxes</a>\nof all fragments generated by the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#principal-box\" id=\"ref-for-principal-box②\">principal box</a>,\nignoring any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms①⑦\">transforms</a> that apply to the element and its ancestors.</p>\n     <p>If the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#principal-box\" id=\"ref-for-principal-box③\">principal box</a> is an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#inline-level-box\" id=\"ref-for-inline-level-box①\">inline-level box</a>\nwhich was \"split\" by a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#block-level\" id=\"ref-for-block-level②\">block-level</a> descendant,\nalso include fragments generated by the <span id=\"ref-for-block-level③\">block-level</span> descendants,\nunless they are zero width or height.</p>"
        }
      ]
    },
    {
      "name": "Range/getBoundingClientRect()",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-range-getboundingclientrect",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-getboundingclientrect\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getBoundingClientRect()</code></dfn> method, when invoked, must return the result of the following\nalgorithm:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>list</var> be the result of invoking <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-range-getclientrects\" id=\"ref-for-dom-range-getclientrects②\">getClientRects()</a></code> on the same range this method was invoked on.</p>"
        },
        {
          "html": "<p>If <var>list</var> is empty return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect①⑦\">DOMRect</a></code> object whose <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-x\" id=\"ref-for-dom-domrect-x①\">x</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-y\" id=\"ref-for-dom-domrect-y①\">y</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-width\" id=\"ref-for-dom-domrect-width①\">width</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#dom-domrect-height\" id=\"ref-for-dom-domrect-height①\">height</a></code> members are zero.</p>"
        },
        {
          "html": "<p>If all rectangles in <var>list</var> have zero width or height, return the first rectangle in\n<var>list</var>.</p>"
        },
        {
          "html": "<p>Otherwise, return a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.fxtf.org/geometry-1/#domrect\" id=\"ref-for-domrect①⑧\">DOMRect</a></code> object describing the smallest rectangle that includes all\nof the rectangles in <var>list</var> of which the height or width is not zero.</p>"
        }
      ]
    },
    {
      "name": "MouseEvent/pageX",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-pagex",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MouseEvent\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-mouseevent-pagex\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>pageX</code></dfn> attribute must follow these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the event’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag\">dispatch flag</a> is set, return the horizontal coordinate of the position where the event occurred relative to the origin of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②⑥\">initial containing block</a> and terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>offset</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrollx\" id=\"ref-for-dom-window-scrollx⑧\">scrollX</a></code> attribute of the event’s associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑥\">Window</a></code> object, if there is one, or zero otherwise.</p>"
        },
        {
          "html": "<p>Return the sum of <var>offset</var> and the value of the event’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-clientx\" id=\"ref-for-dom-mouseevent-clientx①\">clientX</a></code> attribute.</p>"
        }
      ]
    },
    {
      "name": "MouseEvent/pageY",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-pagey",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MouseEvent\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-mouseevent-pagey\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>pageY</code></dfn> attribute must follow these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the event’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag①\">dispatch flag</a> is set, return the vertical coordinate of the position where the event occurred relative to the origin of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②⑦\">initial containing block</a> and terminate these steps.</p>"
        },
        {
          "html": "<p>Let <var>offset</var> be the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-window-scrolly\" id=\"ref-for-dom-window-scrolly⑦\">scrollY</a></code> attribute of the event’s associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑦\">Window</a></code> object, if there is one, or zero otherwise.</p>"
        },
        {
          "html": "<p>Return the sum of <var>offset</var> and the value of the event’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-clienty\" id=\"ref-for-dom-mouseevent-clienty①\">clientY</a></code> attribute.</p>"
        }
      ]
    },
    {
      "name": "MouseEvent/offsetX",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-offsetx",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MouseEvent\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-mouseevent-offsetx\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetX</code></dfn> attribute must follow these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the event’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag②\">dispatch flag</a> is set, return the x-coordinate of the position where the event occurred relative to the origin of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge③⓪\">padding edge</a> of the target node, ignoring the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms②①\">transforms</a> that apply to the element and its ancestors, and terminate these steps.</p>"
        },
        {
          "html": "<p>Return the value of the event’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-pagex\" id=\"ref-for-dom-mouseevent-pagex①\">pageX</a></code> attribute.</p>"
        }
      ]
    },
    {
      "name": "MouseEvent/offsetY",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-offsety",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MouseEvent\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-mouseevent-offsety\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetY</code></dfn> attribute must follow these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the event’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag③\">dispatch flag</a> is set, return the y-coordinate of the position where the event occurred relative to the origin of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-box-4/#padding-edge\" id=\"ref-for-padding-edge③①\">padding edge</a> of the target node, ignoring the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#transforms\" id=\"ref-for-transforms②②\">transforms</a> that apply to the element and its ancestors, and terminate these steps.</p>"
        },
        {
          "html": "<p>Return the value of the event’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-pagey\" id=\"ref-for-dom-mouseevent-pagey①\">pageY</a></code> attribute.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/offsetLeft",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-offsetleft",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-offsetleft\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetLeft</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport②\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document①\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active①\">fully active</a>, return 0.</p>"
        },
        {
          "html": "<p>Otherwise, return the offset of the left edge of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport③\">visual viewport</a> from the left edge\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#layout-viewport\" id=\"ref-for-layout-viewport③\">layout viewport</a>.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/offsetTop",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-offsettop",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-offsettop\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>offsetTop</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport④\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document②\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active②\">fully active</a>, return 0.</p>"
        },
        {
          "html": "<p>Otherwise, return the offset of the top edge of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport⑤\">visual viewport</a> from the top edge\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#layout-viewport\" id=\"ref-for-layout-viewport④\">layout viewport</a>.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/pageLeft",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-pageleft",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-pageleft\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>pageLeft</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport⑥\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document③\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active③\">fully active</a>, return 0.</p>"
        },
        {
          "html": "<p>Otherwise, return the offset of the left edge of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport⑦\">visual viewport</a> from the left edge\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②⑧\">initial containing block</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#layout-viewport\" id=\"ref-for-layout-viewport⑤\">layout viewport</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①\">document</a>.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/pageTop",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-pagetop",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-pagetop\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>pageTop</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport⑧\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document④\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active④\">fully active</a>, return 0.</p>"
        },
        {
          "html": "<p>Otherwise, return the offset of the top edge of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport⑨\">visual viewport</a> from the top edge\nof the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#initial-containing-block\" id=\"ref-for-initial-containing-block②⑨\">initial containing block</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#layout-viewport\" id=\"ref-for-layout-viewport⑥\">layout viewport</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document②\">document</a>.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/width",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-width",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-width\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>width</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①⓪\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document⑤\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑤\">fully active</a>, return 0.</p>"
        },
        {
          "html": "<p>Otherwise, return the width of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①①\">visual viewport</a> excluding the width of any rendered vertical <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-overflow-3/#classic-scrollbars\" id=\"ref-for-classic-scrollbars\">classic\nscrollbar</a> that is fixed to the visual viewport.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/height",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-height",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-height\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>height</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①②\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document⑥\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑥\">fully active</a>, return 0.</p>"
        },
        {
          "html": "<p>Otherwise, return the height of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①③\">visual viewport</a> excluding the height of any rendered horizontal <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-overflow-3/#classic-scrollbars\" id=\"ref-for-classic-scrollbars①\">classic\nscrollbar</a> that is fixed to the visual viewport.</p>"
        }
      ]
    },
    {
      "name": "VisualViewport/scale",
      "href": "https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-scale",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"VisualViewport\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-visualviewport-scale\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>scale</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①④\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document⑦\">associated document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑦\">fully active</a>, return 0\nand abort these steps.</p>"
        },
        {
          "html": "<p>If there is no output device, return 1 and abort these steps.</p>"
        },
        {
          "html": "<p>Otherwise, return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①⑤\">visual viewport</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#scale-factor\" id=\"ref-for-scale-factor③\">scale factor</a>.</p>"
        }
      ]
    },
    {
      "name": "Document/run the resize steps",
      "href": "https://drafts.csswg.org/cssom-view-1/#document-run-the-resize-steps",
      "html": "When asked to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"dfn\" data-export=\"\" id=\"document-run-the-resize-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">run the resize steps</dfn> for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①③\">Document</a></code> <var>doc</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑨①\">viewport</a> has had its width or height changed\n(e.g. as a result of the user resizing the browser window,\nor changing <span>page zoom</span>,\nor an <code>iframe</code> element’s dimensions are changed)\nsince the last time these steps were run,\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①\">fire an event</a> named <a class=\"idl-code\" data-link-type=\"event\" href=\"https://drafts.csswg.org/cssom-view-1/#eventdef-window-resize\" id=\"ref-for-eventdef-window-resize①\">resize</a>\nat the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑧\">Window</a></code> object associated with <var>doc</var>.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport⑥\">VisualViewport</a></code> associated with <var>doc</var> has had its <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-scale\" id=\"ref-for-dom-visualviewport-scale①\">scale</a>,\n<a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-width\" id=\"ref-for-dom-visualviewport-width②\">width</a>, or <a class=\"idl-code\" data-link-type=\"attribute\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-visualviewport-height\" id=\"ref-for-dom-visualviewport-height②\">height</a> properties changed since\nthe last time these steps were run, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire②\">fire an event</a> named <a class=\"idl-code\" data-link-type=\"event\" href=\"https://drafts.csswg.org/cssom-view-1/#eventdef-window-resize\" id=\"ref-for-eventdef-window-resize②\">resize</a> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport⑦\">VisualViewport</a></code>.</p>"
        }
      ]
    },
    {
      "html": "Whenever a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑨②\">viewport</a> gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>doc</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑨③\">viewport’s</a> associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①⑤\">Document</a></code>.</p>"
        },
        {
          "html": "<p>If <var>doc</var> is a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-container\" id=\"ref-for-scroll-snap-container①\">snap container</a>,\nrun the steps to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#document-update-scrollsnapchanging-targets\" id=\"ref-for-document-update-scrollsnapchanging-targets\">update scrollsnapchanging targets</a>\nfor <var>doc</var> with <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#eventual-snap-target\" id=\"ref-for-eventual-snap-target\">eventual snap target</a> in the block axis\nas newBlockTarget and <var>doc</var>’s <span id=\"ref-for-eventual-snap-target①\">eventual snap target</span> in the inline axis\nas newInlineTarget.</p>"
        },
        {
          "html": "<p>If (<var>doc</var>, <code>\"scroll\"</code>) is already in <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events\">pending scroll events</a>, abort these steps.</p>"
        },
        {
          "html": "<p>Append (<var>doc</var>, <code>\"scroll\"</code>) to <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events①\">pending scroll events</a>.</p>"
        }
      ]
    },
    {
      "html": "Whenever an element gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>doc</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①①\">node document</a>.</p>"
        },
        {
          "html": "<p>If the element is a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-container\" id=\"ref-for-scroll-snap-container②\">snap container</a>,\nrun the steps to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#document-update-scrollsnapchanging-targets\" id=\"ref-for-document-update-scrollsnapchanging-targets①\">update scrollsnapchanging targets</a>\nfor the element with the element’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#eventual-snap-target\" id=\"ref-for-eventual-snap-target②\">eventual snap target</a> in the block axis\nas newBlockTarget and the element’s <span id=\"ref-for-eventual-snap-target③\">eventual snap target</span> in the inline axis\nas newInlineTarget.</p>"
        },
        {
          "html": "<p>If the element is already in <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events②\">pending scroll events</a>, abort these steps.</p>"
        },
        {
          "html": "<p>Append the element to <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events③\">pending scroll events</a>.</p>"
        }
      ]
    },
    {
      "html": "Whenever a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visual-viewport\" id=\"ref-for-visual-viewport①⑥\">visual viewport</a> gets scrolled (whether in response to user interaction or by an API), the user agent must run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>vv</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport⑧\">VisualViewport</a></code> object that was scrolled.</p>"
        },
        {
          "html": "<p>Let <var>doc</var> be <var>vv</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document⑧\">associated document</a>.</p>"
        },
        {
          "html": "<p>If (<var>vv</var>, <code>\"scroll\"</code>) is already in <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events④\">pending scroll events</a>, abort these steps.</p>"
        },
        {
          "html": "<p>Append (<var>vv</var>, <code>\"scroll\"</code>) to <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events⑤\">pending scroll events</a>.</p>"
        }
      ]
    },
    {
      "name": "Document/run the scroll steps",
      "href": "https://drafts.csswg.org/cssom-view-1/#document-run-the-scroll-steps",
      "html": "When asked to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"dfn\" data-export=\"\" id=\"document-run-the-scroll-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">run the scroll steps</dfn> for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①⑥\">Document</a></code> <var>doc</var>, run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "For each scrolling box <var>box</var> that was scrolled:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>box</var> belongs to a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css2/#viewport%E2%91%A0\" id=\"ref-for-viewport%E2%91%A0⑨④\">viewport</a>, let <var>doc</var> be the <span id=\"ref-for-viewport%E2%91%A0⑨⑤\">viewport’s</span> associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①⑦\">Document</a></code> and <var>target</var> be the <span id=\"ref-for-viewport%E2%91%A0⑨⑥\">viewport</span>.\nIf <var>box</var> belongs to a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport⑨\">VisualViewport</a></code>, let <var>doc</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport①⓪\">VisualViewport</a></code>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport-associated-document\" id=\"ref-for-visualviewport-associated-document⑨\">associated document</a> and <var>target</var>\nbe the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#visualviewport\" id=\"ref-for-visualviewport①①\">VisualViewport</a></code>. Otherwise, <var>box</var> belongs to an element and let <var>doc</var> be the element’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①②\">node document</a> and <var>target</var> be the element.</p>"
            },
            {
              "html": "<p>If <var>box</var> belongs to a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-container\" id=\"ref-for-scroll-snap-container③\">snap container</a>, <var>snapcontainer</var>,\nrun the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#document-update-scrollsnapchange-targets\" id=\"ref-for-document-update-scrollsnapchange-targets\">update scrollsnapchange targets</a> steps for <var>snapcontainer</var>.</p>"
            },
            {
              "html": "<p>If (<var>target</var>, <code>\"scrollend\"</code>) is already in <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events⑥\">pending scroll events</a>, abort these steps.</p>"
            },
            {
              "html": "<p>Append (<var>target</var>, <code>\"scrollend\"</code>) to <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events⑦\">pending scroll events</a>.</p>"
            }
          ]
        },
        {
          "html": "For each item (<var>target</var>, <var>type</var>) in <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events⑧\">pending scroll events</a>,\nin the order they were added to the list, run these substeps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>target</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document①⑧\">Document</a></code>, and <var>type</var> is <code>\"scroll\"</code> or <code>\"scrollend\"</code>,\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire③\">fire an event</a> named <var>type</var> that bubbles at <var>target</var>.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>type</var> is <code>\"scrollsnapchange\"</code>, then:</p>"
            },
            {
              "html": "<p>Let <var>blockTarget</var> and <var>inlineTarget</var> be null initially.</p>"
            },
            {
              "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#scrollsnapchangetargetblock\" id=\"ref-for-scrollsnapchangetargetblock\">scrollsnapchangeTargetBlock</a> associated with <var>target</var> is a pseudo-element,\nset <var>blockTarget</var> to the owning element of that <span id=\"ref-for-scrollsnapchangetargetblock①\">scrollsnapchangeTargetBlock</span>.</p>"
            },
            {
              "html": "<p>Otherwise, set <var>blockTarget</var> to that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#scrollsnapchangetargetblock\" id=\"ref-for-scrollsnapchangetargetblock②\">scrollsnapchangeTargetBlock</a>.</p>"
            },
            {
              "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#scrollsnapchangetargetinline\" id=\"ref-for-scrollsnapchangetargetinline\">scrollsnapchangeTargetInline</a> associated with <var>target</var> is a pseudo-element,\nset <var>inlineTarget</var> to the owning element of that <span id=\"ref-for-scrollsnapchangetargetinline①\">scrollsnapchangeTargetInline</span>.</p>"
            },
            {
              "html": "<p>Otherwise, Set <var>inlineTarget</var> to that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#scrollsnapchangetargetinline\" id=\"ref-for-scrollsnapchangetargetinline②\">scrollsnapchangeTargetInline</a>.</p>"
            },
            {
              "html": "<p>Fire a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#snapevent\" id=\"ref-for-snapevent\">SnapEvent</a></code>, <var>snapevent</var>, named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#eventdef-snapevent-scrollsnapchange\" id=\"ref-for-eventdef-snapevent-scrollsnapchange\">scrollsnapchange</a></code> at <var>target</var>\nand let <var>snapevent</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#dom-snapevent-snaptargetblock\" id=\"ref-for-dom-snapevent-snaptargetblock\">snapTargetBlock</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#dom-snapevent-snaptargetinline\" id=\"ref-for-dom-snapevent-snaptargetinline\">snapTargetInline</a></code> attributes be <var>blockTarget</var> and <var>inlineTarget</var> respectively.</p>"
            },
            {
              "html": "<p>Otherwise, if <var>type</var> is <code>\"scrollsnapchanging\"</code>, then:</p>"
            },
            {
              "html": "<p>Let <var>blockTarget</var> and <var>inlineTarget</var> be null initially.</p>"
            },
            {
              "html": "<p>If the <u class=\"link-error\" data-lt=\"scrollsnapchanging block-axis target\" title=\"LINK ERROR: No 'dfn' refs found for 'scrollsnapchanging block-axis target' that are marked for export.\n  (Possible specs this could be from: css-scroll-snap-2)\">scrollsnapchanging block-axis target</u> associated with <var>target</var> is a pseudo-element,\nset <var>blockTarget</var> to the owning element of that <u class=\"link-error\" data-lt=\"scrollsnapchanging block-axis target\" title=\"LINK ERROR: No 'dfn' refs found for 'scrollsnapchanging block-axis target' that are marked for export.\n  (Possible specs this could be from: css-scroll-snap-2)\">scrollsnapchanging block-axis target</u>.</p>"
            },
            {
              "html": "<p>Otherwise, set <var>blockTarget</var> to that <u class=\"link-error\" data-lt=\"scrollsnapchanging block-axis target\" title=\"LINK ERROR: No 'dfn' refs found for 'scrollsnapchanging block-axis target' that are marked for export.\n  (Possible specs this could be from: css-scroll-snap-2)\">scrollsnapchanging block-axis target</u>.</p>"
            },
            {
              "html": "<p>If the <u class=\"link-error\" data-lt=\"scrollsnapchanging inline-axis target\" title=\"LINK ERROR: No 'dfn' refs found for 'scrollsnapchanging inline-axis target' that are marked for export.\n  (Possible specs this could be from: css-scroll-snap-2)\">scrollsnapchanging inline-axis target</u> associated with <var>target</var> is a pseudo-element,\nset <var>inlineTarget</var> to the owning element of that <u class=\"link-error\" data-lt=\"scrollsnapchanging inline-axis target\" title=\"LINK ERROR: No 'dfn' refs found for 'scrollsnapchanging inline-axis target' that are marked for export.\n  (Possible specs this could be from: css-scroll-snap-2)\">scrollsnapchanging inline-axis target</u>.</p>"
            },
            {
              "html": "<p>Otherwise, set <var>inlineTarget</var> to that <u class=\"link-error\" data-lt=\"scrollsnapchanging inline-axis target\" title=\"LINK ERROR: No 'dfn' refs found for 'scrollsnapchanging inline-axis target' that are marked for export.\n  (Possible specs this could be from: css-scroll-snap-2)\">scrollsnapchanging inline-axis target</u>.</p>"
            },
            {
              "html": "<p>Fire a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#snapevent\" id=\"ref-for-snapevent①\">SnapEvent</a></code>, <var>snapevent</var>, named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#eventdef-snapevent-scrollsnapchanging\" id=\"ref-for-eventdef-snapevent-scrollsnapchanging\">scrollsnapchanging</a></code> at <var>target</var>\nand let <var>snapevent</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#dom-snapevent-snaptargetblock\" id=\"ref-for-dom-snapevent-snaptargetblock①\">snapTargetBlock</a></code> and\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-scroll-snap-2/#dom-snapevent-snaptargetinline\" id=\"ref-for-dom-snapevent-snaptargetinline①\">snapTargetInline</a></code> attributes be <var>blockTarget</var> and <var>inlineTarget</var>, respectively.</p>"
            },
            {
              "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire④\">fire an event</a> named <var>type</var> at <var>target</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Empty <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-view-1/#document-pending-scroll-events\" id=\"ref-for-document-pending-scroll-events⑨\">pending scroll events</a>.</p>"
        }
      ]
    },
    {
      "name": "run snapshot post-layout state steps",
      "href": "https://drafts.csswg.org/cssom-view-1/#run-snapshot-post-layout-state-steps",
      "html": "When asked to <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"run-snapshot-post-layout-state-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">run snapshot post-layout state steps</dfn> for a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document②③\">Document</a></code> <var>doc</var>, run these steps:",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each CSS feature that needs to snapshot post-layout state, take a snapshot of the relevant state in <var>doc</var>.</p>"
        }
      ]
    }
  ]
}