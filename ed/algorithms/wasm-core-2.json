{
  "spec": {
    "title": "WebAssembly Core Specification",
    "url": "https://webassembly.github.io/spec/core/bikeshed/"
  },
  "algorithms": [
    {
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1097000000000001em;vertical-align:-0.3597em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-ilt\"><span class=\"mord\"><span class=\"mord mathrm\">ilt_s</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the result of computing <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.148448em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-ibits\"><span class=\"mord\"><span class=\"mord mathrm\">ibits</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span></span></span></span><span style=\"top:-3.14734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">((</span><span class=\"mord mathrm\">0</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span><span class=\"mbin mtight\">−</span><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9088319999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-ivswizzle-lane\"><span class=\"mord\"><span class=\"mord mathrm\">ivswizzle_lane</span></span></a><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> ne the concatenation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9088319999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, decomposed into pairwise elements.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-iadd\"><span class=\"mord\"><span class=\"mord mathrm\">iadd</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-imul\"><span class=\"mord\"><span class=\"mord mathrm\">imul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-imul\"><span class=\"mord\"><span class=\"mord mathrm\">imul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585479999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585479999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, decomposed into pairwise elements.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-iadd\"><span class=\"mord\"><span class=\"mord mathrm\">iadd</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1111079999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-imul\"><span class=\"mord\"><span class=\"mord mathrm\">imul</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585479999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0585479999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2m</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, decomposed into pairwise elements.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9613919999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1097000000000001em;vertical-align:-0.3597em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-iadd-sat\"><span class=\"mord\"><span class=\"mord mathrm\">iadd_sat</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3403em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">1k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> be the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "do",
      "steps": [
        {
          "html": "<p>Do nothing.</p>"
        }
      ]
    },
    {
      "rationale": "trap",
      "steps": [
        {
          "html": "<p>Trap.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-drop\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-select\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-select\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-select\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.082452em;vertical-align:-0.36806em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mrel\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instrtype\"><span class=\"mrel\">→</span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-localidx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">localidx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.188485714285714em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-2.8448em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-blocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">bt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-block\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-localidx\"><span class=\"mord\"><span class=\"mord mathit\">localidx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-block\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose continuation is the end of the block.</p>"
        },
        {
          "html": "<p>Enter the block <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> with the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.082452em;vertical-align:-0.36806em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mrel\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instrtype\"><span class=\"mrel\">→</span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-localidx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">localidx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.188485714285714em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-2.8448em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-blocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">bt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-loop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-localidx\"><span class=\"mord\"><span class=\"mord mathit\">localidx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-loop\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> and whose continuation is the start of the block.</p>"
        },
        {
          "html": "<p>Enter the block <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> with the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-if\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">block</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">bt</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">block</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">bt</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span></p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
              "rationale": "assert",
              "steps": [
                {
                  "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
                },
                {
                  "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
                },
                {
                  "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
                },
                {
                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> from the stack.</p>"
                },
                {
                  "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Jump to the continuation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else:",
              "rationale": "pop",
              "steps": [
                {
                  "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
                },
                {
                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> from the stack.</p>"
                },
                {
                  "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br\"><span class=\"std std-ref\">validation</span></a>, the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br-if\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br-table\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">l</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br-on-null\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br-on-non-null\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br-on-cast\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span></span> be the type of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span></span> matches <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">.</span></span><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>, then:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-br-on-cast-fail\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span></span> be the type of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span></span></span></span></span></span> matches <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">.</span></span><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "execute",
          "steps": [
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span></p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else if the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span>, then:",
          "rationale": "pop",
          "steps": [
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.57143em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">return</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return\"><span class=\"std std-ref\">validation</span></a>, the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.57143em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">return</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-addr\"><span class=\"std std-ref\">address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-call-ref\"><span class=\"std std-ref\">validation</span></a>, a null or <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">function reference</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the reference value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathit\">ht</span></span></span></span></span></span></span></span>, then:</p>\n            <blockquote style=\"border-color: transparent\">\n             <div>\n              \n             </div>\n            </blockquote>",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-call-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span> is a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">function reference</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span></span></span></span></span></span></span> be the reference <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">r</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-invoke\"><span class=\"std std-ref\">Invoke</span></a> the function instance at address <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "execute",
      "steps": [
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">get</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">cast</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-addr\"><span class=\"std std-ref\">address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">return_call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "If the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span>, then:",
          "rationale": "pop",
          "steps": [
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">return_call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else if the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span>, then:",
          "rationale": "pop",
          "steps": [
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">return_call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
              "rationale": "trap",
              "steps": [
                {
                  "html": "<p>Trap.</p>"
                }
              ]
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-return-call-ref\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span> from the stack.</p>"
            },
            {
              "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "execute",
      "steps": [
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">get</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">cast</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">return_call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">exn</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">exn</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>, then:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else if the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span>, then:",
              "rationale": "pop",
              "steps": [
                {
                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> from the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "Else:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If the first non-value entry of the stack is a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span>, then:",
                  "rationale": "pop",
                  "steps": [
                    {
                      "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span> from the stack.</p>"
                    },
                    {
                      "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                    },
                    {
                      "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                    }
                  ]
                },
                {
                  "html": "Else if the first non-value entry of the stack is not a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span>, then:",
                  "rationale": "throw",
                  "steps": [
                    {
                      "html": "<p>Throw the exception <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> as a result.</p>"
                    }
                  ]
                },
                {
                  "html": "Else:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span>.</p>"
                    },
                    {
                      "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span></p>"
                    },
                    {
                      "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the catch handler of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span></p>"
                    },
                    {
                      "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>, then:",
                      "rationale": "pop",
                      "steps": [
                        {
                          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                        }
                      ]
                    },
                    {
                      "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
                      "rationale": "let",
                      "steps": [
                        {
                          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0648279999999999em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch_all</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-labelidx\"><span class=\"mord\"><span class=\"mord mathit\">labelidx</span></span></a></span></span></span></span></span></span></span>, then:",
                          "rationale": "let",
                          "steps": [
                            {
                              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch_all</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                            },
                            {
                              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                            }
                          ]
                        },
                        {
                          "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is not some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_all_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-labelidx\"><span class=\"mord\"><span class=\"mord mathit\">labelidx</span></span></a></span></span></span></span></span></span></span>, then:",
                          "rationale": "let",
                          "steps": [
                            {
                              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                            },
                            {
                              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose catch handler is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                            },
                            {
                              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                            }
                          ]
                        },
                        {
                          "html": "Else:",
                          "rationale": "let",
                          "steps": [
                            {
                              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_all_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                            },
                            {
                              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                            },
                            {
                              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "html": "Else:",
                      "rationale": "let",
                      "steps": [
                        {
                          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0648279999999999em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagidx\"><span class=\"mord\"><span class=\"mord mathit\">tagidx</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-labelidx\"><span class=\"mord\"><span class=\"mord mathit\">labelidx</span></span></a></span></span></span></span></span></span></span>, then:",
                          "rationale": "let",
                          "steps": [
                            {
                              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>, then:",
                              "rationale": "pop",
                              "steps": [
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                                }
                              ]
                            },
                            {
                              "html": "Else:",
                              "rationale": "let",
                              "steps": [
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose catch handler is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagidx\"><span class=\"mord\"><span class=\"mord mathit\">tagidx</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-labelidx\"><span class=\"mord\"><span class=\"mord mathit\">labelidx</span></span></a></span></span></span></span></span></span></span>, then:",
                          "rationale": "let",
                          "steps": [
                            {
                              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                            },
                            {
                              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> or <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>, then:",
                              "rationale": "let",
                              "steps": [
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose catch handler is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                                }
                              ]
                            },
                            {
                              "html": "Else:",
                              "rationale": "pop",
                              "steps": [
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "html": "Else:",
                          "rationale": "if",
                          "steps": [
                            {
                              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch_all</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-labelidx\"><span class=\"mord\"><span class=\"mord mathit\">labelidx</span></span></a></span></span></span></span></span></span></span>, then:",
                              "rationale": "let",
                              "steps": [
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">catch_all</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                                }
                              ]
                            },
                            {
                              "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is not some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_all_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-labelidx\"><span class=\"mord\"><span class=\"mord mathit\">labelidx</span></span></a></span></span></span></span></span></span></span>, then:",
                              "rationale": "let",
                              "steps": [
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose catch handler is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">throw_ref</span></span></a></span></span></span></span></span>.</p>"
                                }
                              ]
                            },
                            {
                              "html": "Else:",
                              "rationale": "let",
                              "steps": [
                                {
                                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">catch_all_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                                },
                                {
                                  "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> from the stack.</p>"
                                },
                                {
                                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                                },
                                {
                                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">br</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">l</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, the first non-value entry of the stack is not a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, the first non-value entry of the stack is not a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-throw-ref\"><span class=\"std std-ref\">validation</span></a>, the first non-value entry of the stack is not a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Throw the exception <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> as a result.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.082452em;vertical-align:-0.36806em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mrel\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instrtype\"><span class=\"mrel\">→</span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-localidx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">localidx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.188485714285714em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-2.8448em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-blocktype\"><span class=\"mord\"><span class=\"mord mathrm\">instrtype</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">bt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-try-table\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-localidx\"><span class=\"mord\"><span class=\"mord mathit\">localidx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-try-table\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose catch handler is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-catch\"><span class=\"mord\"><span class=\"mord mathit\">catch</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-handler\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">handler</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> and whose continuation is the end of the block.</p>"
        },
        {
          "html": "<p>Enter the block <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> with the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"mord\"><span class=\"mord mathsf\">label</span></span></a></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Jump to the start of the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "When the end of a block is reached without a jump, <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exception\"><span class=\"std std-ref\">exception</span></a>, or <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#trap\"><span class=\"std std-ref\">trap</span></a> aborting it, then the following steps are performed.",
      "rationale": "pop",
      "steps": [
        {
          "html": "<p>Pop all values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> from the top of the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-instrs\"><span class=\"std std-ref\">validation</span></a>, the label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> is now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the label from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "<p>Jump to the position after the end of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"std std-ref\">structured control instruction</span></a> associated with the label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> onto the stack.</p>"
        },
        {
          "html": "<p>Jump to the start of the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "html": "When the end of a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0444399999999998em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">try_table</span></span></span></span></span></span></span> block is reached without a jump, <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exception\"><span class=\"std std-ref\">exception</span></a>, or <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#trap\"><span class=\"std std-ref\">trap</span></a>, then the following steps are performed.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> be the number of values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-instrs\"><span class=\"std std-ref\">validation</span></a>, a handler and a label are now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the label from the stack.</p>"
        },
        {
          "html": "<p>Pop the handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "<p>Jump to the position after the end of the administrative instruction associated with the handler <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">H</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"std std-ref\">composite type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"mord\"><span class=\"mord mathrm\">expand</span></span></a><span class=\"mopen\">(</span><span class=\"mord mathit\">f</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"std std-ref\">function</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">f.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">code</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-call\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values are on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"std std-ref\">frame</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-default\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the activation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> with arity <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-label\"><span class=\"std std-ref\">label</span></a> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span> and whose continuation is the end of the function.</p>"
        },
        {
          "html": "<p><a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-instrs-enter\"><span class=\"std std-ref\">Enter</span></a> the instruction sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> with label <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">L</span></span></span></span></span></span> and no values.</p>"
        }
      ]
    },
    {
      "html": "When the end of a function is reached without a jump (including through <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.57143em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">return</span></span></a></span></span></span></span></span>), or an <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exception\"><span class=\"std std-ref\">exception</span></a> or <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#trap\"><span class=\"std std-ref\">trap</span></a> aborting it, then the following steps are performed.",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the arity of the activation of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-instrs\"><span class=\"std std-ref\">validation</span></a>, there are <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the results <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-func\"><span class=\"std std-ref\">validation</span></a>, the frame <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> is now on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the frame from the stack.</p>"
        },
        {
          "html": "<p>Push <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span> back to the stack.</p>"
        },
        {
          "html": "<p>Jump to the instruction after the original call.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-local-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-local-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">locals</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-local-tee\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-variable\"><span class=\"mord\"><span class=\"mord mathsf\">local</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-global-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-get\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-set\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">refs</span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">lim</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-grow\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-grow\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "Either:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#grow-table\"><span class=\"mord\"><span class=\"mord mathrm\">growtable</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Or:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3694389999999999em;vertical-align:-0.470991em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-signed\"><span class=\"mord\"><span class=\"mord mathrm\">signed</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.404009em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">at</span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathrm\">1</span></span><span class=\"mclose\">)</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-fill\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">fill</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">get</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                }
              ]
            },
            {
              "html": "Else:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">get</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                }
              ]
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">copy</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-table-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">]</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">refs</span></span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to validation, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1278879999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-loadop\"><span class=\"mord\"><span class=\"mord mathit\">loadop</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span> is not defined, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
              "rationale": "trap",
              "steps": [
                {
                  "html": "<p>Trap.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-loadop\"><span class=\"mord\"><span class=\"mord mathit\">loadop</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1278879999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-loadop\"><span class=\"mord\"><span class=\"mord mathit\">loadop</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7805599999999999em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">n</span></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span></span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-loadop\"><span class=\"mord\"><span class=\"mord mathit\">loadop</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
              "rationale": "trap",
              "steps": [
                {
                  "html": "<p>Trap.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">n/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.172em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-extend\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to validation, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">K/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0857709999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">K</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1491079999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">K</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">M/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">M/8</span><span class=\"mclose\">]</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">k</span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mathrm mtight\">K</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">2</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.364339em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4506780000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">K</span></span></span></span></span><span style=\"top:-3.14734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-extend\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">N</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">K</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to validation, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">M</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">128/N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathrm\">j</span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.148448em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4506780000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span style=\"top:-3.14734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to validation, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8623000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathrm\">j</span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.141556em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-extend\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">128</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mathsf mtight\">u</span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vload-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vload-lane\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">M</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\">k</span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">k</span><span class=\"mclose\">)</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.148448em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4506780000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span style=\"top:-3.14734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">k</span><span class=\"mclose\">])</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-store\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-store\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-store\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.093548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-storeop\"><span class=\"mord\"><span class=\"mord mathit\">storeop</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span> is not defined, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
              "rationale": "trap",
              "steps": [
                {
                  "html": "<p>Trap.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-store\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.093548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-storeop\"><span class=\"mord\"><span class=\"mord mathit\">storeop</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
              "rationale": "trap",
              "steps": [
                {
                  "html": "<p>Trap.</p>"
                }
              ]
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.16914em;vertical-align:-0.41913999999999996em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-wrap\"><span class=\"mord\"><span class=\"mord mathrm\">wrap</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.45586em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">))</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">n/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vstore-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vstore-lane\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></a><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">M</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">128/N</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">N</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vstore-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">])</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ao</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">offset</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">N/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">lim</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathsf\">page</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">64</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ki</span></span></span></span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-grow\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "Either:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#grow-mem\"><span class=\"mord\"><span class=\"mord mathrm\">growmem</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">64</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ki</span></span></span><span class=\"mclose\">))</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Or:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3694389999999999em;vertical-align:-0.470991em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-signed\"><span class=\"mord\"><span class=\"mord mathrm\">signed</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.404009em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">at</span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathrm\">1</span></span><span class=\"mclose\">)</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-fill\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">8</span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">fill</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-copy\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">load</span></span></a></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">8</span></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mathsf\">u</span></a></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">8</span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                }
              ]
            },
            {
              "html": "Else:",
              "rationale": "push",
              "steps": [
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">load</span></span></a></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">8</span></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mathsf\">u</span></a></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">8</span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                }
              ]
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">copy</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memory-init\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">])</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">store</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">8</span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-notation-textual\"><span class=\"std std-ref\">current</span></a> <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"std std-ref\">frame</span></a>.</p>"
        },
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-null\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> exists.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">F.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-func\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-is-null\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-as-non-null\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-eq\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-eq\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-test\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the type of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> matches <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">.</span></span><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span></span></span></span></span></span> be the topmost <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-cast\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the type of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> does not match <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#type-inst\"><span class=\"mord\"><span class=\"mord mathrm\">clos</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">.</span></span><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">module</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-ref-i31\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.130248em;vertical-align:-0.380248em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">31</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-wrap\"><span class=\"mord\"><span class=\"mord mathrm\">wrap</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">32</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">31</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">))</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-i31-get\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-i31-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">31</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-int\"><span class=\"mord\"><span class=\"mord mathit\">u</span><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mtight sizing reset-size6 size3\">31</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">31</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.133108em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-extend\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">31</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-new\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.57143em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-new\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">si</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structinst\"><span class=\"std std-ref\">structure instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-packfield\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">si</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.57143em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-new-default\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-new-default\"><span class=\"std std-ref\">validation</span></a>, for all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-default\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">unpack</span></span></a></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the value sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-default\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">unpack</span></span></a></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-new-default\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-struct\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">new</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structaddr\"><span class=\"mord\"><span class=\"mord mathit\">structaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5182599999999997em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpackfield\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mtight\"></span><span class=\"mopen mtight\">[</span><span class=\"mord mathrm mtight\">i</span><span class=\"mclose mtight\">]</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">])</span></span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-structaddr\"><span class=\"mord\"><span class=\"mord mathit\">structaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">struct</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-list\"><span class=\"mord\"><span class=\"mord mathit\">list</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-struct-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">structs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.16914em;vertical-align:-0.41913999999999996em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-packfield\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.45586em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.786em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mtight\"></span><span class=\"mopen mtight\">[</span><span class=\"mord mathrm mtight\">i</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-default\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-default\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">unpack</span></span></a></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is defined.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04964em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-default\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">unpack</span></span></a></span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-fixed\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63888em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-fixed\"><span class=\"std std-ref\">validation</span></a>, there are at least <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> values on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.748732em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ai</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"std std-ref\">array instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-packfield\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ai</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63888em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-data\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.046072em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result for which each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> has length <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span></span></span></span></span></span></span>, and the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-concat\"><span class=\"std std-ref\">concatenation</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.046072em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpacknum\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-elem\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-new-elem\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9431719999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9431719999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">new_fixed</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-get\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3462599999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpackfield\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">])</span></span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-set\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-packfield\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-len\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-len\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-len\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-fill\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">fill</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is reference value, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is reference value, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>, then:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
                  "rationale": "trap",
                  "steps": [
                    {
                      "html": "<p>Trap.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
                  "rationale": "do",
                  "steps": [
                    {
                      "html": "<p>Do nothing.</p>"
                    }
                  ]
                },
                {
                  "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
                  "rationale": "trap",
                  "steps": [
                    {
                      "html": "<p>Trap.</p>"
                    }
                  ]
                },
                {
                  "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
                  "rationale": "do",
                  "steps": [
                    {
                      "html": "<p>Do nothing.</p>"
                    }
                  ]
                },
                {
                  "html": "Else:",
                  "rationale": "assert",
                  "steps": [
                    {
                      "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-copy\"><span class=\"std std-ref\">validation</span></a>, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>.</p>"
                    },
                    {
                      "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
                    },
                    {
                      "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                    },
                    {
                      "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                    },
                    {
                      "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                    },
                    {
                      "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
                      "rationale": "push",
                      "steps": [
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2491079999999999em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">get</span></span></a></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        }
                      ]
                    },
                    {
                      "html": "Else:",
                      "rationale": "push",
                      "steps": [
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2491079999999999em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">get</span></span></a></span><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.02778em;\">_</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        },
                        {
                          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                        }
                      ]
                    },
                    {
                      "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                    },
                    {
                      "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">copy</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-data\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathsf\">mut</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-fieldtype\"><span class=\"mord\"><span class=\"mord mathit\">fieldtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
              "rationale": "trap",
              "steps": [
                {
                  "html": "<p>Trap.</p>"
                }
              ]
            },
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
              "rationale": "do",
              "steps": [
                {
                  "html": "<p>Do nothing.</p>"
                }
              ]
            },
            {
              "html": "Else:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be the result for which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-bytes\"><span class=\"mord\"><span class=\"mord mathrm\">bytes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpacknum\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">zt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">zt</span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/8</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
                },
                {
                  "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">init_data</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the current state.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-array-init-elem\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayaddr\"><span class=\"mord\"><span class=\"mord mathit\">arrayaddr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">arrays</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-arrayinst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>, then:",
          "rationale": "do",
          "steps": [
            {
              "html": "<p>Do nothing.</p>"
            }
          ]
        },
        {
          "html": "Else if <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">j</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">set</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-array\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">array</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">init_elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-any-convert-extern\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">any</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">extern</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-addrref\"><span class=\"mord\"><span class=\"mord mathit\">addrref</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">extern</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-addrref\"><span class=\"mord\"><span class=\"mord mathit\">addrref</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-addrref\"><span class=\"mord\"><span class=\"mord mathit\">addrref</span></span></a></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-extern-convert-any\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathit\">heaptype</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">null</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-heaptype\"><span class=\"mord\"><span class=\"mord mathsf\">extern</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is address value, then:",
          "rationale": "push",
          "steps": [
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">extern</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-unop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-unop\"><span class=\"mord\"><span class=\"mord mathit\">unop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-unop\"><span class=\"mord\"><span class=\"mord mathit\">unop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-binop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-binop\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-binop\"><span class=\"mord\"><span class=\"mord mathit\">binop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-binop\"><span class=\"mord\"><span class=\"mord mathit\">binop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-testop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-testop\"><span class=\"mord\"><span class=\"mord mathit\">testop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-relop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-relop\"><span class=\"std std-ref\">validation</span></a>, a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-num\"><span class=\"std std-ref\">number value</span></a> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-relop\"><span class=\"mord\"><span class=\"mord mathit\">relop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-cvtop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-cvtop\"><span class=\"mord\"><span class=\"mord mathit\">cvtop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-cvtop\"><span class=\"mord\"><span class=\"mord mathit\">cvtop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">nt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "push",
      "steps": [
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvunop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvunop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vvunop\"><span class=\"mord\"><span class=\"mord mathit\">vvunop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vvunop\"><span class=\"mord\"><span class=\"mord mathit\">vvunop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvbinop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvbinop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvbinop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vvbinop\"><span class=\"mord\"><span class=\"mord mathit\">vvbinop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vvbinop\"><span class=\"mord\"><span class=\"mord mathit\">vvbinop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvternop\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vvternop\"><span class=\"mord\"><span class=\"mord mathit\">vvternop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vvternop\"><span class=\"mord\"><span class=\"mord mathit\">vvternop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vvtestop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-inez\"><span class=\"mord\"><span class=\"mord mathrm\">inez</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight\">128</span></span></a><span class=\"mord mathrm mtight\">∣</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vunop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vunop\"><span class=\"mord\"><span class=\"mord mathit\">vunop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vunop\"><span class=\"mord\"><span class=\"mord mathit\">vunop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vbinop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vbinop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vbinop\"><span class=\"mord\"><span class=\"mord mathit\">vbinop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vbinop\"><span class=\"mord\"><span class=\"mord mathit\">vbinop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vternop\"><span class=\"mord\"><span class=\"mord mathit\">vternop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span> is empty, then:",
          "rationale": "trap",
          "steps": [
            {
              "html": "<p>Trap.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be an element of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vternop\"><span class=\"mord\"><span class=\"mord mathit\">vternop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vtestop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Π</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-inez\"><span class=\"mord\"><span class=\"mord mathrm\">inez</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">i</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vrelop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vrelop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vrelop\"><span class=\"mord\"><span class=\"mord mathit\">vrelop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vshiftop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"std std-ref\">number type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.67937em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vshiftop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vshiftop\"><span class=\"mord\"><span class=\"mord mathit\">vshiftop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\">i</span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vbitmask\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">bitmask</span></span></a></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vswizzlop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vswizzlop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">swizzlop</span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vshuffle\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vshuffle\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\">shuffle</span></span></a></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vsplat\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vsplat\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.148448em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4506780000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span style=\"top:-3.14734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-packnum\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextract-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0409em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span> is not defined, then:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextract-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord\"><span class=\"mord mathit\">lanetype</span></span></a></span></span></span></span></span></span> is number type.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextract-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">lanetype</span></span></a></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">lanetype</span></span></a></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord\"><span class=\"mord mathit\">lanetype</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextract-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord\"><span class=\"mord mathit\">lanetype</span></span></a></span></span></span></span></span></span> is packed type.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0409em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord\"><span class=\"mord mathit\">sx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextract-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">lanetype</span></span></a></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.172em;vertical-align:-0.422em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#op-extend\"><span class=\"mord\"><span class=\"mord mathrm\">extend</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.453em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">lanetype</span></span></a></span><span class=\"mord mathrm mtight\">∣</span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathrm mtight\">32</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-lanetype\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">lanetype</span></span></a></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">])</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vreplace-lane\"><span class=\"std std-ref\">validation</span></a>, a value is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vreplace-lane\"><span class=\"std std-ref\">validation</span></a>, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathit\">numtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-unpack\"><span class=\"mord\"><span class=\"mord mathrm\">unpack</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf\">i</span></a></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight sizing reset-size6 size3\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight sizing reset-size6 size3\" style=\"margin-right:0.10903em;\">N</span></a></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vreplace-lane\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.148448em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4506780000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span><span style=\"top:-3.14734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathrm mtight\">1</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-lanes\"><span class=\"mord\"><span class=\"mord mathrm\">lanes</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-shape\"><span class=\"mord mathsf mtight\">x</span></a></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">M</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-packnum\"><span class=\"mord\"><span class=\"mord mathrm\">pack</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord mathsf mtight\">i</span></a></span><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mspace mtight\" style=\"margin-right:-0.14285714285714288em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></a></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)])</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextunop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vextunop\"><span class=\"mord\"><span class=\"mord mathit\">vextunop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextbinop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextbinop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vextbinop\"><span class=\"mord\"><span class=\"mord mathit\">vextbinop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vextternop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vextternop\"><span class=\"mord\"><span class=\"mord mathit\">vextternop</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vnarrow\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vnarrow\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.133108em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-vec\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">narrow</span></span></a></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-sx\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sx</span></span></a></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-vcvtop\"><span class=\"std std-ref\">validation</span></a>, a value of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"std std-ref\">vector type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.45110799999999995em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a></span></span></span></span></span> is on the top of the stack.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">c</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.130248em;vertical-align:-0.380248em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vcvtop\"><span class=\"mord\"><span class=\"mord mathit\">vcvtop</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">sh</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vcvtop\"><span class=\"mord\"><span class=\"mord mathit\">vcvtop</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-vectype\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">v</span><span class=\"mord mtight sizing reset-size6 size3\">128</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">c</span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        }
      ]
    },
    {
      "rationale": "execute",
      "steps": [
        {
          "html": "<p>Execute the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathit\">taginst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"std std-ref\">tag instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76587em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathit\">taginst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76587em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathit\">globalinst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathit\">globalinst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-limits\"><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">..</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></a><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathsf\">page</span></span></a><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathtt\">0x00</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mathrm mtight\">64</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">Ki</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.164842em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-limits\"><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">..</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></a><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"std std-ref\">function instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">code</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">code</span></span></a></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathit\">funcinst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"std std-ref\">data instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datainst\"><span class=\"mord\"><span class=\"mord mathit\">datainst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"std std-ref\">element instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-eleminst\"><span class=\"mord\"><span class=\"mord mathit\">eleminst</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-limits\"><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">..</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></a><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathsf\">page</span></span></a><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mord mathrm\">/</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">64</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ki</span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">j</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-limits\"><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">..</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></a><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathsf\">page</span></span></a><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathtt\">0x00</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mathrm mtight\">64</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">Ki</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathit\">meminst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Fail.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-limits\"><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">..</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></a><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1304880000000002em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">j</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">at</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-limits\"><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">..</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span></a><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">j</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">rt</span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.836232em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathit\">tableinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Fail.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathit\">start</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">tags</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">globals</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">fa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">funcs</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">mems</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">tables</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">fa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> for all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.81786em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> from <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathrm\">0</span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the tag type sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.046072em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the byte sequence sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathsf\">data</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathit\">datamode</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.046072em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the global type sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.130248em;vertical-align:-0.380248em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathsf\">global</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the table type sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the memory type sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-type\"><span class=\"mord\"><span class=\"mord mathrm\">alloctype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference type sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathit\">elemmode</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the expression sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.851632em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the local sequence sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the type index sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.851632em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-tag\"><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">alloctag</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-subst\"><span class=\"mrel\"><span class=\"mrel\">:=</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561439999999998em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaladdr\"><span class=\"std std-ref\">global address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0591439999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-global\"><span class=\"mord\"><span class=\"mord mathrm\">allocglobal</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-subst\"><span class=\"mrel\"><span class=\"mrel\">:=</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"std std-ref\">memory address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-mem\"><span class=\"mord\"><span class=\"mord mathrm\">allocmem</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-subst\"><span class=\"mrel\"><span class=\"mrel\">:=</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"std std-ref\">table address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-table\"><span class=\"mord\"><span class=\"mord mathrm\">alloctable</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-subst\"><span class=\"mrel\"><span class=\"mrel\">:=</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xi</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xi</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"std std-ref\">export instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-export\"><span class=\"mord\"><span class=\"mord mathrm\">allocexport</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xi</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xi</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.046072em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-dataaddr\"><span class=\"std std-ref\">data address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-data\"><span class=\"mord\"><span class=\"mord mathrm\">allocdata</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-data\"><span class=\"mord\"><span class=\"mord mathsf\">ok</span></span></a><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0986319999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemaddr\"><span class=\"std std-ref\">elem address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-elem\"><span class=\"mord\"><span class=\"mord mathrm\">allocelem</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemtype\"><span class=\"mord\"><span class=\"mord mathit\">elemtype</span></span></a></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-subst\"><span class=\"mrel\"><span class=\"mrel\">:=</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">aa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ga</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ma</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ta</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">fa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">fa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">datas</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">da</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">elems</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ea</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">exports</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xi</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.851632em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"std std-ref\">function address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-func\"><span class=\"mord\"><span class=\"mord mathrm\">allocfunc</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">dt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-local\"><span class=\"mord\"><span class=\"mord mathit\">local</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">fa</span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-type\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">rectype</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.109268em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1304880000000002em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-type\"><span class=\"mord\"><span class=\"mord mathrm\">alloctype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">x</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.109268em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.164828em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-roll-deftype\"><span class=\"mord\"><span class=\"mord mathrm\">roll</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">x</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">rectype</span></span></a></span><span class=\"mclose\">)</span></span></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-subst\"><span class=\"mrel\"><span class=\"mrel\">:=</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.109268em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagidx\"><span class=\"mord\"><span class=\"mord mathit\">tagidx</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">addr</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])}</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\">global</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalidx\"><span class=\"mord\"><span class=\"mord mathit\">globalidx</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\">global</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">addr</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathsf\">global</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])}</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memidx\"><span class=\"mord\"><span class=\"mord mathit\">memidx</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">addr</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathsf\">mem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])}</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableidx\"><span class=\"mord\"><span class=\"mord mathit\">tableidx</span></span></a></span></span></span></span></span></span></span>, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">addr</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])}</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcidx\"><span class=\"mord\"><span class=\"mord mathit\">funcidx</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">addr</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">])}</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-module\"><span class=\"std std-ref\">valid</span></a>, then:",
          "rationale": "fail",
          "steps": [
            {
              "html": "<p>Fail.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduletype\"><span class=\"mrel\">→</span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the destructuring of the type of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.149108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tag\"><span class=\"mord\"><span class=\"mord mathit\">tag</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mem\"><span class=\"mord\"><span class=\"mord mathit\">mem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord\"><span class=\"mord mathit\">func</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathit\">start</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "fail",
          "steps": [
            {
              "html": "<p>Fail.</p>"
            }
          ]
        },
        {
          "html": "For all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-val\"><span class=\"std std-ref\">valid</span></a> with type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
              "rationale": "fail",
              "steps": [
                {
                  "html": "<p>Fail.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">d</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-concat\"><span class=\"std std-ref\">concatenation</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2031999999999998em;vertical-align:-0.25586em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-rundata\"><span class=\"mord\"><span class=\"mord mathrm\">rundata</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord\"><span class=\"mord mathit\">data</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-data\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">data</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#notation-concat\"><span class=\"std std-ref\">concatenation</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1974399999999998em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-runelem\"><span class=\"mord\"><span class=\"mord mathrm\">runelem</span></span></a></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">elem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1973399999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">types</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-type\"><span class=\"mord\"><span class=\"mord mathrm\">alloctype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-rectype\"><span class=\"mord\"><span class=\"mord mathit\">type</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">globals</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace allowbreak\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathrm\">funcs</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">∣s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.06944em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">&lt;</span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">∣</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><a class=\"mtight\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-func\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">func</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm mtight\">∣</span></span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the expression sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-table\"><span class=\"mord\"><span class=\"mord mathit\">table</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.121804em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the expression sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the global type sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.130248em;vertical-align:-0.380248em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathsf\">global</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-global\"><span class=\"mord\"><span class=\"mord mathit\">global</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.810808em;vertical-align:-0.380248em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.121804em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064292em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.191596em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the expression sequence sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"mord\"><span class=\"mord mathit\">reftype</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathit\">elemmode</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elem\"><span class=\"mord\"><span class=\"mord mathit\">elem</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064292em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.191596em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-state\"><span class=\"std std-ref\">state</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">})</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">z</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561439999999998em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1561439999999998em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#eval-globals\"><span class=\"mord\"><span class=\"mord mathrm\">evalglobal</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">z</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-expr\"><span class=\"std std-ref\">evaluating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> with state <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0986319999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value sequence sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064292em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.191596em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the reference value sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
            },
            {
              "html": "For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, do:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-expr\"><span class=\"std std-ref\">evaluating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6747em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> with state <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span>.</p>"
                },
                {
                  "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
                }
              ]
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.020036em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0986319999999998em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.23474em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-module\"><span class=\"mord\"><span class=\"mord mathrm\">allocmodule</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\" style=\"margin-right:0.01389em;\">g</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">t</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.225936em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span><span class=\"mclose\">}</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.801892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">F</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">e</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Execute the sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">d</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathit\">start</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span> is defined, then:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathsf\">start</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8991079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-start\"><span class=\"mord\"><span class=\"mord mathit\">start</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mclose mtight\">?</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8053600000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"std std-ref\">instruction</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\">call</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8053600000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathsf mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>, then:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "Else:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathrm\">1</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gt</span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-expr\"><span class=\"std std-ref\">evaluating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span></span></span></span></span></span> with state <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">z</span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-global\"><span class=\"mord\"><span class=\"mord mathrm\">allocglobal</span></span></a></span><span class=\"mopen\">(</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gt</span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Append <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">a</span></span></span></span></span></span> to <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1304880000000002em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#eval-globals\"><span class=\"mord\"><span class=\"mord mathrm\">evalglobal</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen\">((</span><span class=\"mord mathrm\">s</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathrm\" style=\"margin-right:0.07778em;\">f</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gt</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span></span>.</p>"
            },
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathit\">datamode</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathsf\">passive</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathit\">datamode</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathsf\">active</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memidx\"><span class=\"mord\"><span class=\"mord mathit\">memidx</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathsf\">active</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-datamode\"><span class=\"mord\"><span class=\"mord mathit\">datamode</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">memory</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-memory\"><span class=\"mord\"><span class=\"mord mathsf\">data</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">drop</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathit\">elemmode</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathsf\">passive</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathit\">elemmode</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathsf\">declare</span></span></a></span></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">drop</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Assert: Due to validation, <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathit\">elemmode</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathsf\">active</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableidx\"><span class=\"mord\"><span class=\"mord mathit\">tableidx</span></span></a></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-expr\"><span class=\"mord\"><span class=\"mord mathit\">expr</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathsf\">active</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-elemmode\"><span class=\"mord\"><span class=\"mord mathit\">elemmode</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr\"><span class=\"mord\"><span class=\"mord mathit\">instr</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">0</span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-numtype\"><span class=\"mord\"><span class=\"mord mathsf\">i</span><span class=\"mord mtight sizing reset-size6 size3\">32</span></span></a><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-numeric\"><span class=\"mord\"><span class=\"mord mathsf\">const</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">n</span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">table</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">init</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\" style=\"margin-right:0.01389em;\">y</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-table\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">drop</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">x</span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: Due to validation, the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span> is some <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></a><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-resulttype\"><span class=\"mord\"><span class=\"mord mathit\">resulttype</span></span></a></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mord\"><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-comptype\"><span class=\"mrel\">→</span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span> be the destructuring of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expansion</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0230359999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">∣</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span><span class=\"mord mathrm\">∣</span></span></span></span></span></span></span></span>, then:",
          "rationale": "fail",
          "steps": [
            {
              "html": "<p>Fail.</p>"
            }
          ]
        },
        {
          "html": "For all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>, and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span></span> is not <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-val\"><span class=\"std std-ref\">valid</span></a> with type <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then:",
              "rationale": "fail",
              "steps": [
                {
                  "html": "<p>Fail.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\">k</span></span></span></span></span></span> be the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9856959999999999em;vertical-align:-0.247em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span> be the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">{</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-frame\"><span class=\"mord\"><span class=\"mord mathsf\">module</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mopen\">{</span><span class=\"mclose\">}}</span></span></span></span></span></span></span> whose arity is <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathrm\">k</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">F</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Push the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Push the value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">func</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"mclose\">)</span></span></span></span></span></span></span> to the stack.</p>"
        },
        {
          "html": "<p>Execute the instruction <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-instr-control\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">call_ref</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">s</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathrm\">.</span></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Pop the values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.07524em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Pop the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathsf\">frame</span></span></span></span></span></span></span> from the stack.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.07524em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">k</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"std std-ref\">store</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If there exists a derivation for the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"std std-ref\">byte</span></a> sequence <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.967476em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#binary-module\"><span class=\"mord\"><span class=\"mord mathtt\">module</span></span></a></span></span></span></span></span> according to the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#binary-module\"><span class=\"std std-ref\">binary grammar for modules</span></a>, yielding a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"std std-ref\">module</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If there exists a derivation for the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#text-source\"><span class=\"std std-ref\">source</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">char</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as a <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#text-module\"><span class=\"mord\"><span class=\"mord mathtt\">module</span></span></a></span></span></span></span></span> according to the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#text-module\"><span class=\"std std-ref\">text grammar for modules</span></a>, yielding a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"std std-ref\">module</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">m</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-module\"><span class=\"std std-ref\">valid</span></a>, then return nothing.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "<p>Try <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-instantiation\"><span class=\"std std-ref\">instantiating</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"std std-ref\">external addresses</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"mord\"><span class=\"mord mathit\">externaddr</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as imports:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If it succeeds with a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-module\"><span class=\"std std-ref\">valid</span></a> with the external import types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and external export types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"std std-ref\">imports</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> equals the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995000000000001em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>, do:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.87381em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathsf\">import</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nm</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nm</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">xt</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the deconstruction of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995000000000001em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-import\"><span class=\"mord\"><span class=\"mord mathit\">import</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the triple <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nm</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nm</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">i2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, in index order.</p>"
        },
        {
          "html": "<p>Post-condition: each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-externtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-module\"><span class=\"std std-ref\">valid</span></a> with the external import types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and external export types <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"std std-ref\">exports</span></a> of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-module\"><span class=\"mord\"><span class=\"mord mathit\">module</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Assert: the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> equals the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>For each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.933136em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> and corresponding <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.048892em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.074928em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.254792em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>, do:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathsf\">export</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nm</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externidx\"><span class=\"mord\"><span class=\"mord mathit\">externidx</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span></span> be the deconstruction of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-export\"><span class=\"mord\"><span class=\"mord mathit\">export</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> be the pair <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">nm</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the concatenation of all <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">result</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, in index order.</p>"
        },
        {
          "html": "<p>Post-condition: each <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.048892em;vertical-align:-0.247em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4530000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-externtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: due to <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-moduleinst\"><span class=\"std std-ref\">validity</span></a> of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a></span></span></span></span></span>, all its <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"std std-ref\">export names</span></a> are different.</p>"
        },
        {
          "html": "If there exists an <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995000000000001em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathit\">moduleinst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"mord\"><span class=\"mord mathsf\">exports</span></span></a></span></span></span></span></span></span> such that <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"std std-ref\">name</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8995000000000001em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\">name</span></span></a></span></span></span></span></span></span> equals <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-name\"><span class=\"mord\"><span class=\"mord mathit\">name</span></span></a></span></span></span></span></span>, then:",
          "rationale": "return",
          "steps": [
            {
              "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externaddr\"><span class=\"std std-ref\">external address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathit\">exportinst</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exportinst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">addr</span></span></a></span></span></span></span></span></span>.</p>"
            }
          ]
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-deftype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a> and <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expands</span></a> to a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-functype\"><span class=\"std std-ref\">function type</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-func\"><span class=\"std std-ref\">allocating a host function</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>, host function code <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-hostfunc\"><span class=\"mord\"><span class=\"mord mathit\">hostfunc</span></span></a></span></span></span></span></span> and an empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-moduleinst\"><span class=\"std std-ref\">module instance</span></a>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"std std-ref\">definedn type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">funcs</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"mord\"><span class=\"mord mathit\">deftype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-deftype\"><span class=\"std std-ref\">defined type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-deftype\"><span class=\"std std-ref\">valid</span></a> and <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-expand-deftype\"><span class=\"std std-ref\">expands</span></a> to a <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-functype\"><span class=\"std std-ref\">function type</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "<p>Try <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-invocation\"><span class=\"std std-ref\">invoking</span></a> the function <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-funcaddr\"><span class=\"mord\"><span class=\"mord mathit\">funcaddr</span></span></a></span></span></span></span></span> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"std std-ref\">values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as arguments:</p>"
        }
      ]
    },
    {
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If it succeeds with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"std std-ref\">values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span> as results, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.914828em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.2891320000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else if the outcome is an exception with a thrown <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#exec-throw-ref\"><span class=\"std std-ref\">exception</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.06944em;\">ref</span><span class=\"mord\"><span class=\"mord mathsf\">.</span></span><span class=\"mord mathsf\">exn</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span></span> as the result, then let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\">exception</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span></span></p>"
        },
        {
          "html": "<p>Else it has trapped, hence let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span> be <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">result</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-tabletype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-table\"><span class=\"std std-ref\">allocating a table</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"mord\"><span class=\"mord mathit\">tabletype</span></span></a></span></span></span></span></span> and initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tabletype\"><span class=\"std std-ref\">table type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-tabletype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">ti</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">ti</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the updated store.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"mord\"><span class=\"mord mathsf\">elem</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "Try <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#grow-table\"><span class=\"std std-ref\">growing</span></a> the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableinst\"><span class=\"std std-ref\">table instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tables</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tableaddr\"><span class=\"mord\"><span class=\"mord mathit\">tableaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span> by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> elements with initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If it succeeds, return the updated store.</p>"
            },
            {
              "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-mem\"><span class=\"std std-ref\">allocating a memory</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"mord\"><span class=\"mord mathit\">memtype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memtype\"><span class=\"std std-ref\">memory type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-memtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return the  <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"std std-ref\">byte</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathit\">mi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66786em;vertical-align:0em;\"></span><span class=\"mord mathrm\">i</span></span></span></span></span></span> is larger than or equal to the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">mi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">i</span><span class=\"mclose\">]</span></span></span></span></span></span></span> with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-byte\"><span class=\"mord\"><span class=\"mord mathit\">byte</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the updated store.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return the length of <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"mord\"><span class=\"mord mathsf\">bytes</span></span></a></span></span></span></span></span></span> divided by the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#page-size\"><span class=\"std std-ref\">page size</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "try",
      "steps": [
        {
          "html": "Try <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#grow-mem\"><span class=\"std std-ref\">growing</span></a> the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-meminst\"><span class=\"std std-ref\">memory instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">mems</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-memaddr\"><span class=\"mord\"><span class=\"mord mathit\">memaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span> by <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathrm\">n</span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#page-size\"><span class=\"std std-ref\">pages</span></a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If it succeeds, return the updated store.</p>"
            },
            {
              "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
            }
          ]
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">tagtype</span></span></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-tagtype\"><span class=\"std std-ref\">valid</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-tag\"><span class=\"std std-ref\">allocating a tag</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"mord\"><span class=\"mord mathit\">tagtype</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">tags</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-taginst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagtype\"><span class=\"std std-ref\">tag type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-tagtype\"><span class=\"std std-ref\">valid</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span> is an allocated <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"std std-ref\">allocating an exception instance</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"mord\"><span class=\"mord mathit\">tagaddr</span></span></a></span></span></span></span></span> and initialization values <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.773036em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-tagaddr\"><span class=\"std std-ref\">tag address</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">tag</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65536em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"std std-ref\">exception instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">exns</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exnaddr\"><span class=\"mord\"><span class=\"mord mathit\">exnaddr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"std std-ref\">values</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathit\">exninst</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-exninst\"><span class=\"mord\"><span class=\"mord mathsf\">fields</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Pre-condition: the <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-globaltype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a></span></span></span></span></span> be the result of <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#alloc-global\"><span class=\"std std-ref\">allocating a global</span></a> in <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a></span></span></span></span></span> with <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"mord\"><span class=\"mord mathit\">globaltype</span></span></a></span></span></span></span></span> and initialization value <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the new store paired with <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">S.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><span class=\"mord mathrm\">a</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-globaltype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathit\">gi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathit\">gi</span></span></span></span></span></span></span> be the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"std std-ref\">global instance</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathit\">store</span></span></a><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-store\"><span class=\"mord\"><span class=\"mord mathsf\">globals</span></span></a><span class=\"mopen\">[</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaladdr\"><span class=\"mord\"><span class=\"mord mathit\">globaladdr</span></span></a><span class=\"mclose\">]</span></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Let <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathit\">mut</span></span></a><span class=\"mspace nobreak\">&nbsp;</span><span class=\"mord mathrm\">t</span></span></span></span></span></span></span> be the structure of the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globaltype\"><span class=\"std std-ref\">global type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8498000000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">type</span></span></a></span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-mut\"><span class=\"mord\"><span class=\"mord mathit\">mut</span></span></a></span></span></span></span></span> is empty, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Replace <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathit\">gi</span></span><span class=\"mord mathrm\">.</span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-globalinst\"><span class=\"mord\"><span class=\"mord mathsf\">value</span></span></a></span></span></span></span></span></span> with the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"std std-ref\">value</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-val\"><span class=\"mord\"><span class=\"mord mathit\">val</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the updated store.</p>"
        }
      ]
    },
    {
      "rationale": "return",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"std std-ref\">reference</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-val\"><span class=\"std std-ref\">valid</span></a> under store <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathrm\">S</span></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Return the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathrm\">t</span></span></span></span></span></span> with which <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-ref\"><span class=\"mord\"><span class=\"mord mathit\">ref</span></span></a></span></span></span></span></span> is valid.</p>"
        },
        {
          "html": "<p>Post-condition: the returned <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-reftype\"><span class=\"std std-ref\">reference type</span></a> is <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-reftype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.980548em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#aux-default\"><span class=\"mord\"><span class=\"mord mathrm\">default</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">valtype</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> is not defined, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-error\"><span class=\"mord\"><span class=\"mord mathsf\" style=\"margin-right:0.01389em;\">error</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-valtype\"><span class=\"std std-ref\">value types</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> are <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-valtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#match-valtype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.93858em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-valtype\"><span class=\"mord\"><span class=\"mord mathit\">valtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">true</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">false</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    },
    {
      "rationale": "if",
      "steps": [
        {
          "html": "<p>Pre-condition: the <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"std std-ref\">extern types</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> and <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> are <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#valid-externtype\"><span class=\"std std-ref\">valid</span></a> under the empty <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#context\"><span class=\"std std-ref\">context</span></a>.</p>"
        },
        {
          "html": "<p>If <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span> <a class=\"reference internal\" href=\"https://webassembly.github.io/spec/core/bikeshed/#match-externtype\"><span class=\"std std-ref\">matches</span></a> <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85922em;vertical-align:-0.24414em;\"></span><span class=\"mord\"><a href=\"https://webassembly.github.io/spec/core/bikeshed/#syntax-externtype\"><span class=\"mord\"><span class=\"mord mathit\">externtype</span></span></a><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\"><span></span></span></span></span></span></span></span></span></span></span></span>, then return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">true</span></span></a></span></span></span></span></span>.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"  notranslate nohighlight\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><a href=\"https://webassembly.github.io/spec/core/bikeshed/#embed-bool\"><span class=\"mord\"><span class=\"mord mathit\">false</span></span></a></span></span></span></span></span>.</p>"
        }
      ]
    }
  ]
}