{
  "spec": {
    "title": "CSS Values and Units Module Level 5",
    "url": "https://drafts.csswg.org/css-values-5/"
  },
  "algorithms": [
    {
      "name": "parse with a <syntax>",
      "href": "https://drafts.csswg.org/css-values-5/#parse-with-a-syntax",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-with-a-syntax\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse with a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-syntax\" id=\"ref-for-typedef-syntax①⓪\">&lt;syntax&gt;</a></dfn> given a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string\">string</a> or <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①\">list</a> or <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value\">component values</a> <var>values</var>,\n\ta <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-syntax\" id=\"ref-for-typedef-syntax①①\">&lt;syntax&gt;</a> value <var>syntax</var>,\n\tand optionally an element <var>el</var> for context,\n\tperform the following steps.\n\tIt returns either CSS values,\n\tor the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value\">guaranteed-invalid value</a>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-list-of-component-values\" id=\"ref-for-parse-a-list-of-component-values\">Parse a list of component values</a> from <var>values</var>,\nand let <var>raw parse</var> be the result.</p>"
        },
        {
          "html": "<p>If <var>el</var> was given, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function\">substitute arbitrary substitution functions</a> in <var>raw parse</var>,\nand set <var>raw parse</var> to that result.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar③\">parse</a> <var>values</var> according to <var>syntax</var>,\nwith a <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/selectors-3/#x\" id=\"ref-for-x\">*</a> value treated as <code class=\"highlight\"><a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value\" id=\"ref-for-typedef-declaration-value④\">&lt;declaration-value&gt;</a>?</code>,\nand let <var>parsed result</var> be the result.\nIf <var>syntax</var> used a <span class=\"css\">|</span> combinator,\nlet <var>parsed result</var> be the parse result from the first matching clause.</p>"
        },
        {
          "html": "<p>If <var>parsed result</var> is failure,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①\">guaranteed-invalid value</a>.</p>"
        },
        {
          "html": "<p class=\"assertion\">Assert: <var>parsed result</var> is now a well-defined list of one or more CSS values,\nsince each branch of a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-syntax\" id=\"ref-for-typedef-syntax①②\">&lt;syntax&gt;</a> defines an unambiguous parse result\n(or the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/selectors-3/#x\" id=\"ref-for-x①\">*</a> syntax is unambiguous on its own).</p>"
        },
        {
          "html": "<p>Return <var>parsed result</var>.</p>"
        }
      ]
    },
    {
      "name": "<request-url-modifier>/<crossorigin-modifier>",
      "href": "https://drafts.csswg.org/css-values-5/#typedef-request-url-modifier-crossorigin-modifier",
      "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-4/#url-request-modifier-steps\" id=\"ref-for-url-request-modifier-steps①\">URL request modifier steps</a> for this modifier given <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request\" id=\"ref-for-concept-request①\">request</a> <var>req</var> are:",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set <var>req</var>’s <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request-mode\" id=\"ref-for-concept-request-mode\">mode</a> to \"cors\".</p>"
        },
        {
          "html": "<p>If the given value is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#valdef-request-url-modifier-use-credentials\" id=\"ref-for-valdef-request-url-modifier-use-credentials\">use-credentials</a>,\nset <var>req</var>’s <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request-credentials-mode\" id=\"ref-for-concept-request-credentials-mode\">credentials mode</a> to \"include\".</p>"
        },
        {
          "html": "<p>Otherwise, set <var>req</var>’s <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request-credentials-mode\" id=\"ref-for-concept-request-credentials-mode①\">credentials mode</a> to \"same-origin\".</p>"
        }
      ]
    },
    {
      "html": "When serializing the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#specified-value\" id=\"ref-for-specified-value\">specified value</a> of a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-position\" id=\"ref-for-typedef-position①①\">&lt;position&gt;</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If only one component is specified:",
              "html": "<ul>\n      <li data-md=\"\">\n       <p>The implied <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-backgrounds-3/#valdef-background-position-center\" id=\"ref-for-valdef-background-position-center\">center</a> keyword is added,\nand a 2-component value is serialized.</p>\n     </li></ul>"
            },
            {
              "case": "If two components are specified:",
              "html": "<ul>\n      <li data-md=\"\">\n       <p>Keywords are serialized as keywords.</p>\n      </li><li data-md=\"\">\n       <p><a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#typedef-length-percentage\" id=\"ref-for-typedef-length-percentage①④\">&lt;length-percentage&gt;</a>s are serialized as <span class=\"production\" id=\"ref-for-typedef-length-percentage①⑤\">&lt;length-percentage&gt;</span>s.</p>\n      </li><li data-md=\"\">\n       <p>Components are serialized horizontal first, then vertical.</p>\n     </li></ul>"
            },
            {
              "case": "If four components are specified:",
              "html": "<ul>\n      <li data-md=\"\">\n       <p>Keywords and offsets are both serialized.</p>\n      </li><li data-md=\"\">\n       <p>Components are serialized horizontal first, then vertical;\nalternatively <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#block-axis\" id=\"ref-for-block-axis②\">block-axis</a> first, then <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-writing-modes-4/#inline-axis\" id=\"ref-for-inline-axis②\">inline-axis</a>.</p>\n     </li></ul>"
            }
          ]
        }
      ]
    },
    {
      "name": "normalize mix percentages",
      "href": "https://drafts.csswg.org/css-values-5/#normalize-mix-percentages",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"normalize-mix-percentages\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">normalize mix percentages</dfn> given \n    <ul>\n     <li data-md=\"\">\n      <p>a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list②\">list</a> of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#mix-item\" id=\"ref-for-mix-item\">mix items</a> <var>items</var> (a value and optional percentage, each between 0% and 100% if specified)</p>\n     </li><li data-md=\"\">\n      <p>an optional <var>force normalization</var> flag\n(defaulting to false),</p>\n    </li></ul>\n    <p>returning a list of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#mix-item\" id=\"ref-for-mix-item①\">mix items</a> with normalized percentages\n\t\tand a “leftover” percentage:</p>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>specified sum</var> be the sum of the percentages specified in <var>items</var> (clamped to 100%),\nor 0% if the percentages are omitted for all items.</p>"
        },
        {
          "html": "<p>For each omitted percentage in <var>items</var>,\nset it to <code class=\"highlight\"><c- p=\"\">(</c-><c- m=\"\">100</c-><c- k=\"\">%</c-> - <var>specified sum</var><c- p=\"\">)</c-> / <c- p=\"\">(</c->number of omitted percentages<c- p=\"\">)</c-></code>.</p>"
        },
        {
          "html": "<p>Let <var>total</var> be the sum of the percentages of all the items.</p>"
        },
        {
          "html": "<p>If <var>total</var> is greater than 100%,\nor if <var>total</var> is greater than 0% and the <var>force normalization</var> flag is true,\nmultiply every percentage in <var>items</var> by <code class=\"highlight\"><c- p=\"\">(</c-><c- m=\"\">100</c-><c- k=\"\">%</c-> / <var>total</var><c- p=\"\">)</c-></code>.</p>"
        },
        {
          "html": "<p>If <var>total</var> is less than 100%,\nlet <var>leftover</var> be <code class=\"highlight\"><c- p=\"\">(</c-><c- m=\"\">100</c-><c- k=\"\">%</c-> - <var>total</var><c- p=\"\">)</c-></code>.\nOtherwise, let <var>leftover</var> be 0%.</p>"
        },
        {
          "html": "<p>Return <var>items</var> and <var>leftover</var>.</p>"
        }
      ]
    },
    {
      "name": "replace an if() function",
      "href": "https://drafts.csswg.org/css-values-5/#replace-an-if-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"replace-an-if-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#replace-an-arbitrary-substitution-function\" id=\"ref-for-replace-an-arbitrary-substitution-function\">replace an if() function</a></dfn>,\n\t\tgiven a list of <var>arguments</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate\">For each</a> <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-if-args-branch\" id=\"ref-for-typedef-if-args-branch③\">&lt;if-args-branch&gt;</a> <var>branch</var> in <var>arguments</var>:</p>",
          "ignored": [
            "Substitute arbitrary substitution functions in the first <declaration-value> of branch, then parse the result as an <if-condition>. If parsing returns failure, continue; otherwise, let the result be condition. Evaluate condition. If a <style-query> in condition tests the value of a property, and guarding a substitution context «\"property\", referenced-property-name» would mark it as a cyclic substitution context, that query evaluates to false. If the result of condition is false, continue. Substitute arbitrary substitution functions in the second <declaration-value> of branch, and return the result."
          ]
        },
        {
          "html": "<p>Return nothing (an empty sequence of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value②\">component values</a>).</p>"
        }
      ]
    },
    {
      "name": "replace an inherit() function",
      "href": "https://drafts.csswg.org/css-values-5/#replace-an-inherit-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"replace-an-inherit-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#replace-an-arbitrary-substitution-function\" id=\"ref-for-replace-an-arbitrary-substitution-function①\">replace an inherit() function</a></dfn>,\n\t\tgiven a list of <var>arguments</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function③\">Substitute arbitrary substitution functions</a> in the first <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value\" id=\"ref-for-typedef-declaration-value①⑧\">&lt;declaration-value&gt;</a> of <var>arguments</var>,\nthen <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar⑤\">parse</a> it as a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-variables-2/#typedef-custom-property-name\" id=\"ref-for-typedef-custom-property-name①\">&lt;custom-property-name&gt;</a>.</p>"
        },
        {
          "html": "<p>If parsing returned a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-variables-2/#typedef-custom-property-name\" id=\"ref-for-typedef-custom-property-name②\">&lt;custom-property-name&gt;</a>,\nand the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#inherited-value\" id=\"ref-for-inherited-value②\">inherited value</a> of that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#custom-property\" id=\"ref-for-custom-property①\">custom property</a> on the element\ndoes not contain the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value③\">guaranteed-invalid value</a>,\nreturn that inherited value.</p>"
        },
        {
          "html": "<p>Otherwise, if a second <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value\" id=\"ref-for-typedef-declaration-value①⑨\">&lt;declaration-value&gt;</a>? was passed in <var>arguments</var>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function④\">substitute arbitrary substitution functions</a> in that argument,\nand return the result.</p>"
        },
        {
          "html": "<p>Otherwise, return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value④\">guaranteed-invalid value</a>.</p>"
        }
      ]
    },
    {
      "name": "replace an attr() function",
      "href": "https://drafts.csswg.org/css-values-5/#replace-an-attr-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"replace-an-attr-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#replace-an-arbitrary-substitution-function\" id=\"ref-for-replace-an-arbitrary-substitution-function②\">replace an attr() function</a></dfn>,\n\t\tgiven a list of <var>arguments</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>el</var> be the element that the style containing the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#funcdef-attr\" id=\"ref-for-funcdef-attr①①\">attr()</a> function\nis being applied to.\nLet <var>first arg</var> be the first <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value\" id=\"ref-for-typedef-declaration-value②⑤\">&lt;declaration-value&gt;</a> in <var>arguments</var>.\nLet <var>second arg</var> be the <span class=\"production\" id=\"ref-for-typedef-declaration-value②⑥\">&lt;declaration-value&gt;</span>? passed after the comma,\nor null if there was no comma.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function⑥\">Substitute arbitrary substitution functions</a> in <var>first arg</var>,\nthen <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar⑦\">parse</a> it as <span class=\"css\"><a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-attr-name\" id=\"ref-for-typedef-attr-name④\">&lt;attr-name&gt;</a> <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-attr-type\" id=\"ref-for-typedef-attr-type③\">&lt;attr-type&gt;</a>?</span>.\nIf that returns failure, jump to the last step (labeled FAILURE).\nOtherwise, let <var>attr name</var> and <var>syntax</var> be the results of parsing\n(with <var>syntax</var> being null if <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-attr-type\" id=\"ref-for-typedef-attr-type④\">&lt;attr-type&gt;</a> was omitted),\nprocessed as specified in the definition of those arguments.</p>"
        },
        {
          "html": "<p>If <var>attr name</var> exists as an attribute on <var>el</var>,\nlet <var>attr value</var> be its value;\notherwise jump to the last step (labeled FAILURE).</p>"
        },
        {
          "html": "<p>If <var>syntax</var> is null,\nreturn a CSS <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#string-value\" id=\"ref-for-string-value⑦\">&lt;string&gt;</a> whose value is <var>attr value</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function⑦\">Substitute arbitrary substitution functions</a> in <var>attr value</var>,\nwith «\"attribute\", <var>attr name</var>» as the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitution-context\" id=\"ref-for-substitution-context②\">substitution context</a>,\nthen <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#parse-with-a-syntax\" id=\"ref-for-parse-with-a-syntax①\">parse with a <syntax></syntax></a> <var>attr value</var>, with <var>syntax</var> and <var>el</var>.\nIf that succeeds, return the result;\notherwise, jump to the last step (labeled FAILURE).</p>"
        },
        {
          "html": "<b>FAILURE:</b>",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>second arg</var> is null,\nand <var>syntax</var> was omitted,\nreturn an empty CSS <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#string-value\" id=\"ref-for-string-value⑧\">&lt;string&gt;</a>.</p>"
            },
            {
              "html": "<p>If <var>second arg</var> is null,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑦\">guaranteed-invalid value</a>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function⑧\">Substitute arbitrary substitution functions</a> in <var>second arg</var>,\nand return the result.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "replace a random-item() function",
      "href": "https://drafts.csswg.org/css-values-5/#replace-a-random-item-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"replace-a-random-item-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#replace-an-arbitrary-substitution-function\" id=\"ref-for-replace-an-arbitrary-substitution-function③\">replace a random-item() function</a></dfn>,\n\t\tgiven a list of <var>arguments</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>value sharing</var> be the first <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-declaration-value\" id=\"ref-for-typedef-declaration-value③①\">&lt;declaration-value&gt;</a> in <var>arguments</var>,\nand <var>options</var> be a list of the remaining <span class=\"production\" id=\"ref-for-typedef-declaration-value③②\">&lt;declaration-value&gt;</span>? options.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function⑨\">Substitute arbitrary substitution functions</a> in <var>value sharing</var>,\nthen <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar⑧\">parse</a> it as <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-5/#typedef-random-value-sharing\" id=\"ref-for-typedef-random-value-sharing①③\">&lt;random-value-sharing&gt;</a>.\nIf parsing returns failure,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value⑨\">guaranteed-invalid value</a>;\notherwise set <var>value sharing</var> to the result.</p>"
        },
        {
          "html": "<p>Select one of the <var>options</var>,\nas specified in <a href=\"https://drafts.csswg.org/css-values-5/#random-evaluation\">§ 9.3 Evaluating Random Values</a>,\nusing <var>value sharing</var> as specified in <a href=\"https://drafts.csswg.org/css-values-5/#random-caching\">§ 9.4 Caching Random Values: the &lt;random-value-sharing&gt; value</a>,\nand let <var>chosen option</var> be the result.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function①⓪\">Substitute arbitrary substitution functions</a> in <var>chosen option</var>,\nthen return the result.</p>"
        }
      ]
    },
    {
      "name": "calc-size()/canonicalize for interpolation",
      "href": "https://drafts.csswg.org/css-values-5/#calc-size-canonicalize-for-interpolation",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"calc-size()\" data-dfn-type=\"dfn\" data-export=\"\" id=\"calc-size-canonicalize-for-interpolation\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">canonicalize for interpolation</dfn> a <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#funcdef-calc-size\" id=\"ref-for-funcdef-calc-size⑨\">calc-size()</a> function: \n    <dl class=\"switch\">\n     <dt data-md=\"\">If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis②\">calc-size basis</a> is a <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#funcdef-calc-size\" id=\"ref-for-funcdef-calc-size①⓪\">calc-size()</a> function itself\n     </dt><dd data-md=\"\">\n      <p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis③\">calc-size basis</a> of the outer function\nis replaced with that of the inner function,\nand the inner function’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-calculation\" id=\"ref-for-calc-size-calculation②\">calc-size calculation</a> is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation\">substituted</a> into the outer function’s <span id=\"ref-for-calc-size-calculation③\">calc-size calculation</span>.</p>\n     </dd><dt data-md=\"\">Otherwise, if the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis④\">calc-size basis</a> is a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#typedef-calc-sum\" id=\"ref-for-typedef-calc-sum②③\">&lt;calc-sum&gt;</a> whose <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-typed-om-1/#cssnumericvalue-type\" id=\"ref-for-cssnumericvalue-type①\">type</a> <a data-link-type=\"dfn\" href=\"https://drafts.css-houdini.org/css-typed-om-1/#cssnumericvalue-match\" id=\"ref-for-cssnumericvalue-match①\">matches</a> <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#length-value\" id=\"ref-for-length-value①④\">&lt;length&gt;</a> (no percentage present)\n     </dt><dd data-md=\"\">\n      <p>Replace the basis with <span class=\"css\">any</span>,\nand the original basis is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation①\">substituted</a> into the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-calculation\" id=\"ref-for-calc-size-calculation④\">calc-size calculation</a>.</p>\n     </dd><dt data-md=\"\">Otherwise, if the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis⑤\">calc-size basis</a> is any other <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-values-4/#typedef-calc-sum\" id=\"ref-for-typedef-calc-sum②④\">&lt;calc-sum&gt;</a> (contains a percentage)\n     </dt><dd data-md=\"\">\n      <p>Replace the basis with <span class=\"css\">100%</span> and the original basis is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#de-percentify-a-calc-size-calculation\" id=\"ref-for-de-percentify-a-calc-size-calculation\">de-percentified</a>,\nthen <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation②\">substituted</a> into the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-calculation\" id=\"ref-for-calc-size-calculation⑤\">calc-size calculation</a>.</p>\n    </dd></dl>\n    <p>(The above is performed recursively, if necessary.)</p>\n    <p>If any <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation③\">substitute into a calc-size calculation</a> returns failure,\n\t\tthe entire operation immediately returns failure.</p>",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If the calc-size basis is a calc-size() function itself",
              "html": "<p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis③\">calc-size basis</a> of the outer function\nis replaced with that of the inner function,\nand the inner function’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-calculation\" id=\"ref-for-calc-size-calculation②\">calc-size calculation</a> is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation\">substituted</a> into the outer function’s <span id=\"ref-for-calc-size-calculation③\">calc-size calculation</span>.</p>"
            },
            {
              "case": "Otherwise, if the calc-size basis is a <calc-sum> whose type matches <length> (no percentage present)",
              "html": "<p>Replace the basis with <span class=\"css\">any</span>,\nand the original basis is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation①\">substituted</a> into the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-calculation\" id=\"ref-for-calc-size-calculation④\">calc-size calculation</a>.</p>"
            },
            {
              "case": "Otherwise, if the calc-size basis is any other <calc-sum> (contains a percentage)",
              "html": "<p>Replace the basis with <span class=\"css\">100%</span> and the original basis is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#de-percentify-a-calc-size-calculation\" id=\"ref-for-de-percentify-a-calc-size-calculation\">de-percentified</a>,\nthen <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation\" id=\"ref-for-substitute-into-a-calc-size-calculation②\">substituted</a> into the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-calculation\" id=\"ref-for-calc-size-calculation⑤\">calc-size calculation</a>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "de-percentify a calc-size calculation",
      "href": "https://drafts.csswg.org/css-values-5/#de-percentify-a-calc-size-calculation",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"de-percentify-a-calc-size-calculation\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">de-percentify a calc-size calculation</dfn> <var>calc</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Replace every instance of a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-percentage-token\" id=\"ref-for-typedef-percentage-token\">&lt;percentage-token&gt;</a> in <var>calc</var> with <span class=\"css\">(size * N)</span>,\nwhere N is the percentage’s value divided by 100.\nReturn <var>calc</var>.</p>"
        }
      ]
    },
    {
      "name": "substitute into a calc-size calculation",
      "href": "https://drafts.csswg.org/css-values-5/#substitute-into-a-calc-size-calculation",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"substitute-into-a-calc-size-calculation\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">substitute into a calc-size calculation</dfn> <var>calc</var> a value <var>insertion value</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>calc</var> doesn’t have the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#valdef-calc-size-size\" id=\"ref-for-valdef-calc-size-size\">size</a> keyword in it,\ndo nothing.</p>"
        },
        {
          "html": "<p>Otherwise, replace every instance of the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#valdef-calc-size-size\" id=\"ref-for-valdef-calc-size-size①\">size</a> keyword\nin <var>calc</var> with <var>insertion value</var>,\nwrapped in parentheses.</p>"
        },
        {
          "html": "<p>If this substitution would produce a value\nlarger than an UA-defined limit,\nreturn failure.</p>"
        }
      ]
    },
    {
      "html": "Two <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#funcdef-calc-size\" id=\"ref-for-funcdef-calc-size②⓪\">calc-size()</a> functions can be interpolated if\n\t(after being <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-canonicalize-for-interpolation\" id=\"ref-for-calc-size-canonicalize-for-interpolation\">canonicalized for interpolation</a>):",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Either function returned failure from being canonicalized for interpolation",
              "html": "<p>The values cannot be interpolated.</p>"
            },
            {
              "case": "Both calc-size basises are identical",
              "html": "<p>The result’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis①④\">calc-size basis</a> is the that basis value.</p>"
            },
            {
              "case": "Either calc-size basis is any",
              "html": "<p>The result’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#calc-size-basis\" id=\"ref-for-calc-size-basis①⑥\">calc-size basis</a> is the non-<a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-values-5/#valdef-calc-size-any\" id=\"ref-for-valdef-calc-size-any③\">any</a> basis.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "substitute arbitrary substitution function",
      "href": "https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-local-lt=\"substitute|substitution\" data-lt=\"substitute arbitrary substitution function|arbitrary substitution\" id=\"substitute-arbitrary-substitution-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">substitute arbitrary substitution functions</dfn> in a sequence of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value⑤\">component values</a> <var>values</var>,\n\t\t\tgiven an optional <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitution-context\" id=\"ref-for-substitution-context④\">substitution context</a> <var>context</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#guarded\" id=\"ref-for-guarded①\">Guard</a> <var>context</var> for the remainder of this algorithm.\nIf <var>context</var> is marked as a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#cyclic-substitution-contexts\" id=\"ref-for-cyclic-substitution-contexts①\">cyclic substitution context</a>,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①⓪\">guaranteed-invalid value</a>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①\">For each</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#arbitrary-substitution-function\" id=\"ref-for-arbitrary-substitution-function⑨\">arbitrary substitution function</a> <var>func</var> in <var>values</var> (ordered via a depth-first pre-order traversal)\nthat is not nested in the contents of another <span id=\"ref-for-arbitrary-substitution-function①⓪\">arbitrary substitution function</span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-early-invoked-functions\" id=\"ref-for-substitute-early-invoked-functions\">Substitute early-invoked functions</a> in <var>func</var>’s contents,\nand let <var>early result</var> be the result.</p>"
            },
            {
              "html": "<p>If <var>early result</var> contains the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①①\">guaranteed-invalid value</a>,\nreplace <var>func</var> in <var>values</var> with the <span id=\"ref-for-guaranteed-invalid-value①②\">guaranteed-invalid value</span> and <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue②\">continue</a>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar①⓪\">Parse</a> <var>early result</var> according to <var>func</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#argument-grammar\" id=\"ref-for-argument-grammar⑤\">argument grammar</a>.\nIf this returns failure,\nreplace <var>func</var> in values with the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①③\">guaranteed-invalid value</a> and <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue③\">continue</a>;\notherwise,\nlet <var>arguments</var> be the result.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#replace-an-arbitrary-substitution-function\" id=\"ref-for-replace-an-arbitrary-substitution-function⑤\">Replace an arbitrary substitution function</a> for <var>func</var>,\ngiven <var>arguments</var>,\nas defined by that function.\nLet <var>result</var> be the returned list of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value⑥\">component values</a>.</p>"
            },
            {
              "html": "<p>If <var>result</var> contains the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①④\">guaranteed-invalid value</a>,\nreplace <var>func</var> in <var>values</var> with the <span id=\"ref-for-guaranteed-invalid-value①⑤\">guaranteed-invalid value</span>.\nOtherwise, replace <var>func</var> in <var>values</var> with <var>result</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>If <var>context</var> is marked as a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#cyclic-substitution-contexts\" id=\"ref-for-cyclic-substitution-contexts②\">cyclic substitution context</a>,\nreturn the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①⑥\">guaranteed-invalid value</a>. </p>"
        },
        {
          "html": "<p>Return <var>values</var>.</p>"
        }
      ]
    },
    {
      "name": "substitute early-invoked functions",
      "href": "https://drafts.csswg.org/css-values-5/#substitute-early-invoked-functions",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"substitute-early-invoked-functions\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">substitute early-invoked functions</dfn> in a sequence of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value⑦\">component values</a> <var>values</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②\">For each</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#arbitrary-substitution-function\" id=\"ref-for-arbitrary-substitution-function②⑤\">arbitrary substitution function</a> <var>func</var> in <var>values</var> (ordered via a depth-first pre-order traversal)\nusing the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#spread-syntax\" id=\"ref-for-spread-syntax③\">spread syntax</a> that is not nested in the contents of another <span id=\"ref-for-arbitrary-substitution-function②⑥\">arbitrary substitution function</span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-early-invoked-functions\" id=\"ref-for-substitute-early-invoked-functions①\">Substitute early-invoked functions</a> in <var>func</var>’s contents,\nand let <var>early result</var> be the result.</p>"
            },
            {
              "html": "<p>If <var>early result</var> contains the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value①⑧\">guaranteed-invalid value</a>,\nreplace <var>func</var> in <var>values</var> with the <span id=\"ref-for-guaranteed-invalid-value①⑨\">guaranteed-invalid value</span> and <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue④\">continue</a>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar①②\">Parse</a> <var>early result</var> acccording to <var>func</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#argument-grammar\" id=\"ref-for-argument-grammar①②\">argument grammar</a>.\nIf this returns failure,\nreplace <var>func</var> in values with the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②⓪\">guaranteed-invalid value</a> and <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue⑤\">continue</a>;\notherwise,\nlet <var>arguments</var> be the result.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#replace-an-arbitrary-substitution-function\" id=\"ref-for-replace-an-arbitrary-substitution-function⑧\">Replace an arbitrary substitution function</a> for <var>func</var>,\ngiven <var>arguments</var>,\nas defined by that function.\nLet <var>result</var> be the returned list of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value⑧\">component values</a>.</p>"
            },
            {
              "html": "<p>If <var>result</var> contains the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②①\">guaranteed-invalid value</a>,\nreplace <var>func</var> in <var>values</var> with the <span id=\"ref-for-guaranteed-invalid-value②②\">guaranteed-invalid value</span>.\nOtherwise, replace <var>func</var> in <var>values</var> with <var>result</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>values</var>.</p>"
        }
      ]
    },
    {
      "name": "property replacement",
      "href": "https://drafts.csswg.org/css-values-5/#property-replacement",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"property replacement|replace substitution functions|replace substitution functions in a property\" id=\"property-replacement\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace substitution functions in a property</dfn> <var>prop</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitute-arbitrary-substitution-function\" id=\"ref-for-substitute-arbitrary-substitution-function②⑥\">Substitute arbitrary substitution functions</a> in <var>prop</var>’s value,\ngiven «\"property\", <var>prop</var>’s name» as the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#substitution-context\" id=\"ref-for-substitution-context①⑦\">substitution context</a>.\nLet <var>result</var> be the returned <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#component-value\" id=\"ref-for-component-value⑨\">component value</a> sequence.</p>"
        },
        {
          "html": "<p>If <var>result</var> contains the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②③\">guaranteed-invalid value</a>, <var>prop</var> is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#invalid-at-computed-value-time\" id=\"ref-for-invalid-at-computed-value-time①①\">invalid at computed-value time</a>;\nreturn.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar①③\">Parse</a> <var>result</var> according to <var>prop</var>’s grammar.\nIf this returns failure, <var>prop</var> is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#invalid-at-computed-value-time\" id=\"ref-for-invalid-at-computed-value-time①②\">invalid at computed-value time</a>;\nreturn.</p>"
        },
        {
          "html": "<p>Otherwise, replace <var>prop</var>’s value with the parsed result.</p>"
        }
      ]
    },
    {
      "name": "invalid at computed-value time",
      "href": "https://drafts.csswg.org/css-values-5/#invalid-at-computed-value-time",
      "html": "When <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-values-5/#property-replacement\" id=\"ref-for-property-replacement⑤\">property replacement</a> results in a property’s value\n\tcontaining the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②④\">guaranteed-invalid value</a>,\n\tthis makes the declaration <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"invalid-at-computed-value-time\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">invalid at computed-value time</dfn>.\n\tWhen this happens,\n\tthe computed value is one of the following\n\tdepending on the property’s type:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "The property is a non-registered custom property",
              "html": "<p>The computed value is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②⑤\">guaranteed-invalid value</a>.</p>"
            },
            {
              "case": "The property is a registered custom property with universal syntax",
              "html": "<p>The computed value is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value②⑤\">guaranteed-invalid value</a>.</p>"
            },
            {
              "case": "Otherwise",
              "html": "<p>Either the property’s inherited value\nor its initial value\ndepending on whether the property is inherited or not, respectively,\nas if the property’s value had been specified as the <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-cascade-5/#valdef-all-unset\" id=\"ref-for-valdef-all-unset①\">unset</a> keyword.</p>"
            }
          ]
        }
      ]
    }
  ]
}