{
  "spec": {
    "title": "DOM Standard",
    "url": "https://dom.spec.whatwg.org/"
  },
  "algorithms": [
    {
      "name": "ordered set parser",
      "href": "https://dom.spec.whatwg.org/#concept-ordered-set-parser",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-ordered-set-parser\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ordered set parser</dfn> takes a string\n<var>input</var> and then runs these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>inputTokens</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#split-on-ascii-whitespace\" id=\"ref-for-split-on-ascii-whitespace\">splitting <var>input</var> on ASCII whitespace</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>tokens</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-set\" id=\"ref-for-ordered-set①\">ordered set</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate\">For each</a> <var>token</var> of <var>inputTokens</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append\">append</a>\n <var>token</var> to <var>tokens</var>.\n\n </p>"
        },
        {
          "html": "Return <var>tokens</var>."
        }
      ]
    },
    {
      "name": "scope-match a selectors string",
      "href": "https://dom.spec.whatwg.org/#scope-match-a-selectors-string",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"scope-match-a-selectors-string\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">scope-match a selectors string</dfn> <var>selectors</var> against a\n<var>node</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#parse-a-selector\" id=\"ref-for-parse-a-selector\">parse a selector</a> <var>selectors</var>.\n <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-selectors4\" title=\"Selectors Level 4\">[SELECTORS4]</a>\n\n </p>"
        },
        {
          "html": "<p>If <var>s</var> is failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror\">SyntaxError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#match-a-selector-against-a-tree\" id=\"ref-for-match-a-selector-against-a-tree\">match a selector against a tree</a> with <var>s</var> and\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②\">root</a> using <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#scoping-root\" id=\"ref-for-scoping-root\">scoping root</a> <var>node</var>. <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-selectors4\" title=\"Selectors Level 4\">[SELECTORS4]</a>.\n</p>"
        }
      ]
    },
    {
      "name": "valid element local name",
      "href": "https://dom.spec.whatwg.org/#valid-element-local-name",
      "html": "A <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string②\">string</a> <var>name</var> is a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"valid-element-local-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">valid element local name</dfn> if the following steps return true:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>name</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length②\">length</a> is 0, then return false.\n\n </p>"
        },
        {
          "html": "If <var>name</var>’s 0th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point\">code point</a> is an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-alpha\" id=\"ref-for-ascii-alpha\">ASCII alpha</a>, then:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>name</var> contains <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace②\">ASCII whitespace</a>, U+0000 NULL, U+002F (/), or U+003E (&gt;), then\n   return false.\n\n   </p>"
            },
            {
              "html": "<p>Return true.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>If <var>name</var>’s 0th <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point①\">code point</a> is not U+003A (:), U+005F (_), or in the range U+0080\n to U+10FFFF, inclusive, then return false.\n\n </p>"
        },
        {
          "html": "<p>If <var>name</var>’s subsequent <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-point\" id=\"ref-for-code-point②\">code points</a>, if any, are not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-alpha\" id=\"ref-for-ascii-alpha①\">ASCII alphas</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-digit\" id=\"ref-for-ascii-digit\">ASCII digits</a>,\n U+002D (-), U+002E (.), U+003A (:), U+005F (_), or in the range U+0080 to U+10FFFF, inclusive, then\n return false.\n\n </p>"
        },
        {
          "html": "<p>Return true.\n</p>"
        }
      ]
    },
    {
      "name": "validate and extract",
      "href": "https://dom.spec.whatwg.org/#validate-and-extract",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"validate-and-extract\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">validate and extract</dfn> a <var>namespace</var> and <var>qualifiedName</var>, given a\n<var>context</var>:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>namespace</var> is the empty string, then set it to null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>prefix</var> be null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>localName</var> be <var>qualifiedName</var>.\n\n </p>"
        },
        {
          "html": "If <var>qualifiedName</var> contains a U+003A (:):",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>splitResult</var> be the result of running <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#strictly-split\" id=\"ref-for-strictly-split\">strictly split</a> given\n   <var>qualifiedName</var> and U+003A (:).\n\n   </p>"
            },
            {
              "html": "<p>Set <var>prefix</var> to <var>splitResult</var>[0].\n\n   </p>"
            },
            {
              "html": "<p>Set <var>localName</var> to <var>splitResult</var>[1].\n\n   </p>"
            },
            {
              "html": "<p>If <var>prefix</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-namespace-prefix\" id=\"ref-for-valid-namespace-prefix\">valid namespace prefix</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①\">throw</a> an\n   \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert\">Assert</a>: <var>prefix</var> is either null or a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-namespace-prefix\" id=\"ref-for-valid-namespace-prefix①\">valid namespace prefix</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>context</var> is \"<code>attribute</code>\" and <var>localName</var> is not a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-attribute-local-name\" id=\"ref-for-valid-attribute-local-name\">valid attribute local name</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror①\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>context</var> is \"<code>element</code>\" and <var>localName</var> is not a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-element-local-name\" id=\"ref-for-valid-element-local-name①\">valid element local name</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③\">throw</a> an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror②\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>prefix</var> is non-null and <var>namespace</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#namespaceerror\" id=\"ref-for-namespaceerror\">NamespaceError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>prefix</var> is \"<code>xml</code>\" and <var>namespace</var> is not the\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xml-namespace\" id=\"ref-for-xml-namespace\">XML namespace</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#namespaceerror\" id=\"ref-for-namespaceerror①\">NamespaceError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If either <var>qualifiedName</var> or <var>prefix</var> is \"<code>xmlns</code>\" and\n <var>namespace</var> is not the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xmlns-namespace\" id=\"ref-for-xmlns-namespace\">XMLNS namespace</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#namespaceerror\" id=\"ref-for-namespaceerror②\">NamespaceError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>namespace</var> is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xmlns-namespace\" id=\"ref-for-xmlns-namespace①\">XMLNS namespace</a> and neither <var>qualifiedName</var>\n nor <var>prefix</var> is \"<code>xmlns</code>\", then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#namespaceerror\" id=\"ref-for-namespaceerror③\">NamespaceError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return (<var>namespace</var>, <var>prefix</var>, <var>localName</var>).\n</p>"
        }
      ]
    },
    {
      "name": "Event/composedPath()",
      "href": "https://dom.spec.whatwg.org/#dom-event-composedpath",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Event\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-event-composedpath\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>composedPath()</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>composedPath</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list③\">list</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>path</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path③\">path</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>path</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty\">is empty</a>, then return <var>composedPath</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>currentTarget</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③\">this</a>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-currenttarget\" id=\"ref-for-dom-event-currenttarget④\">currentTarget</a></code> attribute value.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert①\">Assert</a>: <var>currentTarget</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventtarget\" id=\"ref-for-eventtarget⑦\">EventTarget</a></code> object.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append\">Append</a> <var>currentTarget</var> to <var>composedPath</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>currentTargetIndex</var> be 0.\n\n </p>"
        },
        {
          "html": "<p>Let <var>currentTargetHiddenSubtreeLevel</var> be 0.\n\n </p>"
        },
        {
          "html": "<p>Let <var>index</var> be <var>path</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size\">size</a> − 1.\n\n </p>"
        },
        {
          "html": "While <var>index</var> is greater than or equal to 0:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-root-of-closed-tree\" id=\"ref-for-event-path-root-of-closed-tree\">root-of-closed-tree</a> is true,\n   then increase <var>currentTargetHiddenSubtreeLevel</var> by 1.\n\n   </p>"
            },
            {
              "html": "<p>If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target\" id=\"ref-for-event-path-invocation-target①\">invocation target</a> is\n   <var>currentTarget</var>, then set <var>currentTargetIndex</var> to <var>index</var> and\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break\">break</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-slot-in-closed-tree\" id=\"ref-for-event-path-slot-in-closed-tree\">slot-in-closed-tree</a> is true,\n   then decrease <var>currentTargetHiddenSubtreeLevel</var> by 1.\n\n   </p>"
            },
            {
              "html": "<p>Decrease <var>index</var> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>currentHiddenLevel</var> and <var>maxHiddenLevel</var> be\n <var>currentTargetHiddenSubtreeLevel</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>index</var> to <var>currentTargetIndex</var> − 1.\n\n </p>"
        },
        {
          "html": "While <var>index</var> is greater than or equal to 0:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-root-of-closed-tree\" id=\"ref-for-event-path-root-of-closed-tree①\">root-of-closed-tree</a> is true,\n   then increase <var>currentHiddenLevel</var> by 1.\n\n   </p>"
            },
            {
              "html": "<p>If <var>currentHiddenLevel</var> is less than or equal to <var>maxHiddenLevel</var>, then\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-prepend\" id=\"ref-for-list-prepend\">prepend</a> <var>path</var>[<var>index</var>]'s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target\" id=\"ref-for-event-path-invocation-target②\">invocation target</a> to <var>composedPath</var>.\n\n   </p>"
            },
            {
              "html": "If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-slot-in-closed-tree\" id=\"ref-for-event-path-slot-in-closed-tree①\">slot-in-closed-tree</a> is true:",
              "rationale": "decrease",
              "steps": [
                {
                  "html": "<p>Decrease <var>currentHiddenLevel</var> by 1.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>currentHiddenLevel</var> is less than <var>maxHiddenLevel</var>, then set\n     <var>maxHiddenLevel</var> to <var>currentHiddenLevel</var>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Decrease <var>index</var> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Set <var>currentHiddenLevel</var> and <var>maxHiddenLevel</var> to\n <var>currentTargetHiddenSubtreeLevel</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>index</var> to <var>currentTargetIndex</var> + 1.\n\n </p>"
        },
        {
          "html": "While <var>index</var> is less than <var>path</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size①\">size</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-slot-in-closed-tree\" id=\"ref-for-event-path-slot-in-closed-tree②\">slot-in-closed-tree</a> is true,\n   then increase <var>currentHiddenLevel</var> by 1.\n\n   </p>"
            },
            {
              "html": "<p>If <var>currentHiddenLevel</var> is less than or equal to <var>maxHiddenLevel</var>, then\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①\">append</a> <var>path</var>[<var>index</var>]'s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target\" id=\"ref-for-event-path-invocation-target③\">invocation target</a> to <var>composedPath</var>.\n\n   </p>"
            },
            {
              "html": "If <var>path</var>[<var>index</var>]'s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-root-of-closed-tree\" id=\"ref-for-event-path-root-of-closed-tree②\">root-of-closed-tree</a> is true:",
              "rationale": "decrease",
              "steps": [
                {
                  "html": "<p>Decrease <var>currentHiddenLevel</var> by 1.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>currentHiddenLevel</var> is less than <var>maxHiddenLevel</var>, then set\n     <var>maxHiddenLevel</var> to <var>currentHiddenLevel</var>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Increase <var>index</var> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>composedPath</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Event/initialize",
      "href": "https://dom.spec.whatwg.org/#concept-event-initialize",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Event\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-event-initialize\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">initialize</dfn> an <var>event</var>, with\n<var>type</var>, <var>bubbles</var>, and <var>cancelable</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#initialized-flag\" id=\"ref-for-initialized-flag\">initialized flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Unset <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#stop-propagation-flag\" id=\"ref-for-stop-propagation-flag④\">stop propagation flag</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#stop-immediate-propagation-flag\" id=\"ref-for-stop-immediate-propagation-flag①\">stop immediate propagation flag</a>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#canceled-flag\" id=\"ref-for-canceled-flag③\">canceled flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-istrusted\" id=\"ref-for-dom-event-istrusted④\">isTrusted</a></code> attribute to false.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-target\" id=\"ref-for-event-target⑧\">target</a> to null.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type⑤\">type</a></code> attribute to <var>type</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-bubbles\" id=\"ref-for-dom-event-bubbles④\">bubbles</a></code> attribute to <var>bubbles</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-cancelable\" id=\"ref-for-dom-event-cancelable⑤\">cancelable</a></code> attribute to <var>cancelable</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Event/initEvent(type, bubbles, cancelable)",
      "href": "https://dom.spec.whatwg.org/#dom-event-initevent",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Event\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"initEvent(type, bubbles, cancelable)|initEvent(type, bubbles)|initEvent(type)\" id=\"dom-event-initevent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>initEvent(<var>type</var>, <var>bubbles</var>, <var>cancelable</var>)</code></dfn>\nmethod steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag\">dispatch flag</a> is set, then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-initialize\" id=\"ref-for-concept-event-initialize\">Initialize</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤\">this</a> with <var>type</var>, <var>bubbles</var>, and\n <var>cancelable</var>.\n</p>"
        }
      ]
    },
    {
      "name": "CustomEvent/initCustomEvent(type, bubbles, cancelable, detail)",
      "href": "https://dom.spec.whatwg.org/#dom-customevent-initcustomevent",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CustomEvent\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"initCustomEvent(type, bubbles, cancelable, detail)|initCustomEvent(type, bubbles, cancelable)|initCustomEvent(type, bubbles)|initCustomEvent(type)\" id=\"dom-customevent-initcustomevent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>initCustomEvent(<var>type</var>, <var>bubbles</var>, <var>cancelable</var>, <var>detail</var>)</code></dfn>\nmethod steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑦\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag①\">dispatch flag</a> is set, then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-initialize\" id=\"ref-for-concept-event-initialize①\">Initialize</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧\">this</a> with <var>type</var>, <var>bubbles</var>, and\n <var>cancelable</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨\">this</a>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-customevent-detail\" id=\"ref-for-dom-customevent-detail③\">detail</a></code> attribute to <var>detail</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Event/constructor",
      "href": "https://dom.spec.whatwg.org/#concept-event-constructor",
      "html": "When a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Event\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-event-constructor\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">constructor</dfn> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event⑨\">Event</a></code>\ninterface, or of an interface that inherits from the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event①⓪\">Event</a></code> interface, is invoked, these steps\nmust be run, given the arguments <var>type</var> and <var>eventInitDict</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>event</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#inner-event-creation-steps\" id=\"ref-for-inner-event-creation-steps①\">inner event creation steps</a> with\n this interface, null, now, and <var>eventInitDict</var>.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type⑥\">type</a></code> attribute to <var>type</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>event</var>.\n</p>"
        }
      ]
    },
    {
      "name": "creating an event",
      "href": "https://dom.spec.whatwg.org/#concept-event-create",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"creating an event|create an event\" id=\"concept-event-create\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create an event</dfn>\nusing <var>eventInterface</var>, which must be either <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event①①\">Event</a></code> or an interface that inherits from\nit, and optionally given a <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#realm\" id=\"ref-for-realm\">realm</a> <var>realm</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>realm</var> is not given, then set it to null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>dictionary</var> be the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-convert-ecmascript-to-idl-value\" id=\"ref-for-dfn-convert-ecmascript-to-idl-value\">converting</a>\n  the JavaScript value undefined to the dictionary type accepted by <var>eventInterface</var>’s\n  constructor. (This dictionary type will either be <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dictdef-eventinit\" id=\"ref-for-dictdef-eventinit③\">EventInit</a></code> or a dictionary that inherits from\n  it.)\n\n  </p>\n      <p class=\"XXX\">This does not work if members are required; see\n  <a href=\"https://github.com/whatwg/dom/issues/600\">whatwg/dom#600</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>event</var> be the result of running the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#inner-event-creation-steps\" id=\"ref-for-inner-event-creation-steps②\">inner event creation steps</a> with\n  <var>eventInterface</var>, <var>realm</var>, the time of the occurrence that the event is\n  signaling, and <var>dictionary</var>.\n\n  </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-istrusted\" id=\"ref-for-dom-event-istrusted⑤\">isTrusted</a></code> attribute to true.\n\n </p>"
        },
        {
          "html": "<p>Return <var>event</var>.\n</p>"
        }
      ]
    },
    {
      "name": "inner event creation steps",
      "href": "https://dom.spec.whatwg.org/#inner-event-creation-steps",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"inner-event-creation-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">inner event creation steps</dfn>, given an <var>eventInterface</var>,\n<var>realm</var>, <var>time</var>, and <var>dictionary</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>event</var> be the result of creating a new object using <var>eventInterface</var>. If\n  <var>realm</var> is non-null, then use that realm; otherwise, use the default behavior defined in\n  Web IDL.\n\n  </p>\n      <p class=\"XXX\">As of the time of this writing Web IDL does not yet define any default behavior;\n  see <a href=\"https://github.com/whatwg/webidl/issues/135\">whatwg/webidl#135</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#initialized-flag\" id=\"ref-for-initialized-flag①\">initialized flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-timestamp\" id=\"ref-for-dom-event-timestamp②\">timeStamp</a></code> attribute to the\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/hr-time/#dfn-relative-high-resolution-coarse-time\" id=\"ref-for-dfn-relative-high-resolution-coarse-time\">relative high resolution coarse time</a> given <var>time</var> and <var>event</var>’s\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global\">relevant global object</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate\">For each</a> <var>member</var> → <var>value</var> of <var>dictionary</var>, if\n <var>event</var> has an attribute whose <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-identifier\" id=\"ref-for-dfn-identifier\">identifier</a> is <var>member</var>, then\n initialize that attribute to <var>value</var>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-constructor-ext\" id=\"ref-for-concept-event-constructor-ext\">event constructing steps</a> with <var>event</var> and <var>dictionary</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>event</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Event/flatten",
      "href": "https://dom.spec.whatwg.org/#concept-flatten-options",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Event\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-flatten-options\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">flatten</dfn> <var>options</var>, run these\nsteps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>options</var> is a boolean, then return <var>options</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-eventlisteneroptions-capture\" id=\"ref-for-dom-eventlisteneroptions-capture②\">capture</a></code>\"].\n</p>"
        }
      ]
    },
    {
      "name": "Event/flatten more",
      "href": "https://dom.spec.whatwg.org/#event-flatten-more",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Event\" data-dfn-type=\"dfn\" data-export=\"\" id=\"event-flatten-more\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">flatten more</dfn> <var>options</var>, run these\nsteps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>capture</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-flatten-options\" id=\"ref-for-concept-flatten-options\">flattening</a> <var>options</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>once</var> be false.\n\n </p>"
        },
        {
          "html": "<p>Let <var>passive</var> and <var>signal</var> be null.\n\n </p>"
        },
        {
          "html": "If <var>options</var> is a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-dictionary\" id=\"ref-for-dfn-dictionary\">dictionary</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>once</var> to <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-addeventlisteneroptions-once\" id=\"ref-for-dom-addeventlisteneroptions-once①\">once</a></code>\"].\n\n   </p>"
            },
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-addeventlisteneroptions-passive\" id=\"ref-for-dom-addeventlisteneroptions-passive②\">passive</a></code>\"] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists\">exists</a>, then set <var>passive</var> to\n   <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-addeventlisteneroptions-passive\" id=\"ref-for-dom-addeventlisteneroptions-passive③\">passive</a></code>\"].\n\n   </p>"
            },
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-addeventlisteneroptions-signal\" id=\"ref-for-dom-addeventlisteneroptions-signal①\">signal</a></code>\"] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">exists</a>, then set <var>signal</var> to\n   <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-addeventlisteneroptions-signal\" id=\"ref-for-dom-addeventlisteneroptions-signal②\">signal</a></code>\"].\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>capture</var>, <var>passive</var>, <var>once</var>, and <var>signal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "default passive value",
      "href": "https://dom.spec.whatwg.org/#default-passive-value",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"default-passive-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">default passive value</dfn>, given an event type <var>type</var> and an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventtarget\" id=\"ref-for-eventtarget①⑨\">EventTarget</a></code>\n<var>eventTarget</var>, is determined as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Return true if all of the following are true:\n\n  </p>\n      <ul>\n       <li>\n        <p><var>type</var> is one of \"<code>touchstart</code>\", \"<code>touchmove</code>\",\n   \"<code>wheel</code>\", or \"<code>mousewheel</code>\". <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-touch-events\" title=\"Touch Events\">[TOUCH-EVENTS]</a> <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n\n   </p>\n       </li><li>\n        <p><var>eventTarget</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window③\">Window</a></code> object, or is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③\">node</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document\">node document</a>\n   is <var>eventTarget</var>, or is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node④\">node</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①\">node document</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-element\" id=\"ref-for-document-element\">document element</a>\n   is <var>eventTarget</var>, or is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤\">node</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②\">node document</a>’s\n   <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/dom.html#the-body-element-2\" id=\"ref-for-the-body-element-2\">body element</a> is <var>eventTarget</var>. <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n  </p>\n      </li></ul>"
        },
        {
          "html": "<p>Return false.\n</p>"
        }
      ]
    },
    {
      "name": "add an event listener",
      "href": "https://dom.spec.whatwg.org/#add-an-event-listener",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"add-an-event-listener\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">add an event listener</dfn>, given an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventtarget\" id=\"ref-for-eventtarget②⓪\">EventTarget</a></code> object\n<var>eventTarget</var> and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener①⑥\">event listener</a> <var>listener</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>eventTarget</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/ServiceWorker/#serviceworkerglobalscope\" id=\"ref-for-serviceworkerglobalscope\">ServiceWorkerGlobalScope</a></code> object, its\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/ServiceWorker/#serviceworkerglobalscope-service-worker\" id=\"ref-for-serviceworkerglobalscope-service-worker\">service worker</a>’s\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/ServiceWorker/#dfn-script-resource\" id=\"ref-for-dfn-script-resource\">script resource</a>’s\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/ServiceWorker/#dfn-has-ever-been-evaluated-flag\" id=\"ref-for-dfn-has-ever-been-evaluated-flag\">has ever been evaluated flag</a> is set, and <var>listener</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type①\">type</a> matches the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type⑨\">type</a></code> attribute value of any of the\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/ServiceWorker/#dfn-service-worker-events\" id=\"ref-for-dfn-service-worker-events\">service worker events</a>, then <a data-link-type=\"dfn\" href=\"https://console.spec.whatwg.org/#report-a-warning-to-the-console\" id=\"ref-for-report-a-warning-to-the-console\">report a warning to the console</a> that this might not give\n the expected results. <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-service-workers\" title=\"Service Workers\">[SERVICE-WORKERS]</a>\n\n </p>"
        },
        {
          "html": "<p>If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-signal\" id=\"ref-for-event-listener-signal\">signal</a> is not null and is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted\">aborted</a>, then return.\n\n </p>"
        },
        {
          "html": "<p>If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①⓪\">callback</a> is null, then return.\n\n </p>"
        },
        {
          "html": "<p>If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-passive\" id=\"ref-for-event-listener-passive\">passive</a> is null, then set it to the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#default-passive-value\" id=\"ref-for-default-passive-value\">default passive value</a> given <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type②\">type</a> and\n <var>eventTarget</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>eventTarget</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list②\">event listener list</a> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain\">contain</a> an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener①⑦\">event listener</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type③\">type</a> is <var>listener</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type④\">type</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①①\">callback</a> is <var>listener</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①②\">callback</a>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture③\">capture</a> is\n <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture④\">capture</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append②\">append</a>\n <var>listener</var> to <var>eventTarget</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list③\">event listener list</a>.\n\n </p>"
        },
        {
          "html": "If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-signal\" id=\"ref-for-event-listener-signal①\">signal</a> is not null, then\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-add\" id=\"ref-for-abortsignal-add\">add the following</a> abort steps to it:",
          "rationale": "remove",
          "steps": [
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#remove-an-event-listener\" id=\"ref-for-remove-an-event-listener\">Remove an event listener</a> with <var>eventTarget</var> and <var>listener</var>."
            }
          ]
        }
      ]
    },
    {
      "name": "EventTarget/addEventListener(type, callback, options)",
      "href": "https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"EventTarget\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"addEventListener(type, callback, options)|addEventListener(type, callback)\" id=\"dom-eventtarget-addeventlistener\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>addEventListener(<var>type</var>, <var>callback</var>, <var>options</var>)</code></dfn>\nmethod steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>capture</var>, <var>passive</var>, <var>once</var>, and <var>signal</var> be the\n result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-flatten-more\" id=\"ref-for-event-flatten-more\">flattening more</a> <var>options</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#add-an-event-listener\" id=\"ref-for-add-an-event-listener①\">Add an event listener</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪\">this</a> and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener①⑧\">event listener</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type⑤\">type</a> is <var>type</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①③\">callback</a> is\n <var>callback</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture⑤\">capture</a> is <var>capture</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-passive\" id=\"ref-for-event-listener-passive①\">passive</a> is <var>passive</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-once\" id=\"ref-for-event-listener-once\">once</a> is\n <var>once</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-signal\" id=\"ref-for-event-listener-signal②\">signal</a> is <var>signal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "remove an event listener",
      "href": "https://dom.spec.whatwg.org/#remove-an-event-listener",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"remove-an-event-listener\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove an event listener</dfn>, given an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventtarget\" id=\"ref-for-eventtarget②①\">EventTarget</a></code> object\n<var>eventTarget</var> and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener①⑨\">event listener</a> <var>listener</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>eventTarget</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/ServiceWorker/#serviceworkerglobalscope\" id=\"ref-for-serviceworkerglobalscope①\">ServiceWorkerGlobalScope</a></code> object and its\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/ServiceWorker/#serviceworkerglobalscope-service-worker\" id=\"ref-for-serviceworkerglobalscope-service-worker①\">service worker</a>’s\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/ServiceWorker/#dfn-set-of-event-types-to-handle\" id=\"ref-for-dfn-set-of-event-types-to-handle\">set of event types to handle</a> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain①\">contains</a>\n <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type⑥\">type</a>, then <a data-link-type=\"dfn\" href=\"https://console.spec.whatwg.org/#report-a-warning-to-the-console\" id=\"ref-for-report-a-warning-to-the-console①\">report a warning to the console</a>\n that this might not give the expected results. <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-service-workers\" title=\"Service Workers\">[SERVICE-WORKERS]</a>\n\n </p>"
        },
        {
          "html": "<p>Set <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-removed\" id=\"ref-for-event-listener-removed\">removed</a> to true and\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove\">remove</a> <var>listener</var> from <var>eventTarget</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list④\">event listener list</a>.\n</p>"
        }
      ]
    },
    {
      "name": "remove all event listeners",
      "href": "https://dom.spec.whatwg.org/#remove-all-event-listeners",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"remove-all-event-listeners\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove all event listeners</dfn>, given an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventtarget\" id=\"ref-for-eventtarget②②\">EventTarget</a></code> object\n<var>eventTarget</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①\">for each</a> <var>listener</var> of <var>eventTarget</var>’s\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list⑤\">event listener list</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#remove-an-event-listener\" id=\"ref-for-remove-an-event-listener①\">remove an event listener</a> with\n<var>eventTarget</var> and <var>listener</var>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "EventTarget/removeEventListener(type, callback, options)",
      "href": "https://dom.spec.whatwg.org/#dom-eventtarget-removeeventlistener",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"EventTarget\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"removeEventListener(type, callback, options)|removeEventListener(type, callback)\" id=\"dom-eventtarget-removeeventlistener\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>removeEventListener(<var>type</var>, <var>callback</var>, <var>options</var>)</code></dfn>\nmethod steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>capture</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-flatten-options\" id=\"ref-for-concept-flatten-options①\">flattening</a> <var>options</var>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list⑥\">event listener list</a> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain②\">contains</a> an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener②⓪\">event listener</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type⑦\">type</a> is <var>type</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①④\">callback</a> is <var>callback</var>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture⑥\">capture</a> is <var>capture</var>, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#remove-an-event-listener\" id=\"ref-for-remove-an-event-listener②\">remove an event listener</a>\n with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②②\">this</a> and that <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener\" id=\"ref-for-concept-event-listener②①\">event listener</a>.\n</p>"
        }
      ]
    },
    {
      "name": "EventTarget/dispatchEvent(event)",
      "href": "https://dom.spec.whatwg.org/#dom-eventtarget-dispatchevent",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"EventTarget\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-eventtarget-dispatchevent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>dispatchEvent(<var>event</var>)</code></dfn> method steps\nare:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag②\">dispatch flag</a> is set, or if its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#initialized-flag\" id=\"ref-for-initialized-flag②\">initialized flag</a> is not\n set, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-istrusted\" id=\"ref-for-dom-event-istrusted⑥\">isTrusted</a></code> attribute to false.\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-dispatch\" id=\"ref-for-concept-event-dispatch②④\">dispatching</a> <var>event</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②③\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "legacy-obtain service worker fetch event listener callbacks",
      "href": "https://dom.spec.whatwg.org/#legacy-obtain-service-worker-fetch-event-listener-callbacks",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"legacy-obtain-service-worker-fetch-event-listener-callbacks\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">legacy-obtain service worker fetch event listener callbacks</dfn> given a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/ServiceWorker/#serviceworkerglobalscope\" id=\"ref-for-serviceworkerglobalscope②\">ServiceWorkerGlobalScope</a></code> <var>global</var>, run these steps. They return a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑤\">list</a> of\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#callbackdef-eventlistener\" id=\"ref-for-callbackdef-eventlistener④\">EventListener</a></code> objects.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>callbacks</var> be « ».\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②\">For each</a> <var>listener</var> of <var>global</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list⑦\">event listener list</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type⑧\">type</a> is \"<code>fetch</code>\", and\n  <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①⑥\">callback</a> is not null, then\n  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append③\">append</a> <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①⑦\">callback</a> to\n  <var>callbacks</var>.\n </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>callbacks</var>.\n</p>"
        }
      ]
    },
    {
      "name": "dispatch",
      "href": "https://dom.spec.whatwg.org/#concept-event-dispatch",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-event-dispatch\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">dispatch</dfn> an <var>event</var> to a\n<var>target</var>, with an optional <var>legacy target override flag</var> and an optional\n<var>legacyOutputDidListenersThrowFlag</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag③\">dispatch flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>targetOverride</var> be <var>target</var>, if <var>legacy target override flag</var>\n  is not given, and <var>target</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window\">associated <code>Document</code></a> otherwise.\n  <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n\n  </p>"
        },
        {
          "html": "<p>Let <var>activationTarget</var> be null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>relatedTarget</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#retarget\" id=\"ref-for-retarget\">retargeting</a> <var>event</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-relatedtarget\" id=\"ref-for-event-relatedtarget①\">relatedTarget</a> against <var>target</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>clearTargets</var> be false.\n\n </p>"
        },
        {
          "html": "If <var>target</var> is not <var>relatedTarget</var> or <var>target</var> is <var>event</var>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-relatedtarget\" id=\"ref-for-event-relatedtarget②\">relatedTarget</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>touchTargets</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑥\">list</a>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate③\">For each</a> <var>touchTarget</var> of <var>event</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-touch-target-list\" id=\"ref-for-event-touch-target-list①\">touch target list</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append④\">append</a> the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#retarget\" id=\"ref-for-retarget①\">retargeting</a>\n   <var>touchTarget</var> against <var>target</var> to <var>touchTargets</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-path-append\" id=\"ref-for-concept-event-path-append\">Append to an event path</a> with <var>event</var>, <var>target</var>,\n   <var>targetOverride</var>, <var>relatedTarget</var>, <var>touchTargets</var>, and false.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>isActivationEvent</var> be true, if <var>event</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#mouseevent\" id=\"ref-for-mouseevent①\">MouseEvent</a></code> object\n   and <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①⓪\">type</a></code> attribute is \"<code>click</code>\"; otherwise false.\n\n   </p>"
            },
            {
              "html": "<p>If <var>isActivationEvent</var> is true and <var>target</var> has\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-activation-behavior\" id=\"ref-for-eventtarget-activation-behavior③\">activation behavior</a>, then set <var>activationTarget</var> to\n   <var>target</var>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>slottable</var> be <var>target</var>, if <var>target</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable\">slottable</a>\n   and is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned\" id=\"ref-for-slotable-assigned\">assigned</a>, and null otherwise.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>slot-in-closed-tree</var> be false.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>parent</var> be the result of invoking <var>target</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#get-the-parent\" id=\"ref-for-get-the-parent③\">get the parent</a>\n   with <var>event</var>.\n\n   </p>"
            },
            {
              "html": "While <var>parent</var> is non-null:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <var>slottable</var> is non-null:",
                  "rationale": "assert",
                  "steps": [
                    {
                      "html": "<p>Assert: <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot\">slot</a>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Set <var>slottable</var> to null.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root②\">shadow root</a> whose\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode①\">mode</a> is \"<code>closed</code>\", then set <var>slot-in-closed-tree</var>\n       to true.\n      </p>"
                    }
                  ]
                },
                {
                  "html": "<p>If <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①\">slottable</a> and is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned\" id=\"ref-for-slotable-assigned①\">assigned</a>, then\n     set <var>slottable</var> to <var>parent</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Let <var>relatedTarget</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#retarget\" id=\"ref-for-retarget②\">retargeting</a> <var>event</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-relatedtarget\" id=\"ref-for-event-relatedtarget③\">relatedTarget</a> against <var>parent</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Let <var>touchTargets</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑦\">list</a>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate④\">For each</a> <var>touchTarget</var> of <var>event</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-touch-target-list\" id=\"ref-for-event-touch-target-list②\">touch target list</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑤\">append</a> the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#retarget\" id=\"ref-for-retarget③\">retargeting</a>\n     <var>touchTarget</var> against <var>parent</var> to <var>touchTargets</var>.\n\n     </p>"
                },
                {
                  "html": "If <var>parent</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑤\">Window</a></code> object, or <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥\">node</a>\n      and <var>target</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root⑤\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\" id=\"ref-for-concept-shadow-including-inclusive-ancestor\">shadow-including inclusive ancestor</a>\n      of <var>parent</var>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <var>isActivationEvent</var> is true, <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-bubbles\" id=\"ref-for-dom-event-bubbles⑤\">bubbles</a></code>\n       attribute is true, <var>activationTarget</var> is null, and <var>parent</var> has\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-activation-behavior\" id=\"ref-for-eventtarget-activation-behavior④\">activation behavior</a>, then set <var>activationTarget</var> to\n       <var>parent</var>.\n\n       </p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-path-append\" id=\"ref-for-concept-event-path-append①\">Append to an event path</a> with <var>event</var>, <var>parent</var>, null,\n       <var>relatedTarget</var>, <var>touchTargets</var>, and <var>slot-in-closed-tree</var>.\n      </p>"
                    }
                  ]
                },
                {
                  "html": "<p>Otherwise, if <var>parent</var> is <var>relatedTarget</var>, then set <var>parent</var>\n     to null.\n\n     </p>"
                },
                {
                  "html": "Otherwise:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>target</var> to <var>parent</var>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>isActivationEvent</var> is true, <var>activationTarget</var> is null, and\n       <var>target</var> has <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-activation-behavior\" id=\"ref-for-eventtarget-activation-behavior⑤\">activation behavior</a>, then set\n       <var>activationTarget</var> to <var>target</var>.\n\n       </p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-path-append\" id=\"ref-for-concept-event-path-append②\">Append to an event path</a> with <var>event</var>, <var>parent</var>,\n       <var>target</var>, <var>relatedTarget</var>, <var>touchTargets</var>, and\n       <var>slot-in-closed-tree</var>.\n      </p>"
                    }
                  ]
                },
                {
                  "html": "<p>If <var>parent</var> is non-null, then set <var>parent</var> to the result of invoking\n     <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#get-the-parent\" id=\"ref-for-get-the-parent④\">get the parent</a> with <var>event</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>slot-in-closed-tree</var> to false.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>clearTargetsStruct</var> be the last struct in <var>event</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path④\">path</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target\">shadow-adjusted target</a> is non-null.\n\n   </p>"
            },
            {
              "html": "<p>If <var>clearTargetsStruct</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target①\">shadow-adjusted target</a>,\n   <var>clearTargetsStruct</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-relatedtarget\" id=\"ref-for-event-path-relatedtarget\">relatedTarget</a>, or an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventtarget\" id=\"ref-for-eventtarget②③\">EventTarget</a></code> object\n   in <var>clearTargetsStruct</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-touch-target-list\" id=\"ref-for-event-path-touch-target-list\">touch target list</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑦\">node</a>\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root⑥\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root③\">shadow root</a>: set <var>clearTargets</var> to true.\n\n   </p>"
            },
            {
              "html": "<p>If <var>activationTarget</var> is non-null and <var>activationTarget</var> has\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-legacy-pre-activation-behavior\" id=\"ref-for-eventtarget-legacy-pre-activation-behavior①\">legacy-pre-activation behavior</a>, then run <var>activationTarget</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-legacy-pre-activation-behavior\" id=\"ref-for-eventtarget-legacy-pre-activation-behavior②\">legacy-pre-activation behavior</a>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑤\">For each</a> <var>struct</var> of <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path⑤\">path</a>, in\n    reverse order:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>struct</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target②\">shadow-adjusted target</a> is non-null, then\n     set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-eventphase\" id=\"ref-for-dom-event-eventphase⑦\">eventPhase</a></code> attribute to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-at_target\" id=\"ref-for-dom-event-at_target④\">AT_TARGET</a></code>.\n\n     </p>"
                },
                {
                  "html": "<p>Otherwise, set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-eventphase\" id=\"ref-for-dom-event-eventphase⑧\">eventPhase</a></code> attribute to\n     <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-capturing_phase\" id=\"ref-for-dom-event-capturing_phase④\">CAPTURING_PHASE</a></code>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener-invoke\" id=\"ref-for-concept-event-listener-invoke\">Invoke</a> with <var>struct</var>, <var>event</var>, \"<code>capturing</code>\", and\n     <var>legacyOutputDidListenersThrowFlag</var> if given.\n    </p>"
                }
              ]
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑥\">For each</a> <var>struct</var> of <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path⑥\">path</a>:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>struct</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target③\">shadow-adjusted target</a> is non-null, then\n     set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-eventphase\" id=\"ref-for-dom-event-eventphase⑨\">eventPhase</a></code> attribute to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-at_target\" id=\"ref-for-dom-event-at_target⑤\">AT_TARGET</a></code>.\n\n     </p>"
                },
                {
                  "html": "Otherwise:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-bubbles\" id=\"ref-for-dom-event-bubbles⑥\">bubbles</a></code> attribute is false, then\n       <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue\">continue</a>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-eventphase\" id=\"ref-for-dom-event-eventphase①⓪\">eventPhase</a></code> attribute to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-bubbling_phase\" id=\"ref-for-dom-event-bubbling_phase④\">BUBBLING_PHASE</a></code>.\n      </p>"
                    }
                  ]
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener-invoke\" id=\"ref-for-concept-event-listener-invoke①\">Invoke</a> with <var>struct</var>, <var>event</var>, \"<code>bubbling</code>\", and\n     <var>legacyOutputDidListenersThrowFlag</var> if given.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-eventphase\" id=\"ref-for-dom-event-eventphase①①\">eventPhase</a></code> attribute to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-none\" id=\"ref-for-dom-event-none③\">NONE</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-currenttarget\" id=\"ref-for-dom-event-currenttarget⑤\">currentTarget</a></code> attribute to null.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path⑦\">path</a> to the empty list.\n\n </p>"
        },
        {
          "html": "<p>Unset <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#dispatch-flag\" id=\"ref-for-dispatch-flag④\">dispatch flag</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#stop-propagation-flag\" id=\"ref-for-stop-propagation-flag⑤\">stop propagation flag</a>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#stop-immediate-propagation-flag\" id=\"ref-for-stop-immediate-propagation-flag②\">stop immediate propagation flag</a>.\n\n </p>"
        },
        {
          "html": "If <var>clearTargets</var> is true:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-target\" id=\"ref-for-event-target⑨\">target</a> to null.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-relatedtarget\" id=\"ref-for-event-relatedtarget④\">relatedTarget</a> to null.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-touch-target-list\" id=\"ref-for-event-touch-target-list③\">touch target list</a> to the empty list.\n  </p>"
            }
          ]
        },
        {
          "html": "If <var>activationTarget</var> is non-null:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#canceled-flag\" id=\"ref-for-canceled-flag④\">canceled flag</a> is unset, then run\n   <var>activationTarget</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-activation-behavior\" id=\"ref-for-eventtarget-activation-behavior⑥\">activation behavior</a> with <var>event</var>.\n\n   </p>"
            },
            {
              "html": "<p>Otherwise, if <var>activationTarget</var> has\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-legacy-canceled-activation-behavior\" id=\"ref-for-eventtarget-legacy-canceled-activation-behavior①\">legacy-canceled-activation behavior</a>, then run\n   <var>activationTarget</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-legacy-canceled-activation-behavior\" id=\"ref-for-eventtarget-legacy-canceled-activation-behavior②\">legacy-canceled-activation behavior</a>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return false if <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#canceled-flag\" id=\"ref-for-canceled-flag⑤\">canceled flag</a> is set; otherwise true.\n</p>"
        }
      ]
    },
    {
      "name": "append to an event path",
      "href": "https://dom.spec.whatwg.org/#concept-event-path-append",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-event-path-append\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">append to an event path</dfn>, given an\n<var>event</var>, <var>invocationTarget</var>, <var>shadowAdjustedTarget</var>,\n<var>relatedTarget</var>, <var>touchTargets</var>, and a <var>slot-in-closed-tree</var>, run these\nsteps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>invocationTargetInShadowTree</var> be false.\n\n </p>"
        },
        {
          "html": "<p>If <var>invocationTarget</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑧\">node</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root⑦\">root</a> is a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root④\">shadow root</a>, then set <var>invocationTargetInShadowTree</var> to true.\n\n </p>"
        },
        {
          "html": "<p>Let <var>root-of-closed-tree</var> be false.\n\n </p>"
        },
        {
          "html": "<p>If <var>invocationTarget</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root⑤\">shadow root</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode②\">mode</a>\n is \"<code>closed</code>\", then set <var>root-of-closed-tree</var> to true.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑥\">Append</a> a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#struct\" id=\"ref-for-struct②\">struct</a> to <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path⑧\">path</a>\n whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target\" id=\"ref-for-event-path-invocation-target④\">invocation target</a> is <var>invocationTarget</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target-in-shadow-tree\" id=\"ref-for-event-path-invocation-target-in-shadow-tree\">invocation-target-in-shadow-tree</a> is <var>invocationTargetInShadowTree</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target④\">shadow-adjusted target</a> is <var>shadowAdjustedTarget</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-relatedtarget\" id=\"ref-for-event-path-relatedtarget①\">relatedTarget</a> is <var>relatedTarget</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-touch-target-list\" id=\"ref-for-event-path-touch-target-list①\">touch target list</a> is <var>touchTargets</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-root-of-closed-tree\" id=\"ref-for-event-path-root-of-closed-tree③\">root-of-closed-tree</a> is <var>root-of-closed-tree</var>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-slot-in-closed-tree\" id=\"ref-for-event-path-slot-in-closed-tree③\">slot-in-closed-tree</a> is <var>slot-in-closed-tree</var>.\n</p>"
        }
      ]
    },
    {
      "name": "invoke",
      "href": "https://dom.spec.whatwg.org/#concept-event-listener-invoke",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-event-listener-invoke\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">invoke</dfn>, given a <var>struct</var>,\n<var>event</var>, <var>phase</var>, and an optional <var>legacyOutputDidListenersThrowFlag</var>,\nrun these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-target\" id=\"ref-for-event-target①⓪\">target</a> to the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target⑤\">shadow-adjusted target</a> of the last struct in <var>event</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path\" id=\"ref-for-event-path⑨\">path</a>, that is either <var>struct</var> or preceding <var>struct</var>, whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-shadow-adjusted-target\" id=\"ref-for-event-path-shadow-adjusted-target⑥\">shadow-adjusted target</a> is non-null.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-relatedtarget\" id=\"ref-for-event-relatedtarget⑤\">relatedTarget</a> to <var>struct</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-relatedtarget\" id=\"ref-for-event-path-relatedtarget②\">relatedTarget</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-touch-target-list\" id=\"ref-for-event-touch-target-list④\">touch target list</a> to <var>struct</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-touch-target-list\" id=\"ref-for-event-path-touch-target-list②\">touch target list</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#stop-propagation-flag\" id=\"ref-for-stop-propagation-flag⑥\">stop propagation flag</a> is set, then return.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-currenttarget\" id=\"ref-for-dom-event-currenttarget⑥\">currentTarget</a></code> attribute to <var>struct</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target\" id=\"ref-for-event-path-invocation-target⑤\">invocation target</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>listeners</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone\">clone</a> of <var>event</var>’s\n  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-currenttarget\" id=\"ref-for-dom-event-currenttarget⑦\">currentTarget</a></code> attribute value’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#eventtarget-event-listener-list\" id=\"ref-for-eventtarget-event-listener-list⑧\">event listener list</a>.\n\n  </p>"
        },
        {
          "html": "<p>Let <var>invocationTargetInShadowTree</var> be <var>struct</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-path-invocation-target-in-shadow-tree\" id=\"ref-for-event-path-invocation-target-in-shadow-tree①\">invocation-target-in-shadow-tree</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>found</var> be the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\" id=\"ref-for-concept-event-listener-inner-invoke\">inner invoke</a> with <var>event</var>,\n <var>listeners</var>, <var>phase</var>, <var>invocationTargetInShadowTree</var>, and\n <var>legacyOutputDidListenersThrowFlag</var> if given.\n\n </p>"
        },
        {
          "html": "If <var>found</var> is false and <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-istrusted\" id=\"ref-for-dom-event-istrusted⑦\">isTrusted</a></code> attribute is true:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>originalEventType</var> be <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①①\">type</a></code> attribute value.\n\n   </p>"
            },
            {
              "html": "<p>If <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①②\">type</a></code> attribute value is a match for any of the strings in the\n    first column in the following table, set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①③\">type</a></code> attribute value to\n    the string in the second column on the same row as the matching string, and return otherwise.\n\n    </p>\n        <table>\n         <thead>\n          <tr>\n           <th>Event type\n           </th><th>Legacy event type\n     \n         </th></tr></thead><tbody>\n          <tr>\n           <td>\"<code>animationend</code>\"\n           </td><td>\"<code>webkitAnimationEnd</code>\"\n      \n          </td></tr><tr>\n           <td>\"<code>animationiteration</code>\"\n           </td><td>\"<code>webkitAnimationIteration</code>\"\n      \n          </td></tr><tr>\n           <td>\"<code>animationstart</code>\"\n           </td><td>\"<code>webkitAnimationStart</code>\"\n      \n          </td></tr><tr>\n           <td>\"<code>transitionend</code>\"\n           </td><td>\"<code>webkitTransitionEnd</code>\"\n    \n        </td></tr></tbody></table>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\" id=\"ref-for-concept-event-listener-inner-invoke①\">Inner invoke</a> with <var>event</var>, <var>listeners</var>, <var>phase</var>,\n   <var>invocationTargetInShadowTree</var>, and <var>legacyOutputDidListenersThrowFlag</var>\n   if given.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①④\">type</a></code> attribute value to <var>originalEventType</var>.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "inner invoke",
      "href": "https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-event-listener-inner-invoke\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">inner invoke</dfn>, given an\n<var>event</var>, <var>listeners</var>, <var>phase</var>, <var>invocationTargetInShadowTree</var>,\nand an optional <var>legacyOutputDidListenersThrowFlag</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>found</var> be false.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑦\">For each</a> <var>listener</var> of <var>listeners</var>, whose\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-removed\" id=\"ref-for-event-listener-removed②\">removed</a> is false:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①⑤\">type</a></code> attribute value is not <var>listener</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-type\" id=\"ref-for-event-listener-type⑨\">type</a>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue①\">continue</a>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>found</var> to true.\n\n   </p>"
            },
            {
              "html": "<p>If <var>phase</var> is \"<code>capturing</code>\" and <var>listener</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture⑦\">capture</a> is false, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue②\">continue</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>phase</var> is \"<code>bubbling</code>\" and <var>listener</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-capture\" id=\"ref-for-event-listener-capture⑧\">capture</a> is true, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue③\">continue</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-once\" id=\"ref-for-event-listener-once①\">once</a> is true, then\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#remove-an-event-listener\" id=\"ref-for-remove-an-event-listener③\">remove an event listener</a> given <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-currenttarget\" id=\"ref-for-dom-event-currenttarget⑧\">currentTarget</a></code> attribute value\n   and <var>listener</var>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>global</var> be <var>listener</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①⑧\">callback</a>’s\n   <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm\">associated realm</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global\">global object</a>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>currentEvent</var> be undefined.\n\n   </p>"
            },
            {
              "html": "If <var>global</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑥\">Window</a></code> object:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>currentEvent</var> to <var>global</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#window-current-event\" id=\"ref-for-window-current-event①\">current event</a>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>invocationTargetInShadowTree</var> is false, then set <var>global</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#window-current-event\" id=\"ref-for-window-current-event②\">current event</a> to <var>event</var>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>If <var>listener</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-passive\" id=\"ref-for-event-listener-passive②\">passive</a> is true, then set\n   <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#in-passive-listener-flag\" id=\"ref-for-in-passive-listener-flag①\">in passive listener flag</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>global</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑦\">Window</a></code> object, then\n   <a data-link-type=\"dfn\" href=\"https://w3c.github.io/long-animation-frames/#record-timing-info-for-event-listener\" id=\"ref-for-record-timing-info-for-event-listener\">record timing info for event listener</a> given <var>event</var> and <var>listener</var>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#call-a-user-objects-operation\" id=\"ref-for-call-a-user-objects-operation\">Call a user object’s operation</a> with <var>listener</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback①⑨\">callback</a>, \"<code>handleEvent</code>\", « <var>event</var> », and\n    <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-currenttarget\" id=\"ref-for-dom-event-currenttarget⑨\">currentTarget</a></code> attribute value. If this throws an exception\n    <var>exception</var>:",
              "rationale": "report",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#report-an-exception\" id=\"ref-for-report-an-exception\">Report</a> <var>exception</var> for <var>listener</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#event-listener-callback\" id=\"ref-for-event-listener-callback②⓪\">callback</a>’s corresponding JavaScript object’s\n     <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm①\">associated realm</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global①\">global object</a>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>legacyOutputDidListenersThrowFlag</var> if given.\n\n      </p>"
                }
              ]
            },
            {
              "html": "<p>Unset <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#in-passive-listener-flag\" id=\"ref-for-in-passive-listener-flag②\">in passive listener flag</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>global</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#window\" id=\"ref-for-window⑧\">Window</a></code> object, then set <var>global</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#window-current-event\" id=\"ref-for-window-current-event③\">current event</a> to <var>currentEvent</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#stop-immediate-propagation-flag\" id=\"ref-for-stop-immediate-propagation-flag③\">stop immediate propagation flag</a> is set, then\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break①\">break</a>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>found</var>.\n</p>"
        }
      ]
    },
    {
      "name": "fire an event",
      "href": "https://dom.spec.whatwg.org/#concept-event-fire",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-event-fire\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">fire an event</dfn> named <var>e</var> at <var>target</var>,\noptionally using an <var>eventConstructor</var>, with a description of how IDL attributes are to be\ninitialized, and a <var>legacy target override flag</var>, run these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>eventConstructor</var> is not given, then let <var>eventConstructor</var> be\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event①⑥\">Event</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>event</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-create\" id=\"ref-for-concept-event-create②\">creating an event</a> given\n <var>eventConstructor</var>, in the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-realm\" id=\"ref-for-concept-relevant-realm\">relevant realm</a> of <var>target</var>.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①⑥\">type</a></code> attribute to <var>e</var>.\n\n </p>"
        },
        {
          "html": "<p>Initialize any other IDL attributes of <var>event</var> as described in the invocation of this\n  algorithm.\n\n  </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-dispatch\" id=\"ref-for-concept-event-dispatch②⑤\">dispatching</a> <var>event</var> at <var>target</var>, with\n <var>legacy target override flag</var> set if set.\n</p>"
        }
      ]
    },
    {
      "name": "AbortController/AbortController()",
      "href": "https://dom.spec.whatwg.org/#dom-abortcontroller-abortcontroller",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"AbortController\" data-dfn-type=\"constructor\" data-export=\"\" data-lt=\"AbortController()|constructor()\" id=\"dom-abortcontroller-abortcontroller\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>new AbortController()</code></dfn>\nconstructor steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>signal</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal①⑤\">AbortSignal</a></code> object.\n\n </p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortcontroller-signal\" id=\"ref-for-abortcontroller-signal\">signal</a> to <var>signal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "AbortController/signal abort",
      "href": "https://dom.spec.whatwg.org/#abortcontroller-signal-abort",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"AbortController\" data-dfn-type=\"dfn\" data-export=\"\" id=\"abortcontroller-signal-abort\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">signal abort</dfn> on an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortcontroller\" id=\"ref-for-abortcontroller⑤\">AbortController</a></code>\n<var>controller</var> with an optional <var>reason</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-signal-abort\" id=\"ref-for-abortsignal-signal-abort\">signal abort</a> on\n<var>controller</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortcontroller-signal\" id=\"ref-for-abortcontroller-signal②\">signal</a> with <var>reason</var> if it is given.",
      "rationale": "To <dfn>"
    },
    {
      "name": "AbortSignal/abort(reason)",
      "href": "https://dom.spec.whatwg.org/#dom-abortsignal-abort",
      "html": "The static <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"AbortSignal\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"abort(reason)|abort()\" id=\"dom-abortsignal-abort\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>abort(<var>reason</var>)</code></dfn> method steps\nare:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>signal</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal③①\">AbortSignal</a></code> object.\n\n </p>"
        },
        {
          "html": "<p>Set <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason⑨\">abort reason</a> to <var>reason</var> if it is given;\n otherwise to a new \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#aborterror\" id=\"ref-for-aborterror②\">AbortError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "Return <var>signal</var>."
        }
      ]
    },
    {
      "name": "AbortSignal/timeout(milliseconds)",
      "href": "https://dom.spec.whatwg.org/#dom-abortsignal-timeout",
      "html": "The static <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"AbortSignal\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-abortsignal-timeout\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>timeout(<var>milliseconds</var>)</code></dfn> method\nsteps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>signal</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal③②\">AbortSignal</a></code> object.\n\n </p>"
        },
        {
          "html": "<p>Let <var>global</var> be <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global①\">relevant global object</a>.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#run-steps-after-a-timeout\" id=\"ref-for-run-steps-after-a-timeout\">Run steps after a timeout</a> given <var>global</var>, \"<code>AbortSignal-timeout</code>\",\n  <var>milliseconds</var>, and the following step:",
          "rationale": "queue",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-global-task\" id=\"ref-for-queue-a-global-task\">Queue a global task</a> on the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-task-source\" id=\"ref-for-timer-task-source\">timer task source</a> given <var>global</var> to\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-signal-abort\" id=\"ref-for-abortsignal-signal-abort①\">signal abort</a> given <var>signal</var> and a new\n   \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#timeouterror\" id=\"ref-for-timeouterror①\">TimeoutError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①③\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>signal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "AbortSignal/add",
      "href": "https://dom.spec.whatwg.org/#abortsignal-add",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"AbortSignal\" data-dfn-type=\"dfn\" data-export=\"\" id=\"abortsignal-add\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">add</dfn> an algorithm <var>algorithm</var> to an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal④⓪\">AbortSignal</a></code>\nobject <var>signal</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>signal</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted⑥\">aborted</a>, then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①\">Append</a> <var>algorithm</var> to <var>signal</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-algorithms\" id=\"ref-for-abortsignal-abort-algorithms①\">abort algorithms</a>.\n</p>"
        }
      ]
    },
    {
      "name": "AbortSignal/remove",
      "href": "https://dom.spec.whatwg.org/#abortsignal-remove",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"AbortSignal\" data-dfn-type=\"dfn\" data-export=\"\" id=\"abortsignal-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove</dfn> an algorithm <var>algorithm</var> from an\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal④①\">AbortSignal</a></code> <var>signal</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove①\">remove</a> <var>algorithm</var> from\n<var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-algorithms\" id=\"ref-for-abortsignal-abort-algorithms②\">abort algorithms</a>.",
      "rationale": "To <dfn>"
    },
    {
      "name": "AbortSignal/signal abort",
      "href": "https://dom.spec.whatwg.org/#abortsignal-signal-abort",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"AbortSignal\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"abortsignal-signal-abort\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">signal abort</dfn>, given an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal④②\">AbortSignal</a></code> object <var>signal</var> and\nan optional <var>reason</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>signal</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted⑦\">aborted</a>, then return.\n\n </p>"
        },
        {
          "html": "<p>Set <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason①③\">abort reason</a> to <var>reason</var> if it is given;\n otherwise to a new \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#aborterror\" id=\"ref-for-aborterror③\">AbortError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①④\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>dependentSignalsToAbort</var> be a new <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑧\">list</a>.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑧\">For each</a> <var>dependentSignal</var> of <var>signal</var>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-dependent-signals\" id=\"ref-for-abortsignal-dependent-signals\">dependent signals</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>dependentSignal</var> is not <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted⑧\">aborted</a>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>dependentSignal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason①④\">abort reason</a> to <var>signal</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason①⑤\">abort reason</a>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑦\">Append</a> <var>dependentSignal</var> to\n     <var>dependentSignalsToAbort</var>.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#run-the-abort-steps\" id=\"ref-for-run-the-abort-steps\">Run the abort steps</a> for <var>signal</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate⑨\">For each</a> <var>dependentSignal</var> of <var>dependentSignalsToAbort</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#run-the-abort-steps\" id=\"ref-for-run-the-abort-steps①\">run the abort steps</a> for <var>dependentSignal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "run the abort steps",
      "href": "https://dom.spec.whatwg.org/#run-the-abort-steps",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"run-the-abort-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">run the abort steps</dfn> for an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal④③\">AbortSignal</a></code> <var>signal</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⓪\">For each</a> <var>algorithm</var> of <var>signal</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-algorithms\" id=\"ref-for-abortsignal-abort-algorithms③\">abort algorithms</a>: run <var>algorithm</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty\">Empty</a> <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-algorithms\" id=\"ref-for-abortsignal-abort-algorithms④\">abort algorithms</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire⑤\">Fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#eventdef-abortsignal-abort\" id=\"ref-for-eventdef-abortsignal-abort①\">abort</a></code> at <var>signal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "create a dependent abort signal",
      "href": "https://dom.spec.whatwg.org/#create-a-dependent-abort-signal",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"create-a-dependent-abort-signal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a dependent abort signal</dfn> from a list of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal④④\">AbortSignal</a></code> objects\n<var>signals</var>, using <var>signalInterface</var>, which must be either <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#abortsignal\" id=\"ref-for-abortsignal④⑤\">AbortSignal</a></code> or an\ninterface that inherits from it, and a <var>realm</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>resultSignal</var> be a <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#new\" id=\"ref-for-new\">new</a> object implementing\n <var>signalInterface</var> using <var>realm</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①①\">For each</a> <var>signal</var> of <var>signals</var>: if <var>signal</var> is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted⑨\">aborted</a>, then set <var>resultSignal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason①⑥\">abort reason</a> to\n <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-abort-reason\" id=\"ref-for-abortsignal-abort-reason①⑦\">abort reason</a> and return <var>resultSignal</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>resultSignal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-dependent\" id=\"ref-for-abortsignal-dependent\">dependent</a> to true.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①②\">For each</a> <var>signal</var> of <var>signals</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>signal</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-dependent\" id=\"ref-for-abortsignal-dependent①\">dependent</a> is false:",
              "rationale": "append",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append②\">Append</a> <var>signal</var> to <var>resultSignal</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-source-signals\" id=\"ref-for-abortsignal-source-signals\">source signals</a>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append③\">Append</a> <var>resultSignal</var> to <var>signal</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-dependent-signals\" id=\"ref-for-abortsignal-dependent-signals①\">dependent signals</a>.\n    </p>"
                }
              ]
            },
            {
              "html": "Otherwise, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①③\">for each</a> <var>sourceSignal</var> of <var>signal</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-source-signals\" id=\"ref-for-abortsignal-source-signals①\">source signals</a>:",
              "rationale": "assert",
              "steps": [
                {
                  "html": "<p>Assert: <var>sourceSignal</var> is not <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-aborted\" id=\"ref-for-abortsignal-aborted①⓪\">aborted</a> and not\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-dependent\" id=\"ref-for-abortsignal-dependent②\">dependent</a>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append④\">Append</a> <var>sourceSignal</var> to <var>resultSignal</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-source-signals\" id=\"ref-for-abortsignal-source-signals②\">source signals</a>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑤\">Append</a> <var>resultSignal</var> to <var>sourceSignal</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#abortsignal-dependent-signals\" id=\"ref-for-abortsignal-dependent-signals②\">dependent signals</a>.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>resultSignal</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Node/length",
      "href": "https://dom.spec.whatwg.org/#concept-node-length",
      "html": "To determine the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-length\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">length</dfn> of a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②\">node</a>\n<var>node</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documenttype\" id=\"ref-for-documenttype④\">DocumentType</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#attr\" id=\"ref-for-attr④\">Attr</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②③\">node</a>, then return 0.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata④\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②④\">node</a>, then return <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data\">data</a>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length③\">length</a>.\n\n </p>"
        },
        {
          "html": "<p>Return the number of <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①①\">children</a>.\n</p>"
        }
      ]
    },
    {
      "html": "Use these <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext\">attribute change steps</a> to update a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot③\">slot</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-name\" id=\"ref-for-slot-name\">name</a>:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>element</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot④\">slot</a>, <var>localName</var> is <code>name</code>, and\n  <var>namespace</var> is null:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>value</var> is <var>oldValue</var>, then return.\n\n   </p>"
            },
            {
              "html": "<p>If <var>value</var> is null and <var>oldValue</var> is the empty string, then return.\n\n   </p>"
            },
            {
              "html": "<p>If <var>value</var> is the empty string and <var>oldValue</var> is null, then return.\n\n   </p>"
            },
            {
              "html": "<p>If <var>value</var> is null or the empty string, then set <var>element</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-name\" id=\"ref-for-slot-name①\">name</a> to the empty string.\n\n   </p>"
            },
            {
              "html": "<p>Otherwise, set <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-name\" id=\"ref-for-slot-name②\">name</a> to <var>value</var>.\n\n   </p>"
            },
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree\">assign slottables for a tree</a> with <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①①\">root</a>.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "html": "Use these <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext①\">attribute change steps</a> to update a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable⑤\">slottable</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-name\" id=\"ref-for-slotable-name\">name</a>:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>localName</var> is <code>slot</code> and <var>namespace</var> is null:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>value</var> is <var>oldValue</var>, then return.\n\n   </p>"
            },
            {
              "html": "<p>If <var>value</var> is null and <var>oldValue</var> is the empty string, then return.\n\n   </p>"
            },
            {
              "html": "<p>If <var>value</var> is the empty string and <var>oldValue</var> is null, then return.\n\n   </p>"
            },
            {
              "html": "<p>If <var>value</var> is null or the empty string, then set <var>element</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-name\" id=\"ref-for-slotable-name①\">name</a> to the empty string.\n\n   </p>"
            },
            {
              "html": "<p>Otherwise, set <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-name\" id=\"ref-for-slotable-name②\">name</a> to <var>value</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>element</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned\" id=\"ref-for-slotable-assigned②\">assigned</a>, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables\" id=\"ref-for-assign-slotables\">assign slottables</a>\n   for <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned-slot\" id=\"ref-for-slotable-assigned-slot\">assigned slot</a>.\n\n   </p>"
            },
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-a-slot\" id=\"ref-for-assign-a-slot\">assign a slot</a> for <var>element</var>.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "find a slot",
      "href": "https://dom.spec.whatwg.org/#find-a-slot",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"find-a-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">find a slot</dfn> for a given <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①⓪\">slottable</a> <var>slottable</var> and an optional\nboolean <var>open</var> (default false):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>slottable</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑦\">parent</a> is null, then return null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>shadow</var> be <var>slottable</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑧\">parent</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root\">shadow root</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>shadow</var> is null, then return null.\n\n </p>"
        },
        {
          "html": "<p>If <var>open</var> is true and <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode③\">mode</a> is not\n \"<code>open</code>\", then return null.\n\n </p>"
        },
        {
          "html": "<p>If <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-slot-assignment\" id=\"ref-for-shadowroot-slot-assignment\">slot assignment</a> is \"<code>manual</code>\", then\n return the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①①\">slot</a> in <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant③\">descendants</a> whose\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/scripting.html#manually-assigned-nodes\" id=\"ref-for-manually-assigned-nodes\">manually assigned nodes</a> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain③\">contains</a> <var>slottable</var>, if any; otherwise\n null.\n\n </p>"
        },
        {
          "html": "<p>Return the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①②\">slot</a> in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order⑦\">tree order</a> in <var>shadow</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant④\">descendants</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-name\" id=\"ref-for-slot-name④\">name</a> is <var>slottable</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-name\" id=\"ref-for-slotable-name③\">name</a>, if any; otherwise null.\n</p>"
        }
      ]
    },
    {
      "name": "find slottables",
      "href": "https://dom.spec.whatwg.org/#find-slotables",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"find-slotables\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">find slottables</dfn> for a given <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①③\">slot</a>\n<var>slot</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be « ».\n\n </p>"
        },
        {
          "html": "<p>Let <var>root</var> be <var>slot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①②\">root</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>root</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root⑨\">shadow root</a>, then return <var>result</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>host</var> be <var>root</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host②\">host</a>.\n\n </p>"
        },
        {
          "html": "If <var>root</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-slot-assignment\" id=\"ref-for-shadowroot-slot-assignment①\">slot assignment</a> is \"<code>manual</code>\":",
          "rationale": "for",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①④\">For each</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①①\">slottable</a> <var>slottable</var> of <var>slot</var>’s\n   <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/scripting.html#manually-assigned-nodes\" id=\"ref-for-manually-assigned-nodes①\">manually assigned nodes</a>, if <var>slottable</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑨\">parent</a> is\n   <var>host</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑧\">append</a> <var>slottable</var> to <var>result</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "Otherwise, for each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①②\">slottable</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①②\">child</a> <var>slottable</var> of\n  <var>host</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order⑧\">tree order</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>foundSlot</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#find-a-slot\" id=\"ref-for-find-a-slot\">finding a slot</a> given\n   <var>slottable</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>foundSlot</var> is <var>slot</var>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append⑨\">append</a>\n   <var>slottable</var> to <var>result</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "find flattened slottables",
      "href": "https://dom.spec.whatwg.org/#find-flattened-slotables",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"find-flattened-slotables\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">find flattened slottables</dfn> for a given\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①④\">slot</a> <var>slot</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be « ».\n\n </p>"
        },
        {
          "html": "<p>If <var>slot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①③\">root</a> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①⓪\">shadow root</a>, then return\n <var>result</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>slottables</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#find-slotables\" id=\"ref-for-find-slotables\">finding slottables</a> given\n <var>slot</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>slottables</var> is the empty list, then append each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①③\">slottable</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①③\">child</a> of <var>slot</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order⑨\">tree order</a>, to <var>slottables</var>.\n\n </p>"
        },
        {
          "html": "For each <var>node</var> of <var>slottables</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①⑤\">slot</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①④\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①①\">shadow root</a>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>temporaryResult</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#find-flattened-slotables\" id=\"ref-for-find-flattened-slotables\">finding flattened slottables</a> given\n     <var>node</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Append each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①④\">slottable</a> in <var>temporaryResult</var>, in order, to\n     <var>result</var>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Otherwise, append <var>node</var> to <var>result</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "assign slottables",
      "href": "https://dom.spec.whatwg.org/#assign-slotables",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"assign-slotables\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">assign slottables</dfn> for a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①⑥\">slot</a> <var>slot</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>slottables</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#find-slotables\" id=\"ref-for-find-slotables①\">finding slottables</a> for <var>slot</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>slottables</var> and <var>slot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-assigned-nodes\" id=\"ref-for-slot-assigned-nodes\">assigned nodes</a> are not\n identical, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-a-slot-change\" id=\"ref-for-signal-a-slot-change\">signal a slot change</a> for <var>slot</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>slot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-assigned-nodes\" id=\"ref-for-slot-assigned-nodes①\">assigned nodes</a> to <var>slottables</var>.\n\n </p>"
        },
        {
          "html": "<p>For each <var>slottable</var> of <var>slottables</var>, set <var>slottable</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned-slot\" id=\"ref-for-slotable-assigned-slot②\">assigned slot</a> to <var>slot</var>.\n</p>"
        }
      ]
    },
    {
      "name": "assign a slot",
      "href": "https://dom.spec.whatwg.org/#assign-a-slot",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"assign-a-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">assign a slot</dfn>, given a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①⑤\">slottable</a> <var>slottable</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>slot</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#find-a-slot\" id=\"ref-for-find-a-slot①\">finding a slot</a> with <var>slottable</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>slot</var> is non-null, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables\" id=\"ref-for-assign-slotables②\">assign slottables</a> for <var>slot</var>.\n</p>"
        }
      ]
    },
    {
      "name": "signal a slot change",
      "href": "https://dom.spec.whatwg.org/#signal-a-slot-change",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"signal-a-slot-change\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">signal a slot change</dfn>, for a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot①⑨\">slot</a> <var>slot</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑥\">Append</a> <var>slot</var> to <var>slot</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#relevant-agent\" id=\"ref-for-relevant-agent\">relevant agent</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-slot-list\" id=\"ref-for-signal-slot-list\">signal slots</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-mutation-observer-compound-microtask\" id=\"ref-for-queue-a-mutation-observer-compound-microtask\">Queue a mutation observer microtask</a>.\n</p>"
        }
      ]
    },
    {
      "name": "ensure pre-insert validity",
      "href": "https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-node-ensure-pre-insertion-validity\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">ensure pre-insert validity</dfn> of a\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③①\">node</a> <var>node</var> into a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③②\">node</a> <var>parent</var> before a\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③③\">node</a> <var>child</var>:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>parent</var> is not a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document③\">Document</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment④\">DocumentFragment</a></code>, or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#element\" id=\"ref-for-element①②\">Element</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③④\">node</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑤\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-host-including-inclusive-ancestor\" id=\"ref-for-concept-tree-host-including-inclusive-ancestor\">host-including inclusive ancestor</a> of <var>parent</var>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror①\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>child</var> is non-null and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①⓪\">parent</a> is not <var>parent</var>,\n then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①①\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror\">NotFoundError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is not a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment⑤\">DocumentFragment</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documenttype\" id=\"ref-for-documenttype⑤\">DocumentType</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#element\" id=\"ref-for-element①③\">Element</a></code>, or\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata⑤\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③⑤\">node</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①②\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror②\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑧\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If either <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑧\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③⑥\">node</a> and <var>parent</var> is a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑧\">document</a>, or <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype①\">doctype</a> and <var>parent</var> is not a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑨\">document</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①③\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror③\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⑨\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①⓪\">document</a>, and any of the statements below, switched on\n  the interface <var>node</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements③\">implements</a>, are true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①④\">throw</a> a\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror④\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⓪\">DOMException</a></code>.",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "DocumentFragment",
                  "html": "<p>If <var>node</var> has more than one <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑧\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①④\">child</a> or has a\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑨\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node③⑦\">node</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①⑤\">child</a>.\n\n    </p>\n       <p>Otherwise, if <var>node</var> has one <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①⑥\">child</a> and either\n    <var>parent</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⓪\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①⑦\">child</a>, <var>child</var> is a\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype②\">doctype</a>, or <var>child</var> is non-null and a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype③\">doctype</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following②\">following</a>\n    <var>child</var>.\n\n   </p>"
                },
                {
                  "case": "Element",
                  "html": "<p><var>parent</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①①\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①⑧\">child</a>, <var>child</var> is\n   a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype④\">doctype</a>, or <var>child</var> is non-null and a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype⑤\">doctype</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following③\">following</a>\n   <var>child</var>.\n\n   </p>"
                },
                {
                  "case": "DocumentType",
                  "html": "<p><var>parent</var> has a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype⑥\">doctype</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child①⑨\">child</a>, <var>child</var> is non-null\n   and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①②\">element</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-preceding\" id=\"ref-for-concept-tree-preceding③\">preceding</a> <var>child</var>, or <var>child</var> is null\n   and <var>parent</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①③\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②⓪\">child</a>.\n  </p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "pre-insert",
      "href": "https://dom.spec.whatwg.org/#concept-node-pre-insert",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-pre-insert\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">pre-insert</dfn> a <var>node</var> into a\n<var>parent</var> before a <var>child</var>, run these steps:",
      "rationale": "ensure",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\" id=\"ref-for-concept-node-ensure-pre-insertion-validity\">Ensure pre-insert validity</a> of <var>node</var> into <var>parent</var> before\n <var>child</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>referenceChild</var> be <var>child</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>referenceChild</var> is <var>node</var>, then set <var>referenceChild</var> to\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-insert\" id=\"ref-for-concept-node-insert\">Insert</a> <var>node</var> into <var>parent</var> before <var>referenceChild</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>node</var>.\n</p>"
        }
      ]
    },
    {
      "name": "insert",
      "href": "https://dom.spec.whatwg.org/#concept-node-insert",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-insert\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">insert</dfn> a <var>node</var> into a <var>parent</var>\nbefore a <var>child</var>, with an optional <i>suppress observers flag</i>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>nodes</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②①\">children</a>, if <var>node</var> is a\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment⑦\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node④③\">node</a>; otherwise « <var>node</var> ».\n\n </p>"
        },
        {
          "html": "<p>Let <var>count</var> be <var>nodes</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size②\">size</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>count</var> is 0, then return.\n\n </p>"
        },
        {
          "html": "If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment⑧\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node④④\">node</a>:",
          "rationale": "remove",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove①\">Remove</a> its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②②\">children</a> with the <i>suppress observers flag</i>\n   set.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record\">Queue a tree mutation record</a> for <var>node</var> with « », <var>nodes</var>, null, and\n    null.\n\n    </p>"
            }
          ]
        },
        {
          "html": "If <var>child</var> is non-null:",
          "rationale": "for",
          "steps": [
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node\">start node</a> is <var>parent</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset\">start offset</a> is greater than <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index\">index</a>, increase\n   its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①\">start offset</a> by <var>count</var>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node\">end node</a> is <var>parent</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset\">end offset</a> is greater than <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①\">index</a>, increase\n   its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①\">end offset</a> by <var>count</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>previousSibling</var> be <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling\">previous sibling</a> or\n <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-last-child\" id=\"ref-for-concept-tree-last-child\">last child</a> if <var>child</var> is null.\n\n </p>"
        },
        {
          "html": "For each <var>node</var> in <var>nodes</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order①①\">tree order</a>:",
          "rationale": "adopt",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-adopt\" id=\"ref-for-concept-node-adopt\">Adopt</a> <var>node</var> into <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③\">node document</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>child</var> is null, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑦\">append</a> <var>node</var> to\n   <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②③\">children</a>.\n\n   </p>"
            },
            {
              "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-insert\" id=\"ref-for-list-insert\">insert</a> <var>node</var> into <var>parent</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②④\">children</a> before <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index②\">index</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-shadow-host\" id=\"ref-for-element-shadow-host\">shadow host</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①②\">shadow root</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-slot-assignment\" id=\"ref-for-shadowroot-slot-assignment②\">slot assignment</a> is \"<code>named</code>\" and <var>node</var> is a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①⑥\">slottable</a>, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-a-slot\" id=\"ref-for-assign-a-slot①\">assign a slot</a> for <var>node</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①⑤\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①③\">shadow root</a>, and\n   <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot②⓪\">slot</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-assigned-nodes\" id=\"ref-for-slot-assigned-nodes②\">assigned nodes</a> is the empty list,\n   then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-a-slot-change\" id=\"ref-for-signal-a-slot-change①\">signal a slot change</a> for <var>parent</var>.\n\n   </p>"
            },
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree①\">assign slottables for a tree</a> with <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①⑥\">root</a>.\n\n   </p>"
            },
            {
              "html": "For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-descendant\" id=\"ref-for-concept-shadow-including-inclusive-descendant\">shadow-including inclusive descendant</a> <var>inclusiveDescendant</var> of\n    <var>node</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-tree-order\" id=\"ref-for-concept-shadow-including-tree-order\">shadow-including tree order</a>:",
              "rationale": "run",
              "steps": [
                {
                  "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-insert-ext\" id=\"ref-for-concept-node-insert-ext③\">insertion steps</a> with <var>inclusiveDescendant</var>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>inclusiveDescendant</var> is not <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#connected\" id=\"ref-for-connected\">connected</a>, then\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue④\">continue</a>.\n\n     </p>"
                },
                {
                  "html": "If <var>inclusiveDescendant</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①④\">element</a>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry\">custom element registry</a> is\n       null, then set <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry①\">custom element registry</a> to\n       the result of <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-registry\" id=\"ref-for-look-up-a-custom-element-registry\">looking up a custom element registry</a> given\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①①\">parent</a>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Otherwise, if <var>inclusiveDescendant</var>’s\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry②\">custom element registry</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#is-scoped\" id=\"ref-for-is-scoped\">is scoped</a> is\n       true, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑧\">append</a> <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④\">node document</a> to\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry③\">custom element registry</a>’s\n       <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#scoped-document-set\" id=\"ref-for-scoped-document-set\">scoped document set</a>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>inclusiveDescendant</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom\" id=\"ref-for-concept-element-custom\">custom</a>, then\n       <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\" id=\"ref-for-enqueue-a-custom-element-callback-reaction\">enqueue a custom element callback reaction</a> with <var>inclusiveDescendant</var>,\n       callback name \"<code>connectedCallback</code>\", and « ».\n\n       </p>"
                    },
                    {
                      "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-try-upgrade\" id=\"ref-for-concept-try-upgrade\">try to upgrade</a>\n        <var>inclusiveDescendant</var>.\n\n        </p>"
                    }
                  ]
                },
                {
                  "html": "Otherwise, if <var>inclusiveDescendant</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①④\">shadow root</a>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry\">custom element registry</a> is\n       null and <var>inclusiveDescendant</var>’s\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-keep-custom-element-registry-null\" id=\"ref-for-shadowroot-keep-custom-element-registry-null\">keep custom element registry null</a> is false, then set\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry①\">custom element registry</a> to the result\n       of <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-registry\" id=\"ref-for-look-up-a-custom-element-registry①\">looking up a custom element registry</a> given <var>inclusiveDescendant</var>’s\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host③\">host</a>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Otherwise, if <var>inclusiveDescendant</var>’s\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry②\">custom element registry</a> is non-null and\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry③\">custom element registry</a>’s\n       <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#is-scoped\" id=\"ref-for-is-scoped①\">is scoped</a> is true, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append⑨\">append</a>\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤\">node document</a> to\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry④\">custom element registry</a>’s\n       <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#scoped-document-set\" id=\"ref-for-scoped-document-set①\">scoped document set</a>.\n      </p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>If <i>suppress observers flag</i> is unset, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record①\">queue a tree mutation record</a> for\n <var>parent</var> with <var>nodes</var>, « », <var>previousSibling</var>, and <var>child</var>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-children-changed-ext\" id=\"ref-for-concept-node-children-changed-ext\">children changed steps</a> for <var>parent</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>staticNodeList</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list⑨\">list</a> of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node④⑤\">nodes</a>, initially « ».</p>"
        },
        {
          "html": "For each <var>node</var> of <var>nodes</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order①②\">tree order</a>:",
          "rationale": "for",
          "steps": [
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-descendant\" id=\"ref-for-concept-shadow-including-inclusive-descendant①\">shadow-including inclusive descendant</a> <var>inclusiveDescendant</var> of\n   <var>node</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-tree-order\" id=\"ref-for-concept-shadow-including-tree-order①\">shadow-including tree order</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①⓪\">append</a>\n   <var>inclusiveDescendant</var> to <var>staticNodeList</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑤\">For each</a> <var>node</var> of <var>staticNodeList</var>, if <var>node</var> is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#connected\" id=\"ref-for-connected①\">connected</a>, then run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-post-connection-ext\" id=\"ref-for-concept-node-post-connection-ext⑥\">post-connection steps</a> with <var>node</var>.\n</p>"
        }
      ]
    },
    {
      "name": "move",
      "href": "https://dom.spec.whatwg.org/#move",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"move\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">move</dfn> a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤⓪\">node</a> <var>node</var> into a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤①\">node</a>\n<var>newParent</var> before a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤②\">node</a>-or-null <var>child</var>:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>newParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-root\" id=\"ref-for-concept-shadow-including-root①\">shadow-including root</a> is not the same as\n  <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-root\" id=\"ref-for-concept-shadow-including-root②\">shadow-including root</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑤\">throw</a> a\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror⑤\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-host-including-inclusive-ancestor\" id=\"ref-for-concept-tree-host-including-inclusive-ancestor①\">host-including inclusive ancestor</a> of <var>newParent</var>,\n then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑥\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror⑥\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②②\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>child</var> is non-null and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①②\">parent</a> is not <var>newParent</var>,\n then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑦\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror①\">NotFoundError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is not an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#element\" id=\"ref-for-element①⑤\">Element</a></code> or a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata⑥\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤③\">node</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑧\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror⑦\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text①⓪\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤④\">node</a> and <var>newParent</var> is a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①①\">document</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⑨\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror⑧\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑤\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>newParent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①②\">document</a>, <var>node</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#element\" id=\"ref-for-element①⑥\">Element</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤⑤\">node</a>, and either <var>newParent</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⑤\">element</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②⑤\">child</a>, <var>child</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype⑦\">doctype</a>, or <var>child</var> is non-null and a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype⑧\">doctype</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following④\">following</a> <var>child</var> then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⓪\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror⑨\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>oldParent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①③\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert②\">Assert</a>: <var>oldParent</var> is non-null.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#live-range-pre-remove-steps\" id=\"ref-for-live-range-pre-remove-steps\">live range pre-remove steps</a>, given <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>For each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#nodeiterator\" id=\"ref-for-nodeiterator\">NodeIterator</a></code> object <var>iterator</var> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root\">root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥\">node document</a> is <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦\">node document</a>, run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pre-removing-steps\" id=\"ref-for-nodeiterator-pre-removing-steps\"><code>NodeIterator</code> pre-remove steps</a> given\n <var>node</var> and <var>iterator</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>oldPreviousSibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①\">previous sibling</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>oldNextSibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove②\">Remove</a> <var>node</var> from <var>oldParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②⑥\">children</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned\" id=\"ref-for-slotable-assigned③\">assigned</a>, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables\" id=\"ref-for-assign-slotables③\">assign slottables</a> for\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned-slot\" id=\"ref-for-slotable-assigned-slot③\">assigned slot</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>oldParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①⑦\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①⑤\">shadow root</a>, and\n <var>oldParent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot②①\">slot</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-assigned-nodes\" id=\"ref-for-slot-assigned-nodes③\">assigned nodes</a>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty①\">is empty</a>, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-a-slot-change\" id=\"ref-for-signal-a-slot-change②\">signal a slot change</a> for <var>oldParent</var>.\n\n </p>"
        },
        {
          "html": "If <var>node</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant①\">inclusive descendant</a> that is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot②②\">slot</a>:",
          "rationale": "run",
          "steps": [
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree②\">assign slottables for a tree</a> with <var>oldParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①⑧\">root</a>.\n\n   </p>"
            },
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree③\">assign slottables for a tree</a> with <var>node</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "If <var>child</var> is non-null:",
          "rationale": "for",
          "steps": [
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range②\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node①\">start node</a> is <var>newParent</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②\">start offset</a> is greater than <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index③\">index</a>, increase\n   its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset③\">start offset</a> by 1.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node①\">end node</a> is <var>newParent</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②\">end offset</a> is greater than <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index④\">index</a>, increase\n   its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset③\">end offset</a> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>newPreviousSibling</var> be <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling②\">previous sibling</a> if\n <var>child</var> is non-null, and <var>newParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-last-child\" id=\"ref-for-concept-tree-last-child①\">last child</a> otherwise.\n\n </p>"
        },
        {
          "html": "<p>If <var>child</var> is null, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①⓪\">append</a> <var>node</var> to\n <var>newParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②⑦\">children</a>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-insert\" id=\"ref-for-list-insert①\">insert</a> <var>node</var> into <var>newParent</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②⑧\">children</a> before <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index⑤\">index</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>newParent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-shadow-host\" id=\"ref-for-element-shadow-host①\">shadow host</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①⑥\">shadow root</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-slot-assignment\" id=\"ref-for-shadowroot-slot-assignment③\">slot assignment</a> is \"<code>named</code>\" and <var>node</var> is a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slotable\" id=\"ref-for-concept-slotable①⑦\">slottable</a>, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-a-slot\" id=\"ref-for-assign-a-slot②\">assign a slot</a> for <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>newParent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root①⑨\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①⑦\">shadow root</a>, and\n <var>newParent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot②③\">slot</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-assigned-nodes\" id=\"ref-for-slot-assigned-nodes④\">assigned nodes</a>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty②\">is empty</a>, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-a-slot-change\" id=\"ref-for-signal-a-slot-change③\">signal a slot change</a> for <var>newParent</var>.\n\n </p>"
        },
        {
          "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree④\">assign slottables for a tree</a> with <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②⓪\">root</a>.\n\n </p>"
        },
        {
          "html": "For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-descendant\" id=\"ref-for-concept-shadow-including-inclusive-descendant②\">shadow-including inclusive descendant</a> <var>inclusiveDescendant</var> of\n  <var>node</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-tree-order\" id=\"ref-for-concept-shadow-including-tree-order②\">shadow-including tree order</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>inclusiveDescendant</var> is <var>node</var>, then run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-move-ext\" id=\"ref-for-concept-node-move-ext\">moving steps</a> with\n    <var>inclusiveDescendant</var> and <var>oldParent</var>. Otherwise, run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-move-ext\" id=\"ref-for-concept-node-move-ext①\">moving steps</a>\n    with <var>inclusiveDescendant</var> and null.\n\n    </p>"
            },
            {
              "html": "<p>If <var>inclusiveDescendant</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom\" id=\"ref-for-concept-element-custom①\">custom</a> and <var>newParent</var> is\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#connected\" id=\"ref-for-connected④\">connected</a>, then <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\" id=\"ref-for-enqueue-a-custom-element-callback-reaction①\">enqueue a custom element callback reaction</a> with\n   <var>inclusiveDescendant</var>, callback name \"<code>connectedMoveCallback</code>\", and « ».\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record②\">Queue a tree mutation record</a> for <var>oldParent</var> with « », « <var>node</var> »,\n <var>oldPreviousSibling</var>, and <var>oldNextSibling</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record③\">Queue a tree mutation record</a> for <var>newParent</var> with « <var>node</var> », « »,\n <var>newPreviousSibling</var>, and <var>child</var>.</p>"
        }
      ]
    },
    {
      "name": "append",
      "href": "https://dom.spec.whatwg.org/#concept-node-append",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-append\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">append</dfn> a <var>node</var> to a <var>parent</var>,\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert\">pre-insert</a> <var>node</var> into <var>parent</var> before null.",
      "rationale": "To <dfn>"
    },
    {
      "name": "replace",
      "href": "https://dom.spec.whatwg.org/#concept-node-replace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace</dfn> a <var>child</var> with <var>node</var>\nwithin a <var>parent</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>parent</var> is not a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document④\">Document</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment⑨\">DocumentFragment</a></code>, or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#element\" id=\"ref-for-element①⑦\">Element</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤⑥\">node</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②①\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror①⓪\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-host-including-inclusive-ancestor\" id=\"ref-for-concept-tree-host-including-inclusive-ancestor②\">host-including inclusive ancestor</a> of <var>parent</var>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②②\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror①①\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑧\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①④\">parent</a> is not <var>parent</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②③\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror②\">NotFoundError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②⑨\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is not a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment①⓪\">DocumentFragment</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documenttype\" id=\"ref-for-documenttype⑦\">DocumentType</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#element\" id=\"ref-for-element①⑧\">Element</a></code>, or\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata⑦\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤⑦\">node</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②④\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror①②\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③⓪\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If either <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text①①\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤⑧\">node</a> and <var>parent</var> is a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①③\">document</a>, or <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype⑨\">doctype</a> and <var>parent</var> is not a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①④\">document</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑤\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror①③\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③①\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①⑤\">document</a>, and any of the statements below, switched on\n  the interface <var>node</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements④\">implements</a>, are true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑥\">throw</a> a\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror①④\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③②\">DOMException</a></code>.",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "DocumentFragment",
                  "html": "<p>If <var>node</var> has more than one <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⑥\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child②⑨\">child</a> or has a\n    <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text①②\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑤⑨\">node</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③⓪\">child</a>.\n\n    </p>\n       <p>Otherwise, if <var>node</var> has one <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⑦\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③①\">child</a> and either\n    <var>parent</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⑧\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③②\">child</a> that is not\n    <var>child</var> or a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype①⓪\">doctype</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following⑤\">following</a> <var>child</var>.\n\n   </p>"
                },
                {
                  "case": "Element",
                  "html": "<p><var>parent</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⑨\">element</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③③\">child</a> that is not\n   <var>child</var> or a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype①①\">doctype</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following⑥\">following</a> <var>child</var>.\n\n   </p>"
                },
                {
                  "case": "DocumentType",
                  "html": "<p><var>parent</var> has a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype①②\">doctype</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③④\">child</a> that is not <var>child</var>,\n   or an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element②⓪\">element</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-preceding\" id=\"ref-for-concept-tree-preceding④\">preceding</a> <var>child</var>.\n  </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>referenceChild</var> be <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling②\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>referenceChild</var> is <var>node</var>, then set <var>referenceChild</var> to\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling③\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>previousSibling</var> be <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling③\">previous sibling</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>removedNodes</var> be the empty set.\n\n </p>"
        },
        {
          "html": "If <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①⑤\">parent</a> is non-null:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>removedNodes</var> to « <var>child</var> ».\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove③\">Remove</a> <var>child</var> with the <i>suppress observers flag</i> set.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Let <var>nodes</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③⑤\">children</a> if <var>node</var> is a\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment①②\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥⓪\">node</a>; otherwise « <var>node</var> ».\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-insert\" id=\"ref-for-concept-node-insert⑦\">Insert</a> <var>node</var> into <var>parent</var> before <var>referenceChild</var>\n with the <i>suppress observers flag</i> set.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record④\">Queue a tree mutation record</a> for <var>parent</var> with <var>nodes</var>,\n <var>removedNodes</var>, <var>previousSibling</var>, and <var>referenceChild</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>child</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Node/replace all",
      "href": "https://dom.spec.whatwg.org/#concept-node-replace-all",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-replace-all\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace all</dfn> with a <var>node</var>\nwithin a <var>parent</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>removedNodes</var> be <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③⑥\">children</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>addedNodes</var> be the empty set.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment①③\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥①\">node</a>, then set\n <var>addedNodes</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③⑦\">children</a>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, if <var>node</var> is non-null, set <var>addedNodes</var> to « <var>node</var> ».\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove④\">Remove</a> all <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③⑧\">children</a>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order①③\">tree order</a>,\n with the <i>suppress observers flag</i> set.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-insert\" id=\"ref-for-concept-node-insert⑧\">insert</a> <var>node</var> into\n <var>parent</var> before null with the <i>suppress observers flag</i> set.\n\n </p>"
        },
        {
          "html": "<p>If either <var>addedNodes</var> or <var>removedNodes</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty③\">is not empty</a>,\n then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record⑤\">queue a tree mutation record</a> for <var>parent</var> with <var>addedNodes</var>,\n <var>removedNodes</var>, null, and null.\n</p>"
        }
      ]
    },
    {
      "name": "pre-remove",
      "href": "https://dom.spec.whatwg.org/#concept-node-pre-remove",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-pre-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">pre-remove</dfn> a <var>child</var> from a\n<var>parent</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①⑥\">parent</a> is not <var>parent</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw②⑦\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror③\">NotFoundError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove⑤\">Remove</a> <var>child</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>child</var>.\n</p>"
        }
      ]
    },
    {
      "name": "remove",
      "href": "https://dom.spec.whatwg.org/#concept-node-remove",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove</dfn> a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥⑤\">node</a> <var>node</var>, with an\noptional <i>suppress observers flag</i>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①⑦\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>Assert: <var>parent</var> is non-null.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#live-range-pre-remove-steps\" id=\"ref-for-live-range-pre-remove-steps①\">live range pre-remove steps</a>, given <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>For each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#nodeiterator\" id=\"ref-for-nodeiterator①\">NodeIterator</a></code> object <var>iterator</var> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①\">root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑧\">node document</a> is <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑨\">node document</a>, run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pre-removing-steps\" id=\"ref-for-nodeiterator-pre-removing-steps①\"><code>NodeIterator</code> pre-remove steps</a> given\n <var>node</var> and <var>iterator</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>oldPreviousSibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling④\">previous sibling</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>oldNextSibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling④\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove③\">Remove</a> <var>node</var> from its <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child③⑨\">children</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned\" id=\"ref-for-slotable-assigned④\">assigned</a>, then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables\" id=\"ref-for-assign-slotables④\">assign slottables</a> for\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slotable-assigned-slot\" id=\"ref-for-slotable-assigned-slot④\">assigned slot</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②①\">root</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root①⑧\">shadow root</a>, and\n <var>parent</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot②④\">slot</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#slot-assigned-nodes\" id=\"ref-for-slot-assigned-nodes⑤\">assigned nodes</a> is the empty list,\n then run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-a-slot-change\" id=\"ref-for-signal-a-slot-change④\">signal a slot change</a> for <var>parent</var>.\n\n </p>"
        },
        {
          "html": "If <var>node</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant②\">inclusive descendant</a> that is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-slot\" id=\"ref-for-concept-slot②⑤\">slot</a>:",
          "rationale": "run",
          "steps": [
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree⑤\">assign slottables for a tree</a> with <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②②\">root</a>.\n\n   </p>"
            },
            {
              "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#assign-slotables-for-a-tree\" id=\"ref-for-assign-slotables-for-a-tree⑥\">assign slottables for a tree</a> with <var>node</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove-ext\" id=\"ref-for-concept-node-remove-ext①\">removing steps</a> with <var>node</var> and <var>parent</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>isParentConnected</var> be <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#connected\" id=\"ref-for-connected⑤\">connected</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom\" id=\"ref-for-concept-element-custom②\">custom</a> and <var>isParentConnected</var> is true, then\n  <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\" id=\"ref-for-enqueue-a-custom-element-callback-reaction②\">enqueue a custom element callback reaction</a> with <var>node</var>, callback name\n  \"<code>disconnectedCallback</code>\", and « ».\n\n  </p>"
        },
        {
          "html": "For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-descendant\" id=\"ref-for-concept-shadow-including-descendant\">shadow-including descendant</a> <var>descendant</var> of <var>node</var>, in\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-tree-order\" id=\"ref-for-concept-shadow-including-tree-order③\">shadow-including tree order</a>:",
          "rationale": "run",
          "steps": [
            {
              "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove-ext\" id=\"ref-for-concept-node-remove-ext②\">removing steps</a> with <var>descendant</var> and null.\n\n   </p>"
            },
            {
              "html": "<p>If <var>descendant</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom\" id=\"ref-for-concept-element-custom④\">custom</a> and <var>isParentConnected</var>\n   is true, then <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\" id=\"ref-for-enqueue-a-custom-element-callback-reaction③\">enqueue a custom element callback reaction</a> with <var>descendant</var>,\n   callback name \"<code>disconnectedCallback</code>\", and « ».\n  </p>"
            }
          ]
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②\">inclusive ancestor</a> <var>inclusiveAncestor</var> of\n <var>parent</var>, and then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑥\">for each</a> <var>registered</var> of\n <var>inclusiveAncestor</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list\">registered observer list</a>, if <var>registered</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-options\" id=\"ref-for-registered-observer-options\">options</a>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-subtree\" id=\"ref-for-dom-mutationobserverinit-subtree\">subtree</a></code>\"] is true, then\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①①\">append</a> a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#transient-registered-observer\" id=\"ref-for-transient-registered-observer\">transient registered observer</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer\">observer</a> is <var>registered</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer①\">observer</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-options\" id=\"ref-for-registered-observer-options①\">options</a> is\n <var>registered</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-options\" id=\"ref-for-registered-observer-options②\">options</a>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#transient-registered-observer-source\" id=\"ref-for-transient-registered-observer-source\">source</a> is <var>registered</var> to <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list①\">registered observer list</a>.\n\n </p>"
        },
        {
          "html": "<p>If <i>suppress observers flag</i> is unset, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-tree-mutation-record\" id=\"ref-for-queue-a-tree-mutation-record⑥\">queue a tree mutation record</a> for\n <var>parent</var> with « », « <var>node</var> », <var>oldPreviousSibling</var>, and\n <var>oldNextSibling</var>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-children-changed-ext\" id=\"ref-for-concept-node-children-changed-ext①\">children changed steps</a> for <var>parent</var>.\n</p>"
        }
      ]
    },
    {
      "name": "DocumentOrShadowRoot/customElementRegistry",
      "href": "https://dom.spec.whatwg.org/#dom-documentorshadowroot-customelementregistry",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DocumentOrShadowRoot\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-documentorshadowroot-customelementregistry\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>customElementRegistry</code></dfn> getter steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③③\">this</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document①⑥\">document</a>, then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③④\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry\">custom element registry</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert③\">Assert</a>: <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑤\">this</a> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#shadowroot\" id=\"ref-for-shadowroot④\">ShadowRoot</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥⑥\">node</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry⑤\">custom element registry</a>.\n</p>"
        }
      ]
    },
    {
      "name": "converting nodes into a node",
      "href": "https://dom.spec.whatwg.org/#converting-nodes-into-a-node",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"converting nodes into a node\" id=\"converting-nodes-into-a-node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">convert nodes into a node</dfn>, given\n<var>nodes</var> and <var>document</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be null.\n\n </p>"
        },
        {
          "html": "<p>Replace each string in <var>nodes</var> with a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text①③\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥⑦\">node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①\">data</a> is the string and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①⓪\">node document</a> is\n <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>nodes</var> contains one <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥⑧\">node</a>, then set <var>node</var> to\n <var>nodes</var>[0].\n\n </p>"
        },
        {
          "html": "<p>Otherwise, set <var>node</var> to a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment①⑤\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑥⑨\">node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①①\">node document</a> is <var>document</var>, and then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append\">append</a> each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node⑦⓪\">node</a>\n in <var>nodes</var>, if any, to it.\n\n </p>"
        },
        {
          "html": "<p>Return <var>node</var>.\n</p>"
        }
      ]
    },
    {
      "name": "ParentNode/prepend(...nodes)",
      "href": "https://dom.spec.whatwg.org/#dom-parentnode-prepend",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ParentNode\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"prepend(...nodes)|prepend()\" id=\"dom-parentnode-prepend\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>prepend(<var>nodes</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#converting-nodes-into-a-node\" id=\"ref-for-converting-nodes-into-a-node\">converting nodes into a node</a> given\n <var>nodes</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⑨\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①②\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert②\">Pre-insert</a> <var>node</var> into <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⓪\">this</a> before <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④①\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child①\">first child</a>.\n</p>"
        }
      ]
    },
    {
      "name": "ParentNode/append(...nodes)",
      "href": "https://dom.spec.whatwg.org/#dom-parentnode-append",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ParentNode\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"append(...nodes)|append()\" id=\"dom-parentnode-append\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>append(<var>nodes</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#converting-nodes-into-a-node\" id=\"ref-for-converting-nodes-into-a-node①\">converting nodes into a node</a> given\n <var>nodes</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①③\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①\">Append</a> <var>node</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④③\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "ParentNode/replaceChildren(...nodes)",
      "href": "https://dom.spec.whatwg.org/#dom-parentnode-replacechildren",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ParentNode\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"replaceChildren(...nodes)|replaceChildren()\" id=\"dom-parentnode-replacechildren\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>replaceChildren(<var>nodes</var>)</code></dfn> method steps\nare:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#converting-nodes-into-a-node\" id=\"ref-for-converting-nodes-into-a-node②\">converting nodes into a node</a> given\n <var>nodes</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①④\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\" id=\"ref-for-concept-node-ensure-pre-insertion-validity①\">Ensure pre-insert validity</a> of <var>node</var> into <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑤\">this</a> before null.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-replace-all\" id=\"ref-for-concept-node-replace-all\">Replace all</a> with <var>node</var> within <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑥\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "ParentNode/moveBefore(node, child)",
      "href": "https://dom.spec.whatwg.org/#dom-parentnode-movebefore",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ParentNode\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-parentnode-movebefore\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>moveBefore(<var>node</var>, <var>child</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>referenceChild</var> be <var>child</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>referenceChild</var> is <var>node</var>, then set <var>referenceChild</var> to\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling⑤\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#move\" id=\"ref-for-move②\">Move</a> <var>node</var> into <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④⑦\">this</a> before <var>referenceChild</var>.\n</p>"
        }
      ]
    },
    {
      "name": "ChildNode/before(...nodes)",
      "href": "https://dom.spec.whatwg.org/#dom-childnode-before",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ChildNode\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"before(...nodes)|before()\" id=\"dom-childnode-before\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>before(<var>nodes</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⓪\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①⑧\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is null, then return.\n\n </p>"
        },
        {
          "html": "<p>Let <var>viablePreviousSibling</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤①\">this</a>’s first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-preceding\" id=\"ref-for-concept-tree-preceding⑦\">preceding</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-sibling\" id=\"ref-for-concept-tree-sibling①⓪\">sibling</a> not in <var>nodes</var>; otherwise null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>node</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#converting-nodes-into-a-node\" id=\"ref-for-converting-nodes-into-a-node③\">converting nodes into a node</a>, given\n <var>nodes</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①⑤\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>viablePreviousSibling</var> is null, then set it to <var>parent</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child②\">first child</a>; otherwise to <var>viablePreviousSibling</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling⑥\">next sibling</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert③\">Pre-insert</a> <var>node</var> into <var>parent</var> before\n <var>viablePreviousSibling</var>.\n</p>"
        }
      ]
    },
    {
      "name": "ChildNode/after(...nodes)",
      "href": "https://dom.spec.whatwg.org/#dom-childnode-after",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ChildNode\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"after(...nodes)|after()\" id=\"dom-childnode-after\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>after(<var>nodes</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤③\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent①⑨\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is null, then return.\n\n </p>"
        },
        {
          "html": "<p>Let <var>viableNextSibling</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤④\">this</a>’s first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following⑨\">following</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-sibling\" id=\"ref-for-concept-tree-sibling①①\">sibling</a> not in <var>nodes</var>; otherwise null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>node</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#converting-nodes-into-a-node\" id=\"ref-for-converting-nodes-into-a-node④\">converting nodes into a node</a>, given\n <var>nodes</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①⑥\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert④\">Pre-insert</a> <var>node</var> into <var>parent</var> before\n <var>viableNextSibling</var>.\n</p>"
        }
      ]
    },
    {
      "name": "ChildNode/replaceWith(...nodes)",
      "href": "https://dom.spec.whatwg.org/#dom-childnode-replacewith",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ChildNode\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"replaceWith(...nodes)|replaceWith()\" id=\"dom-childnode-replacewith\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>replaceWith(<var>nodes</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent②⓪\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is null, then return.\n\n </p>"
        },
        {
          "html": "<p>Let <var>viableNextSibling</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑦\">this</a>’s first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following①⓪\">following</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-sibling\" id=\"ref-for-concept-tree-sibling①②\">sibling</a> not in <var>nodes</var>; otherwise null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>node</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#converting-nodes-into-a-node\" id=\"ref-for-converting-nodes-into-a-node⑤\">converting nodes into a node</a>, given\n <var>nodes</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①⑦\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤⑨\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent②①\">parent</a> is <var>parent</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-replace\" id=\"ref-for-concept-node-replace\">replace</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⓪\">this</a> with\n  <var>node</var> within <var>parent</var>.\n\n  </p>"
        },
        {
          "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert⑤\">pre-insert</a> <var>node</var> into <var>parent</var> before\n <var>viableNextSibling</var>.\n</p>"
        }
      ]
    },
    {
      "name": "ChildNode/remove()",
      "href": "https://dom.spec.whatwg.org/#dom-childnode-remove",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"ChildNode\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-childnode-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>remove()</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent②②\">parent</a> is null, then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove⑦\">Remove</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥③\">this</a>.\n</p>"
        }
      ]
    },
    {
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-names\" id=\"ref-for-dfn-supported-property-names\">supported property names</a> are the values from the list returned by these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be an empty list.\n\n </p>"
        },
        {
          "html": "For each <var>element</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#represented-by-the-collection\" id=\"ref-for-represented-by-the-collection④\">represented by the collection</a>, in\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order①⑧\">tree order</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>element</var> has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-id\" id=\"ref-for-concept-id③\">ID</a> which is not in <var>result</var>,\n   append <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-id\" id=\"ref-for-concept-id④\">ID</a> to <var>result</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>element</var> is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace\">HTML namespace</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has\">has</a>\n   a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-named-attribute\" id=\"ref-for-concept-named-attribute\"><code>name</code> attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value\">value</a> is neither\n   the empty string nor is in <var>result</var>, append <var>element</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-named-attribute\" id=\"ref-for-concept-named-attribute①\"><code>name</code> attribute</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①\">value</a> to\n   <var>result</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "HTMLCollection/namedItem(key)",
      "href": "https://dom.spec.whatwg.org/#dom-htmlcollection-nameditem-key",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLCollection\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-htmlcollection-nameditem-key\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>namedItem(<var>key</var>)</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>key</var> is the empty string, return null.\n\n </p>"
        },
        {
          "html": "<p>Return the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element④⑥\">element</a> in the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-collection\" id=\"ref-for-concept-collection①⑧\">collection</a> for which at least one of\n  the following is true:\n\n  </p>\n     <ul>\n      <li>it has an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-id\" id=\"ref-for-concept-id⑤\">ID</a> which is <var>key</var>;\n\n   \n      </li><li>it is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①\">HTML namespace</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has①\">has</a> a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-named-attribute\" id=\"ref-for-concept-named-attribute②\"><code>name</code> attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value②\">value</a> is\n   <var>key</var>;\n  \n     </li></ul>\n     <p>or null if there is no such <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element④⑦\">element</a>.\n</p>"
        }
      ]
    },
    {
      "name": "queue a mutation observer microtask",
      "href": "https://dom.spec.whatwg.org/#queue-a-mutation-observer-compound-microtask",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"queue-a-mutation-observer-compound-microtask\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">queue a mutation observer microtask</dfn>,\nrun these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent\">surrounding agent</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutation-observer-compound-microtask-queued-flag\" id=\"ref-for-mutation-observer-compound-microtask-queued-flag\">mutation observer microtask queued</a> is true, then\n return.\n\n </p>"
        },
        {
          "html": "<p>Set the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent①\">surrounding agent</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutation-observer-compound-microtask-queued-flag\" id=\"ref-for-mutation-observer-compound-microtask-queued-flag①\">mutation observer microtask queued</a> to true.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-microtask\" id=\"ref-for-queue-a-microtask\">Queue</a> a <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#microtask\" id=\"ref-for-microtask\">microtask</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#notify-mutation-observers\" id=\"ref-for-notify-mutation-observers\">notify mutation observers</a>.\n</p>"
        }
      ]
    },
    {
      "name": "notify mutation observers",
      "href": "https://dom.spec.whatwg.org/#notify-mutation-observers",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"notify-mutation-observers\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">notify mutation observers</dfn>, run these steps:",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent②\">surrounding agent</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutation-observer-compound-microtask-queued-flag\" id=\"ref-for-mutation-observer-compound-microtask-queued-flag②\">mutation observer microtask queued</a> to false.\n\n </p>"
        },
        {
          "html": "<p>Let <var>notifySet</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone①\">clone</a> of the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent③\">surrounding agent</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutation-observer-list\" id=\"ref-for-mutation-observer-list\">pending mutation observers</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty①\">Empty</a> the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent④\">surrounding agent</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutation-observer-list\" id=\"ref-for-mutation-observer-list①\">pending mutation observers</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>signalSet</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone②\">clone</a> of the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent⑤\">surrounding agent</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-slot-list\" id=\"ref-for-signal-slot-list①\">signal slots</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty②\">Empty</a> the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent⑥\">surrounding agent</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#signal-slot-list\" id=\"ref-for-signal-slot-list②\">signal slots</a>.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑦\">For each</a> <var>mo</var> of <var>notifySet</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>records</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone③\">clone</a> of <var>mo</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-queue\" id=\"ref-for-concept-mo-queue\">record queue</a>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty③\">Empty</a> <var>mo</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-queue\" id=\"ref-for-concept-mo-queue①\">record queue</a>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑧\">For each</a> <var>node</var> of <var>mo</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutationobserver-node-list\" id=\"ref-for-mutationobserver-node-list\">node list</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove④\">remove</a> all\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#transient-registered-observer\" id=\"ref-for-transient-registered-observer①\">transient registered observers</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer②\">observer</a> is\n   <var>mo</var> from <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list②\">registered observer list</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>records</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty④\">is not empty</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#invoke-a-callback-function\" id=\"ref-for-invoke-a-callback-function\">invoke</a>\n   <var>mo</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-callback\" id=\"ref-for-concept-mo-callback\">callback</a> with « <var>records</var>, <var>mo</var> »\n   and \"<code>report</code>\", and with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-callback-this-value\" id=\"ref-for-dfn-callback-this-value\">callback this value</a> <var>mo</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate①⑨\">For each</a> <var>slot</var> of <var>signalSet</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire⑧\">fire an event</a> named\n <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"HTMLSlotElement\" data-dfn-type=\"event\" data-export=\"\" id=\"eventdef-htmlslotelement-slotchange\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>slotchange</code></dfn>, with its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-bubbles\" id=\"ref-for-dom-event-bubbles⑧\">bubbles</a></code> attribute set to true,\n at <var>slot</var>.\n</p>"
        }
      ]
    },
    {
      "name": "MutationObserver/observe(target, options)",
      "href": "https://dom.spec.whatwg.org/#dom-mutationobserver-observe",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MutationObserver\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"observe(target, options)|observe(target)\" id=\"dom-mutationobserver-observe\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>observe(<var>target</var>, <var>options</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If either <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributeoldvalue\" id=\"ref-for-dom-mutationobserverinit-attributeoldvalue②\">attributeOldValue</a></code>\"] or\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributefilter\" id=\"ref-for-dom-mutationobserverinit-attributefilter②\">attributeFilter</a></code>\"] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">exists</a>, and\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributes\" id=\"ref-for-dom-mutationobserverinit-attributes③\">attributes</a></code>\"] does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④\">exist</a>, then set\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributes\" id=\"ref-for-dom-mutationobserverinit-attributes④\">attributes</a></code>\"] to true.\n\n </p>"
        },
        {
          "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdataoldvalue\" id=\"ref-for-dom-mutationobserverinit-characterdataoldvalue②\">characterDataOldValue</a></code>\"]\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤\">exists</a> and <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdata\" id=\"ref-for-dom-mutationobserverinit-characterdata②\">characterData</a></code>\"] does not\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑥\">exist</a>, then set <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdata\" id=\"ref-for-dom-mutationobserverinit-characterdata③\">characterData</a></code>\"] to\n true.\n\n </p>"
        },
        {
          "html": "<p>If none of <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-childlist\" id=\"ref-for-dom-mutationobserverinit-childlist①\">childList</a></code>\"],\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributes\" id=\"ref-for-dom-mutationobserverinit-attributes⑤\">attributes</a></code>\"], and\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdata\" id=\"ref-for-dom-mutationobserverinit-characterdata④\">characterData</a></code>\"] is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑤\">throw</a> a\n <code>TypeError</code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributeoldvalue\" id=\"ref-for-dom-mutationobserverinit-attributeoldvalue③\">attributeOldValue</a></code>\"] is true and\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributes\" id=\"ref-for-dom-mutationobserverinit-attributes⑥\">attributes</a></code>\"] is false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑥\">throw</a> a\n <code>TypeError</code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributefilter\" id=\"ref-for-dom-mutationobserverinit-attributefilter③\">attributeFilter</a></code>\"] is present and\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributes\" id=\"ref-for-dom-mutationobserverinit-attributes⑦\">attributes</a></code>\"] is false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑦\">throw</a> a\n <code>TypeError</code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdataoldvalue\" id=\"ref-for-dom-mutationobserverinit-characterdataoldvalue③\">characterDataOldValue</a></code>\"] is true and\n <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdata\" id=\"ref-for-dom-mutationobserverinit-characterdata⑤\">characterData</a></code>\"] is false, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑧\">throw</a> a\n <code>TypeError</code>.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⓪\">For each</a> <var>registered</var> of <var>target</var>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list③\">registered observer list</a>, if <var>registered</var>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer③\">observer</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑥\">this</a>:",
          "rationale": "for",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②①\">For each</a> <var>node</var> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑦\">this</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutationobserver-node-list\" id=\"ref-for-mutationobserver-node-list①\">node list</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑤\">remove</a> all\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#transient-registered-observer\" id=\"ref-for-transient-registered-observer③\">transient registered observers</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#transient-registered-observer-source\" id=\"ref-for-transient-registered-observer-source①\">source</a> is\n   <var>registered</var> from <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list④\">registered observer list</a>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>registered</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-options\" id=\"ref-for-registered-observer-options③\">options</a> to\n   <var>options</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "append",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①②\">Append</a> a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer\" id=\"ref-for-registered-observer③\">registered observer</a> whose\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer④\">observer</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑧\">this</a> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-options\" id=\"ref-for-registered-observer-options④\">options</a> is <var>options</var> to <var>target</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list⑤\">registered observer list</a>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①③\">Append</a> a weak reference to <var>target</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥⑨\">this</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutationobserver-node-list\" id=\"ref-for-mutationobserver-node-list②\">node list</a>.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "MutationObserver/disconnect()",
      "href": "https://dom.spec.whatwg.org/#dom-mutationobserver-disconnect",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MutationObserver\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-mutationobserver-disconnect\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>disconnect()</code></dfn> method steps are:",
      "rationale": "for",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②②\">For each</a> <var>node</var> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⓪\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutationobserver-node-list\" id=\"ref-for-mutationobserver-node-list③\">node list</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑥\">remove</a> any <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer\" id=\"ref-for-registered-observer④\">registered observer</a> from\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list⑥\">registered observer list</a> for which <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦①\">this</a> is the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer⑤\">observer</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty④\">Empty</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-queue\" id=\"ref-for-concept-mo-queue③\">record queue</a>.\n</p>"
        }
      ]
    },
    {
      "name": "MutationObserver/takeRecords()",
      "href": "https://dom.spec.whatwg.org/#dom-mutationobserver-takerecords",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MutationObserver\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-mutationobserver-takerecords\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>takeRecords()</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>records</var> be a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-clone\" id=\"ref-for-list-clone④\">clone</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦③\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-queue\" id=\"ref-for-concept-mo-queue④\">record queue</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty⑤\">Empty</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-queue\" id=\"ref-for-concept-mo-queue⑤\">record queue</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>records</var>.\n</p>"
        }
      ]
    },
    {
      "name": "queue a mutation record",
      "href": "https://dom.spec.whatwg.org/#queue-a-mutation-record",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"queue-a-mutation-record\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">queue a mutation record</dfn> of <var>type</var> for <var>target</var> with\n<var>name</var>, <var>namespace</var>, <var>oldValue</var>, <var>addedNodes</var>,\n<var>removedNodes</var>, <var>previousSibling</var>, and <var>nextSibling</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>interestedObservers</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map\">map</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>nodes</var> be the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor③\">inclusive ancestors</a> of <var>target</var>.\n\n </p>"
        },
        {
          "html": "For each <var>node</var> in <var>nodes</var>, and then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②③\">for each</a>\n  <var>registered</var> of <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-list\" id=\"ref-for-registered-observer-list⑦\">registered observer list</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>options</var> be <var>registered</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-options\" id=\"ref-for-registered-observer-options⑤\">options</a>.\n\n   </p>"
            },
            {
              "html": "then:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>mo</var> be <var>registered</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#registered-observer-observer\" id=\"ref-for-registered-observer-observer⑥\">observer</a>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>interestedObservers</var>[<var>mo</var>] does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①⓪\">exist</a>, then\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set\">set</a> <var>interestedObservers</var>[<var>mo</var>] to null.\n\n     </p>"
                },
                {
                  "html": "<p>If either <var>type</var> is \"<code>attributes</code>\" and\n     <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-attributeoldvalue\" id=\"ref-for-dom-mutationobserverinit-attributeoldvalue④\">attributeOldValue</a></code>\"] is true, or <var>type</var> is\n     \"<code>characterData</code>\" and\n     <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationobserverinit-characterdataoldvalue\" id=\"ref-for-dom-mutationobserverinit-characterdataoldvalue④\">characterDataOldValue</a></code>\"] is true, then\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set①\">set</a> <var>interestedObservers</var>[<var>mo</var>] to <var>oldValue</var>.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-iterate\" id=\"ref-for-map-iterate①\">For each</a> <var>observer</var> → <var>mappedOldValue</var> of\n  <var>interestedObservers</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>record</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#mutationrecord\" id=\"ref-for-mutationrecord④\">MutationRecord</a></code> object with its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-type\" id=\"ref-for-dom-mutationrecord-type\">type</a></code>\n   set to <var>type</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-target\" id=\"ref-for-dom-mutationrecord-target\">target</a></code> set to <var>target</var>,\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-attributename\" id=\"ref-for-dom-mutationrecord-attributename\">attributeName</a></code> set to <var>name</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-attributenamespace\" id=\"ref-for-dom-mutationrecord-attributenamespace\">attributeNamespace</a></code>\n   set to <var>namespace</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-oldvalue\" id=\"ref-for-dom-mutationrecord-oldvalue\">oldValue</a></code> set to <var>mappedOldValue</var>,\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-addednodes\" id=\"ref-for-dom-mutationrecord-addednodes\">addedNodes</a></code> set to <var>addedNodes</var>,\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-removednodes\" id=\"ref-for-dom-mutationrecord-removednodes\">removedNodes</a></code> set to <var>removedNodes</var>,\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-previoussibling\" id=\"ref-for-dom-mutationrecord-previoussibling\">previousSibling</a></code> set to <var>previousSibling</var>, and\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-mutationrecord-nextsibling\" id=\"ref-for-dom-mutationrecord-nextsibling\">nextSibling</a></code> set to <var>nextSibling</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#queue-enqueue\" id=\"ref-for-queue-enqueue\">Enqueue</a> <var>record</var> to <var>observer</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-mo-queue\" id=\"ref-for-concept-mo-queue⑥\">record queue</a>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①①\">Append</a> <var>observer</var> to the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent⑦\">surrounding agent</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#mutation-observer-list\" id=\"ref-for-mutation-observer-list②\">pending mutation observers</a>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-mutation-observer-compound-microtask\" id=\"ref-for-queue-a-mutation-observer-compound-microtask①\">Queue a mutation observer microtask</a>.\n</p>"
        }
      ]
    },
    {
      "name": "queue a tree mutation record",
      "href": "https://dom.spec.whatwg.org/#queue-a-tree-mutation-record",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"queue-a-tree-mutation-record\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">queue a tree mutation record</dfn> for <var>target</var> with\n<var>addedNodes</var>, <var>removedNodes</var>, <var>previousSibling</var>, and\n<var>nextSibling</var>, run these steps:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: either <var>addedNodes</var> or <var>removedNodes</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty⑤\">is not empty</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-mutation-record\" id=\"ref-for-queue-a-mutation-record\">Queue a mutation record</a> of \"<code>childList</code>\" for <var>target</var> with\n null, null, null, <var>addedNodes</var>, <var>removedNodes</var>, <var>previousSibling</var>,\n and <var>nextSibling</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Node/nodeType",
      "href": "https://dom.spec.whatwg.org/#dom-node-nodetype",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-node-nodetype\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>nodeType</code></dfn> getter steps are to return the first matching\nstatement, switching on the interface <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑤\">this</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements⑤\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Element",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-element_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>ELEMENT_NODE</code></dfn> (1)"
            },
            {
              "case": "Attr",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-attribute_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>ATTRIBUTE_NODE</code></dfn> (2);"
            },
            {
              "case": "An exclusive Text node",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-text_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>TEXT_NODE</code></dfn> (3);"
            },
            {
              "case": "CDATASection",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-cdata_section_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>CDATA_SECTION_NODE</code></dfn> (4);"
            },
            {
              "case": "ProcessingInstruction",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-processing_instruction_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>PROCESSING_INSTRUCTION_NODE</code></dfn> (7);"
            },
            {
              "case": "Comment",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-comment_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>COMMENT_NODE</code></dfn> (8);"
            },
            {
              "case": "Document",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-document_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>DOCUMENT_NODE</code></dfn> (9);"
            },
            {
              "case": "DocumentType",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-document_type_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>DOCUMENT_TYPE_NODE</code></dfn> (10);"
            },
            {
              "case": "DocumentFragment",
              "html": "<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"const\" data-export=\"\" id=\"dom-node-document_fragment_node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>DOCUMENT_FRAGMENT_NODE</code></dfn> (11)."
            }
          ]
        }
      ]
    },
    {
      "name": "Node/nodeName",
      "href": "https://dom.spec.whatwg.org/#dom-node-nodename",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-node-nodename\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>nodeName</code></dfn> getter steps are to return the first matching\nstatement, switching on the interface <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦⑥\">this</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements⑥\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Element",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-html-uppercased-qualified-name\" id=\"ref-for-element-html-uppercased-qualified-name①\">HTML-uppercased qualified name</a>."
            },
            {
              "case": "Attr",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-qualified-name\" id=\"ref-for-concept-attribute-qualified-name①\">qualified name</a>."
            },
            {
              "case": "An exclusive Text node",
              "html": "\"<code>#text</code>\"."
            },
            {
              "case": "CDATASection",
              "html": "\"<code>#cdata-section</code>\"."
            },
            {
              "case": "ProcessingInstruction",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-pi-target\" id=\"ref-for-concept-pi-target①\">target</a>."
            },
            {
              "case": "Comment",
              "html": "\"<code>#comment</code>\"."
            },
            {
              "case": "Document",
              "html": "\"<code>#document</code>\"."
            },
            {
              "case": "DocumentType",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-name\" id=\"ref-for-concept-doctype-name①\">name</a>."
            },
            {
              "case": "DocumentFragment",
              "html": "\"<code>#document-fragment</code>\"."
            }
          ]
        }
      ]
    },
    {
      "name": "Node/nodeValue",
      "href": "https://dom.spec.whatwg.org/#dom-node-nodevalue",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-node-nodevalue\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>nodeValue</code></dfn> getter steps are to return the following, switching\non the interface <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨①\">this</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements⑦\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Attr",
              "html": "<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value⑤\">value</a>."
            },
            {
              "case": "CharacterData",
              "html": "<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨③\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data⑤\">data</a>."
            },
            {
              "case": "Otherwise",
              "html": "Null."
            }
          ]
        }
      ]
    },
    {
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-nodevalue\" id=\"ref-for-dom-node-nodevalue①\">nodeValue</a></code> setter steps are to, if the given value is null, act as if it was the\nempty string instead, and then do as described below, switching on the interface <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨④\">this</a>\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements⑧\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Attr",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#set-an-existing-attribute-value\" id=\"ref-for-set-an-existing-attribute-value\">Set an existing attribute value</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑤\">this</a> and the given value.\n\n </p>"
            },
            {
              "case": "CharacterData",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①\">Replace data</a> with node <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑥\">this</a>, offset 0, count <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑨⑦\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①\">length</a>, and data the given value.\n\n </p>"
            },
            {
              "case": "Otherwise",
              "html": "<p>Do nothing.\n</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "get text content",
      "href": "https://dom.spec.whatwg.org/#get-text-content",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"get-text-content\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get text content</dfn> with a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⓪⑨\">node</a> <var>node</var>,\nreturn the following, switching on the interface <var>node</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements⑨\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "DocumentFragment",
              "html": "The <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-descendant-text-content\" id=\"ref-for-concept-descendant-text-content\">descendant text content</a> of <var>node</var>."
            },
            {
              "case": "Element",
              "html": "The <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-descendant-text-content\" id=\"ref-for-concept-descendant-text-content\">descendant text content</a> of <var>node</var>."
            },
            {
              "case": "Attr",
              "html": "<var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value⑥\">value</a>."
            },
            {
              "case": "CharacterData",
              "html": "<var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data⑥\">data</a>."
            },
            {
              "case": "Otherwise",
              "html": "Null."
            }
          ]
        }
      ]
    },
    {
      "name": "string replace all",
      "href": "https://dom.spec.whatwg.org/#string-replace-all",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"string-replace-all\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">string replace all</dfn> with a string <var>string</var> within a\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①⓪\">node</a> <var>parent</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be null.\n\n </p>"
        },
        {
          "html": "<p>If <var>string</var> is not the empty string, then set <var>node</var> to a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text②①\">Text</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①①\">node</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data⑦\">data</a> is <var>string</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②⑤\">node document</a> is <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②⑥\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-replace-all\" id=\"ref-for-concept-node-replace-all①\">Replace all</a> with <var>node</var> within <var>parent</var>.\n</p>"
        }
      ]
    },
    {
      "name": "set text content",
      "href": "https://dom.spec.whatwg.org/#set-text-content",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-text-content\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set text content</dfn> with a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①②\">node</a> <var>node</var> and a string <var>value</var>,\ndo as defined below, switching on the interface <var>node</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⓪\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "DocumentFragment",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#string-replace-all\" id=\"ref-for-string-replace-all\">String replace all</a> with <var>value</var> within <var>node</var>.\n\n </p>"
            },
            {
              "case": "Element",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#string-replace-all\" id=\"ref-for-string-replace-all\">String replace all</a> with <var>value</var> within <var>node</var>.\n\n </p>"
            },
            {
              "case": "Attr",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#set-an-existing-attribute-value\" id=\"ref-for-set-an-existing-attribute-value①\">Set an existing attribute value</a> with <var>node</var> and <var>value</var>.\n\n </p>"
            },
            {
              "case": "CharacterData",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace②\">Replace data</a> with node <var>node</var>, offset 0, count <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②\">length</a>, and data <var>value</var>.\n\n </p>"
            },
            {
              "case": "Otherwise",
              "html": "<p>Do nothing.\n</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Node/normalize()",
      "href": "https://dom.spec.whatwg.org/#dom-node-normalize",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-node-normalize\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>normalize()</code></dfn> method steps are to run these steps for\neach <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①①\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#exclusive-text-node\" id=\"ref-for-exclusive-text-node⑤\">exclusive <code>Text</code> node</a> <var>node</var> of\n<a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⓪\">this</a>:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>length</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length③\">length</a>."
        },
        {
          "html": "If <var>length</var> is zero, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove⑧\">remove</a> <var>node</var> and continue with the\n next <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#exclusive-text-node\" id=\"ref-for-exclusive-text-node⑥\">exclusive <code>Text</code> node</a>, if any."
        },
        {
          "html": "Let <var>data</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-concatenate\" id=\"ref-for-string-concatenate①\">concatenation</a> of the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data⑨\">data</a>\n of <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contiguous-exclusive-text-nodes\" id=\"ref-for-contiguous-exclusive-text-nodes①\">contiguous exclusive <code>Text</code> nodes</a> (excluding itself), in\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order①⑨\">tree order</a>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace③\">Replace data</a> with node <var>node</var>, offset <var>length</var>, count 0, and data\n <var>data</var>."
        },
        {
          "html": "Let <var>currentNode</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①⓪\">next sibling</a>."
        },
        {
          "html": "While <var>currentNode</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#exclusive-text-node\" id=\"ref-for-exclusive-text-node⑦\">exclusive <code>Text</code> node</a>:",
          "rationale": "for",
          "steps": [
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range④\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node②\">start node</a> is <var>currentNode</var>,\n   add <var>length</var> to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset④\">start offset</a> and set its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③\">start node</a> to <var>node</var>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range⑤\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②\">end node</a> is <var>currentNode</var>, add\n   <var>length</var> to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset④\">end offset</a> and set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node③\">end node</a> to\n   <var>node</var>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range⑥\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node④\">start node</a> is <var>currentNode</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent②⑦\">parent</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset⑤\">start offset</a> is <var>currentNode</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index⑥\">index</a>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node⑤\">start node</a> to <var>node</var> and its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset⑥\">start offset</a> to <var>length</var>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range⑦\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node④\">end node</a> is <var>currentNode</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent②⑧\">parent</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset⑤\">end offset</a> is <var>currentNode</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index⑦\">index</a>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node⑤\">end node</a> to <var>node</var> and its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset⑥\">end offset</a> to <var>length</var>.\n\n   </p>"
            },
            {
              "html": "<p>Add <var>currentNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length④\">length</a> to <var>length</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>currentNode</var> to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①①\">next sibling</a>.\n  </p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove⑨\">Remove</a> <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contiguous-exclusive-text-nodes\" id=\"ref-for-contiguous-exclusive-text-nodes②\">contiguous exclusive <code>Text</code> nodes</a>\n (excluding itself), in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②⓪\">tree order</a>."
        }
      ]
    },
    {
      "name": "clone a node",
      "href": "https://dom.spec.whatwg.org/#concept-node-clone",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-clone\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">clone a node</dfn> given a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①⑤\">node</a> <var>node</var>\nand an optional <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document②③\">document</a> <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"clone a node\" data-dfn-type=\"dfn\" data-export=\"\" id=\"clone-a-node-document\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><var>document</var></dfn>\n(default <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②⑦\">node document</a>), boolean\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"clone a node\" data-dfn-type=\"dfn\" data-export=\"\" id=\"clone-a-node-subtree\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><var>subtree</var></dfn> (default false), <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①⑥\">node</a>-or-null\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"clone a node\" data-dfn-type=\"dfn\" data-export=\"\" id=\"clone-a-node-parent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><var>parent</var></dfn> (default null), and null or a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#customelementregistry\" id=\"ref-for-customelementregistry②\">CustomElementRegistry</a></code> object <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"clone a node\" data-dfn-type=\"dfn\" data-export=\"\" id=\"clone-a-node-fallbackregistry\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><var>fallbackRegistry</var></dfn>\n(default null):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert④\">Assert</a>: <var>node</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document②④\">document</a> or <var>node</var> is\n <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>copy</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-single-node\" id=\"ref-for-clone-a-single-node\">cloning a single node</a> given <var>node</var>,\n <var>document</var>, and <var>fallbackRegistry</var>.\n\n </p>"
        },
        {
          "html": "<p>Run any <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone-ext\" id=\"ref-for-concept-node-clone-ext①\">cloning steps</a> defined for <var>node</var> in\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#other-applicable-specifications\" id=\"ref-for-other-applicable-specifications⑦\">other applicable specifications</a> and pass <var>node</var>, <var>copy</var>, and\n <var>subtree</var> as parameters.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②\">append</a> <var>copy</var> to\n <var>parent</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>subtree</var> is true, then for each <var>child</var> of <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑤④\">children</a>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②①\">tree order</a>: <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①\">clone a node</a> given <var>child</var> with\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-document\" id=\"ref-for-clone-a-node-document\"><i>document</i></a> set to <var>document</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-subtree\" id=\"ref-for-clone-a-node-subtree\"><i>subtree</i></a> set to <var>subtree</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-parent\" id=\"ref-for-clone-a-node-parent\"><i>parent</i></a> set to <var>copy</var>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-fallbackregistry\" id=\"ref-for-clone-a-node-fallbackregistry\"><i>fallbackRegistry</i></a> set to <var>fallbackRegistry</var>.\n\n </p>"
        },
        {
          "html": "If <var>node</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element④⑨\">element</a>, <var>node</var> is a\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-shadow-host\" id=\"ref-for-element-shadow-host②\">shadow host</a>, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root①\">shadow root</a>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-clonable\" id=\"ref-for-shadowroot-clonable\">clonable</a> is true:",
          "rationale": "assert",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑤\">Assert</a>: <var>copy</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-shadow-host\" id=\"ref-for-element-shadow-host③\">shadow host</a>.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>shadowRootRegistry</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root②\">shadow root</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry⑥\">custom element registry</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>shadowRootRegistry</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#is-a-global-custom-element-registry\" id=\"ref-for-is-a-global-custom-element-registry\">is a global custom element registry</a>, then set\n   <var>shadowRootRegistry</var> to <var>document</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#effective-global-custom-element-registry\" id=\"ref-for-effective-global-custom-element-registry\">effective global custom element registry</a>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attach-a-shadow-root\" id=\"ref-for-concept-attach-a-shadow-root\">Attach a shadow root</a> with <var>copy</var>, <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root③\">shadow root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode④\">mode</a>, true, <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root④\">shadow root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-serializable\" id=\"ref-for-shadowroot-serializable\">serializable</a>, <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root⑤\">shadow root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-delegates-focus\" id=\"ref-for-shadowroot-delegates-focus\">delegates focus</a>, <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root⑥\">shadow root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-slot-assignment\" id=\"ref-for-shadowroot-slot-assignment④\">slot assignment</a>, and\n   <var>shadowRootRegistry</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root⑦\">shadow root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-declarative\" id=\"ref-for-shadowroot-declarative\">declarative</a>\n   to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root⑧\">shadow root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-declarative\" id=\"ref-for-shadowroot-declarative①\">declarative</a>.\n\n   </p>"
            },
            {
              "html": "<p>For each <var>child</var> of <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root⑨\">shadow root</a>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑤⑤\">children</a>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②②\">tree order</a>: <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone②\">clone a node</a> given <var>child</var> with\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-document\" id=\"ref-for-clone-a-node-document①\"><i>document</i></a> set to <var>document</var>,\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-subtree\" id=\"ref-for-clone-a-node-subtree①\"><i>subtree</i></a> set to <var>subtree</var>, and\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-parent\" id=\"ref-for-clone-a-node-parent①\"><i>parent</i></a> set to <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root①⓪\">shadow root</a>.\n\n    </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>copy</var>.\n</p>"
        }
      ]
    },
    {
      "name": "clone a single node",
      "href": "https://dom.spec.whatwg.org/#clone-a-single-node",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"clone-a-single-node\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">clone a single node</dfn> given a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①⑦\">node</a> <var>node</var>,\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document②⑤\">document</a> <var>document</var>, and null or a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#customelementregistry\" id=\"ref-for-customelementregistry③\">CustomElementRegistry</a></code> object\n<var>fallbackRegistry</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>copy</var> be null.\n\n </p>"
        },
        {
          "html": "If <var>node</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤⓪\">element</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>registry</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry④\">custom element registry</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>registry</var> is null, then set <var>registry</var> to\n   <var>fallbackRegistry</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>registry</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#is-a-global-custom-element-registry\" id=\"ref-for-is-a-global-custom-element-registry①\">is a global custom element registry</a>, then set\n   <var>registry</var> to <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#effective-global-custom-element-registry\" id=\"ref-for-effective-global-custom-element-registry①\">effective global custom element registry</a>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>copy</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element\">creating an element</a>, given\n   <var>document</var>, <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name①\">local name</a>, <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace\">namespace</a>, <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix\">namespace prefix</a>,\n   <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-is-value\" id=\"ref-for-concept-element-is-value\"><code>is</code> value</a>, false, and <var>registry</var>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②④\">For each</a> <var>attribute</var> of <var>node</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute\">attribute list</a>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>copyAttribute</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-single-node\" id=\"ref-for-clone-a-single-node①\">cloning a single node</a> given\n     <var>attribute</var>, <var>document</var>, and null.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-append\" id=\"ref-for-concept-element-attributes-append\">Append</a> <var>copyAttribute</var> to <var>copy</var>.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "Otherwise, set <var>copy</var> to a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①⑧\">node</a> that <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①①\">implements</a> the same\n  interfaces as <var>node</var>, and fulfills these additional requirements, switching on the\n  interface <var>node</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①②\">implements</a>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "Document",
                  "html": "",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-encoding\" id=\"ref-for-concept-document-encoding\">encoding</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-content-type\" id=\"ref-for-concept-document-content-type\">content type</a>,\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-url\" id=\"ref-for-concept-document-url\">URL</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-origin\" id=\"ref-for-concept-document-origin\">origin</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-type\" id=\"ref-for-concept-document-type\">type</a>,\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-mode\" id=\"ref-for-concept-document-mode\">mode</a>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-allow-declarative-shadow-roots\" id=\"ref-for-document-allow-declarative-shadow-roots\">allow declarative shadow roots</a>, to those of\n     <var>node</var>.\n\n     </p>"
                    },
                    {
                      "html": "<p>If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry①\">custom element registry</a>’s\n     <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#is-scoped\" id=\"ref-for-is-scoped②\">is scoped</a> is true, then set <var>copy</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry②\">custom element registry</a> to <var>node</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry③\">custom element registry</a>.\n    </p>"
                    }
                  ]
                },
                {
                  "case": "DocumentType",
                  "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-name\" id=\"ref-for-concept-doctype-name②\">name</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-publicid\" id=\"ref-for-concept-doctype-publicid\">public ID</a>, and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-systemid\" id=\"ref-for-concept-doctype-systemid\">system ID</a> to those of <var>node</var>.\n\n   </p>"
                },
                {
                  "case": "Attr",
                  "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace②\">namespace</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace-prefix\" id=\"ref-for-concept-attribute-namespace-prefix\">namespace prefix</a>,\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name②\">local name</a>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value⑦\">value</a> to those of <var>node</var>.\n\n   </p>"
                },
                {
                  "case": "Text",
                  "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①⓪\">data</a> to that of <var>node</var>.\n\n   </p>"
                },
                {
                  "case": "Comment",
                  "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①⓪\">data</a> to that of <var>node</var>.\n\n   </p>"
                },
                {
                  "case": "ProcessingInstruction",
                  "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-pi-target\" id=\"ref-for-concept-pi-target②\">target</a> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①①\">data</a> to those of <var>node</var>.\n\n   </p>"
                },
                {
                  "case": "Otherwise",
                  "html": "<p>Do nothing.\n  </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑥\">Assert</a>: <var>copy</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①①⑨\">node</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document②⑥\">document</a>, then set <var>document</var> to\n <var>copy</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>copy</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②⑧\">node document</a> to <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>copy</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Node/cloneNode(subtree)",
      "href": "https://dom.spec.whatwg.org/#dom-node-clonenode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"cloneNode(subtree)|cloneNode()\" id=\"dom-node-clonenode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>cloneNode(<var>subtree</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪①\">this</a> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root②⓪\">shadow root</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw③⑨\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④①\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone③\">cloning a node</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪②\">this</a> with\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-subtree\" id=\"ref-for-clone-a-node-subtree②\"><i>subtree</i></a> set to <var>subtree</var>.\n</p>"
        }
      ]
    },
    {
      "html": "The following are equal, switching on the interface <var>A</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①④\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "DocumentType",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-name\" id=\"ref-for-concept-doctype-name③\">name</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-publicid\" id=\"ref-for-concept-doctype-publicid①\">public ID</a>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-systemid\" id=\"ref-for-concept-doctype-systemid①\">system ID</a>."
            },
            {
              "case": "Element",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace①\">namespace</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix①\">namespace prefix</a>,\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name②\">local name</a>, and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①\">attribute list</a>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size③\">size</a>."
            },
            {
              "case": "Attr",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace③\">namespace</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name③\">local name</a>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value⑧\">value</a>."
            },
            {
              "case": "ProcessingInstruction",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-pi-target\" id=\"ref-for-concept-pi-target③\">target</a> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①②\">data</a>."
            },
            {
              "case": "Text",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①③\">data</a>."
            },
            {
              "case": "Comment",
              "html": "Its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①③\">data</a>."
            },
            {
              "case": "Otherwise",
              "html": "—"
            }
          ]
        }
      ]
    },
    {
      "name": "Node/compareDocumentPosition(other)",
      "href": "https://dom.spec.whatwg.org/#dom-node-comparedocumentposition",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-node-comparedocumentposition\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>compareDocumentPosition(<var>other</var>)</code></dfn> method\nsteps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑤\">this</a> is <var>other</var>, then return zero.\n\n </p>"
        },
        {
          "html": "<p>Let <var>node1</var> be <var>other</var> and <var>node2</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑥\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>attr1</var> and <var>attr2</var> be null.\n\n </p>"
        },
        {
          "html": "<p>If <var>node1</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute①②\">attribute</a>, then set <var>attr1</var> to <var>node1</var>\n and <var>node1</var> to <var>attr1</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element\">element</a>.\n\n </p>"
        },
        {
          "html": "If <var>node2</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute①③\">attribute</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>attr2</var> to <var>node2</var> and <var>node2</var> to <var>attr2</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element①\">element</a>.\n\n   </p>"
            },
            {
              "html": "If <var>attr1</var> and <var>node1</var> are non-null, and <var>node2</var> is\n    <var>node1</var>:",
              "rationale": "for",
              "steps": [
                {
                  "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⑤\">For each</a> <var>attr</var> of <var>node2</var>’s\n      <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute④\">attribute list</a>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <var>attr</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-equals\" id=\"ref-for-concept-node-equals③\">equals</a> <var>attr1</var>, then return the result of\n       adding <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_implementation_specific\" id=\"ref-for-dom-node-document_position_implementation_specific①\">DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</a></code> and\n       <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_preceding\" id=\"ref-for-dom-node-document_position_preceding②\">DOCUMENT_POSITION_PRECEDING</a></code>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>attr</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-equals\" id=\"ref-for-concept-node-equals④\">equals</a> <var>attr2</var>, then return the result of\n       adding <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_implementation_specific\" id=\"ref-for-dom-node-document_position_implementation_specific②\">DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</a></code> and\n       <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_following\" id=\"ref-for-dom-node-document_position_following②\">DOCUMENT_POSITION_FOLLOWING</a></code>.\n      </p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>If <var>node1</var> or <var>node2</var> is null, or <var>node1</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②⑤\">root</a> is\n  not <var>node2</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root②⑥\">root</a>, then return the result of adding\n  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_disconnected\" id=\"ref-for-dom-node-document_position_disconnected②\">DOCUMENT_POSITION_DISCONNECTED</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_implementation_specific\" id=\"ref-for-dom-node-document_position_implementation_specific③\">DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</a></code>, and\n  either <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_preceding\" id=\"ref-for-dom-node-document_position_preceding③\">DOCUMENT_POSITION_PRECEDING</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_following\" id=\"ref-for-dom-node-document_position_following③\">DOCUMENT_POSITION_FOLLOWING</a></code>, with the\n  constraint that this is to be consistent, together.\n\n  </p>"
        },
        {
          "html": "<p>If <var>node1</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-ancestor\" id=\"ref-for-concept-tree-ancestor④\">ancestor</a> of <var>node2</var> and <var>attr1</var>\n is null, or <var>node1</var> is <var>node2</var> and <var>attr2</var> is non-null, then return the\n result of adding <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_contains\" id=\"ref-for-dom-node-document_position_contains②\">DOCUMENT_POSITION_CONTAINS</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_preceding\" id=\"ref-for-dom-node-document_position_preceding⑤\">DOCUMENT_POSITION_PRECEDING</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node1</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①④\">descendant</a> of <var>node2</var> and <var>attr2</var>\n is null, or <var>node1</var> is <var>node2</var> and <var>attr1</var> is non-null, then return the\n result of adding <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_contained_by\" id=\"ref-for-dom-node-document_position_contained_by②\">DOCUMENT_POSITION_CONTAINED_BY</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_following\" id=\"ref-for-dom-node-document_position_following⑤\">DOCUMENT_POSITION_FOLLOWING</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node1</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-preceding\" id=\"ref-for-concept-tree-preceding⑨\">preceding</a> <var>node2</var>, then return\n  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_preceding\" id=\"ref-for-dom-node-document_position_preceding⑥\">DOCUMENT_POSITION_PRECEDING</a></code>.\n\n  </p>"
        },
        {
          "html": "<p>Return <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-document_position_following\" id=\"ref-for-dom-node-document_position_following⑥\">DOCUMENT_POSITION_FOLLOWING</a></code>.\n</p>"
        }
      ]
    },
    {
      "name": "locate a namespace prefix",
      "href": "https://dom.spec.whatwg.org/#locate-a-namespace-prefix",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"locate a namespace prefix|locating a namespace prefix\" id=\"locate-a-namespace-prefix\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">locate a namespace prefix</dfn>\nfor an <var>element</var> using <var>namespace</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace②\">namespace</a> is <var>namespace</var> and its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix②\">namespace prefix</a> is non-null, then return its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix③\">namespace prefix</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>element</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has②\">has</a> an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute①⑦\">attribute</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace-prefix\" id=\"ref-for-concept-attribute-namespace-prefix①\">namespace prefix</a> is \"<code>xmlns</code>\" and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value⑨\">value</a> is\n <var>namespace</var>, then return <var>element</var>’s first such <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute①⑧\">attribute</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name④\">local name</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element②\">parent element</a> is not null, then return the result of running\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace-prefix\" id=\"ref-for-locate-a-namespace-prefix\">locate a namespace prefix</a> on that <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤②\">element</a> using <var>namespace</var>.\n\n </p>"
        },
        {
          "html": "<p>Return null.\n</p>"
        }
      ]
    },
    {
      "name": "locate a namespace",
      "href": "https://dom.spec.whatwg.org/#locate-a-namespace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"locate-a-namespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">locate a namespace</dfn> for a <var>node</var> using <var>prefix</var>, switch on\nthe interface <var>node</var> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⑤\">implements</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "Element",
              "html": "",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>prefix</var> is \"<code>xml</code>\", then return the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xml-namespace\" id=\"ref-for-xml-namespace①\">XML namespace</a>.\n\n   </p>"
                },
                {
                  "html": "<p>If <var>prefix</var> is \"<code>xmlns</code>\", then return the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xmlns-namespace\" id=\"ref-for-xmlns-namespace②\">XMLNS namespace</a>.\n\n   </p>"
                },
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace③\">namespace</a> is non-null and its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix④\">namespace prefix</a> is <var>prefix</var>, then return\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace④\">namespace</a>.\n\n   </p>"
                },
                {
                  "html": "<p>If it <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has③\">has</a> an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute①⑨\">attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace④\">namespace</a>\n   is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xmlns-namespace\" id=\"ref-for-xmlns-namespace③\">XMLNS namespace</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace-prefix\" id=\"ref-for-concept-attribute-namespace-prefix②\">namespace prefix</a> is \"<code>xmlns</code>\", and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name⑤\">local name</a> is <var>prefix</var>, or if <var>prefix</var> is null and it\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has④\">has</a> an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②⓪\">attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace⑤\">namespace</a> is the\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#xmlns-namespace\" id=\"ref-for-xmlns-namespace④\">XMLNS namespace</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace-prefix\" id=\"ref-for-concept-attribute-namespace-prefix③\">namespace prefix</a> is null, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name⑥\">local name</a>\n   is \"<code>xmlns</code>\", then return its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①⓪\">value</a> if it is not the empty string, and\n   null otherwise.\n\n   </p>"
                },
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element③\">parent element</a> is null, then return null.\n\n   </p>"
                },
                {
                  "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace\" id=\"ref-for-locate-a-namespace\">locate a namespace</a> on its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element④\">parent element</a> using\n   <var>prefix</var>.\n  </p>"
                }
              ]
            },
            {
              "case": "Document",
              "html": "",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-element\" id=\"ref-for-document-element①\">document element</a> is null, then return null.\n\n   </p>"
                },
                {
                  "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace\" id=\"ref-for-locate-a-namespace①\">locate a namespace</a> on its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-element\" id=\"ref-for-document-element②\">document element</a>\n   using <var>prefix</var>.\n  </p>"
                }
              ]
            },
            {
              "case": "DocumentType",
              "html": "<p>Return null.\n\n </p>"
            },
            {
              "case": "DocumentFragment",
              "html": "<p>Return null.\n\n </p>"
            },
            {
              "case": "Attr",
              "html": "",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element②\">element</a> is null, then return null.\n\n   </p>"
                },
                {
                  "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace\" id=\"ref-for-locate-a-namespace②\">locate a namespace</a> on its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element③\">element</a>\n   using <var>prefix</var>.\n  </p>"
                }
              ]
            },
            {
              "case": "Otherwise",
              "html": "",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element⑤\">parent element</a> is null, then return null.\n\n   </p>"
                },
                {
                  "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace\" id=\"ref-for-locate-a-namespace③\">locate a namespace</a> on its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element⑥\">parent element</a> using\n   <var>prefix</var>.\n  </p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Node/lookupPrefix(namespace)",
      "href": "https://dom.spec.whatwg.org/#dom-node-lookupprefix",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-node-lookupprefix\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>lookupPrefix(<var>namespace</var>)</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>namespace</var> is null or the empty string, then return null.\n\n </p>"
        },
        {
          "html": "Switch on the interface <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑧\">this</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#implements\" id=\"ref-for-implements①⑥\">implements</a>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "Element",
                  "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace-prefix\" id=\"ref-for-locate-a-namespace-prefix①\">locating a namespace prefix</a> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⓪⑨\">this</a> using\n   <var>namespace</var>.\n\n   </p>"
                },
                {
                  "case": "Document",
                  "html": "",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⓪\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-element\" id=\"ref-for-document-element③\">document element</a> is null, then return null.\n\n     </p>"
                    },
                    {
                      "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace-prefix\" id=\"ref-for-locate-a-namespace-prefix②\">locating a namespace prefix</a> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①①\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-element\" id=\"ref-for-document-element④\">document element</a> using <var>namespace</var>.\n    </p>"
                    }
                  ]
                },
                {
                  "case": "DocumentType",
                  "html": "<p>Return null.\n\n   </p>"
                },
                {
                  "case": "DocumentFragment",
                  "html": "<p>Return null.\n\n   </p>"
                },
                {
                  "case": "Attr",
                  "html": "",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element④\">element</a> is null, then return null.\n\n     </p>"
                    },
                    {
                      "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace-prefix\" id=\"ref-for-locate-a-namespace-prefix③\">locating a namespace prefix</a> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①③\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element⑤\">element</a> using <var>namespace</var>.\n    </p>"
                    }
                  ]
                },
                {
                  "case": "Otherwise",
                  "html": "",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element⑦\">parent element</a> is null, then return null.\n\n     </p>"
                    },
                    {
                      "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace-prefix\" id=\"ref-for-locate-a-namespace-prefix④\">locating a namespace prefix</a> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑤\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#parent-element\" id=\"ref-for-parent-element⑧\">parent element</a> using <var>namespace</var>.\n    </p>"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Node/lookupNamespaceURI(prefix)",
      "href": "https://dom.spec.whatwg.org/#dom-node-lookupnamespaceuri",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-node-lookupnamespaceuri\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>lookupNamespaceURI(<var>prefix</var>)</code></dfn> method steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>prefix</var> is the empty string, then set it to null.\n\n </p>"
        },
        {
          "html": "<p>Return the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace\" id=\"ref-for-locate-a-namespace④\">locate a namespace</a> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑥\">this</a> using\n <var>prefix</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Node/isDefaultNamespace(namespace)",
      "href": "https://dom.spec.whatwg.org/#dom-node-isdefaultnamespace",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Node\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-node-isdefaultnamespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>isDefaultNamespace(<var>namespace</var>)</code></dfn> method steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>namespace</var> is the empty string, then set it to null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>defaultNamespace</var> be the result of running <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#locate-a-namespace\" id=\"ref-for-locate-a-namespace⑤\">locate a namespace</a> for\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①①⑦\">this</a> using null.\n\n </p>"
        },
        {
          "html": "<p>Return true if <var>defaultNamespace</var> is the same as <var>namespace</var>; otherwise\n false.\n</p>"
        }
      ]
    },
    {
      "name": "list of elements with qualified name qualifiedName",
      "href": "https://dom.spec.whatwg.org/#concept-getelementsbytagname",
      "html": "The\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-getelementsbytagname\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">list of elements with qualified name <var>qualifiedName</var></dfn>\nfor a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①②④\">node</a> <var>root</var> is the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection⑥\">HTMLCollection</a></code> returned by the following\nalgorithm:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>qualifiedName</var> is U+002A (*), then return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection⑦\">HTMLCollection</a></code> rooted at\n <var>root</var>, whose filter matches only <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①⑤\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤③\">elements</a>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, if <var>root</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②⑨\">node document</a> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document\">HTML document</a>,\n  return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection⑧\">HTMLCollection</a></code> rooted at <var>root</var>, whose filter matches the following\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①⑥\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤④\">elements</a>:\n\n  </p>\n     <ul>\n      <li>\n       <p>Whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace⑤\">namespace</a> is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②\">HTML namespace</a> and whose\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-qualified-name\" id=\"ref-for-concept-element-qualified-name\">qualified name</a> is <var>qualifiedName</var>, in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase\">ASCII lowercase</a>.\n\n   </p>\n      </li><li>\n       <p>Whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace⑥\">namespace</a> is <em>not</em> the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace③\">HTML namespace</a> and whose\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-qualified-name\" id=\"ref-for-concept-element-qualified-name①\">qualified name</a> is <var>qualifiedName</var>.\n  </p>\n     </li></ul>"
        },
        {
          "html": "<p>Otherwise, return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection⑨\">HTMLCollection</a></code> rooted at <var>root</var>, whose filter matches\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①⑦\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤⑤\">elements</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-qualified-name\" id=\"ref-for-concept-element-qualified-name②\">qualified name</a> is\n <var>qualifiedName</var>.\n</p>"
        }
      ]
    },
    {
      "name": "list of elements with namespace namespace and local name localName",
      "href": "https://dom.spec.whatwg.org/#concept-getelementsbytagnamens",
      "html": "The\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-getelementsbytagnamens\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">list of elements with namespace <var>namespace</var> and local name <var>localName</var></dfn>\nfor a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①②⑤\">node</a> <var>root</var> is the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①①\">HTMLCollection</a></code> returned by the following\nalgorithm:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>namespace</var> is the empty string, then set it to null.\n\n </p>"
        },
        {
          "html": "<p>If both <var>namespace</var> and <var>localName</var> are U+002A (*), then return an\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①②\">HTMLCollection</a></code> rooted at <var>root</var>, whose filter matches <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①⑧\">descendant</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤⑥\">elements</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>namespace</var> is U+002A (*), then return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①③\">HTMLCollection</a></code> rooted at\n <var>root</var>, whose filter matches <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant①⑨\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤⑦\">elements</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name③\">local name</a> is <var>localName</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>localName</var> is U+002A (*), then return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①④\">HTMLCollection</a></code> rooted at\n <var>root</var>, whose filter matches <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant②⓪\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤⑧\">elements</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace⑦\">namespace</a> is <var>namespace</var>.\n\n </p>"
        },
        {
          "html": "<p>Return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①⑤\">HTMLCollection</a></code> rooted at <var>root</var>, whose filter matches\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant②①\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑤⑨\">elements</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace⑧\">namespace</a> is\n <var>namespace</var> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name④\">local name</a> is <var>localName</var>.\n</p>"
        }
      ]
    },
    {
      "name": "list of elements with class names classNames",
      "href": "https://dom.spec.whatwg.org/#concept-getelementsbyclassname",
      "html": "The\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-getelementsbyclassname\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">list of elements with class names <var>classNames</var></dfn>\nfor a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①②⑥\">node</a> <var>root</var> is the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①⑦\">HTMLCollection</a></code> returned by the following\nalgorithm:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>classes</var> be the result of running the\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-ordered-set-parser\" id=\"ref-for-concept-ordered-set-parser\">ordered set parser</a> on\n  <var>classNames</var>."
        },
        {
          "html": "If <var>classes</var> is the empty set, return an empty\n  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①⑧\">HTMLCollection</a></code>."
        },
        {
          "html": "<p>Return an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#htmlcollection\" id=\"ref-for-htmlcollection①⑨\">HTMLCollection</a></code> rooted at <var>root</var>, whose filter matches\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-descendant\" id=\"ref-for-concept-tree-descendant②②\">descendant</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑥⓪\">elements</a> that have all their <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-class\" id=\"ref-for-concept-class\">classes</a> in\n  <var>classes</var>.\n\n  </p>\n     <p>The comparisons for the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-class\" id=\"ref-for-concept-class①\">classes</a> must be done in an\n  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-case-insensitive\" id=\"ref-for-ascii-case-insensitive\">ASCII case-insensitive</a> manner if <var>root</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③①\">node document</a>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-mode\" id=\"ref-for-concept-document-mode①\">mode</a> is \"<code>quirks</code>\"; otherwise in an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-is\" id=\"ref-for-string-is\">identical to</a>\n  manner.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createElement(localName, options)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createelement",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"createElement(localName, options)|createElement(localName)\" id=\"dom-document-createelement\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createElement(<var>localName</var>, <var>options</var>)</code></dfn>\nmethod steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>localName</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-element-local-name\" id=\"ref-for-valid-element-local-name④\">valid element local name</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⓪\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror⑦\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④⑨\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③③\">this</a> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document⑥\">HTML document</a>, then set <var>localName</var> to\n <var>localName</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase①\">ASCII lowercase</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>registry</var> and <var>is</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#flatten-element-creation-options\" id=\"ref-for-flatten-element-creation-options\">flattening element creation options</a> given <var>options</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③④\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>namespace</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①⓪\">HTML namespace</a>, if <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑤\">this</a> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document⑦\">HTML document</a> or <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-content-type\" id=\"ref-for-concept-document-content-type⑤\">content type</a> is\n \"<code>application/xhtml+xml</code>\"; otherwise null.\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element①\">creating an element</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑦\">this</a>, <var>localName</var>,\n <var>namespace</var>, null, <var>is</var>, true, and <var>registry</var>.\n</p>"
        }
      ]
    },
    {
      "name": "internal createElementNS steps",
      "href": "https://dom.spec.whatwg.org/#internal-createelementns-steps",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"internal-createelementns-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">internal <code>createElementNS</code> steps</dfn>, given <var>document</var>,\n<var>namespace</var>, <var>qualifiedName</var>, and <var>options</var>, are as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let (<var>namespace</var>, <var>prefix</var>, <var>localName</var>) be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#validate-and-extract\" id=\"ref-for-validate-and-extract\">validating and extracting</a> <var>namespace</var> and\n <var>qualifiedName</var> given \"<code>element</code>\".\n\n </p>"
        },
        {
          "html": "<p>Let <var>registry</var> and <var>is</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#flatten-element-creation-options\" id=\"ref-for-flatten-element-creation-options①\">flattening element creation options</a> given <var>options</var> and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①③⑧\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element②\">creating an element</a> given <var>document</var>,\n <var>localName</var>, <var>namespace</var>, <var>prefix</var>, <var>is</var>, true, and\n <var>registry</var>.\n</p>"
        }
      ]
    },
    {
      "name": "flatten element creation options",
      "href": "https://dom.spec.whatwg.org/#flatten-element-creation-options",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"flatten-element-creation-options\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">flatten element creation options</dfn>, given a string or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dictdef-elementcreationoptions\" id=\"ref-for-dictdef-elementcreationoptions②\">ElementCreationOptions</a></code>\ndictionary <var>options</var> and a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document④⓪\">document</a> <var>document</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>registry</var> be null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>is</var> be null.\n\n </p>"
        },
        {
          "html": "If <var>options</var> is a dictionary:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-elementcreationoptions-customelementregistry\" id=\"ref-for-dom-elementcreationoptions-customelementregistry④\">customElementRegistry</a></code>\"]\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①①\">exists</a>, then set <var>registry</var> to it.\n\n   </p>"
            },
            {
              "html": "<p>If <var>registry</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#is-scoped\" id=\"ref-for-is-scoped③\">is scoped</a> is false and\n   <var>registry</var> is not <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry⑤\">custom element registry</a>,\n   then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④①\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⓪\">DOMException</a></code>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-elementcreationoptions-is\" id=\"ref-for-dom-elementcreationoptions-is④\">is</a></code>\"] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①②\">exists</a>, then set\n   <var>is</var> to it.\n\n   </p>"
            },
            {
              "html": "<p>If <var>registry</var> is non-null and <var>is</var> is non-null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④②\">throw</a> a\n   \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror④\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤①\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>If <var>registry</var> is null, then set <var>registry</var> to the result of\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-registry\" id=\"ref-for-look-up-a-custom-element-registry②\">looking up a custom element registry</a> given <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>registry</var> and <var>is</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createCDATASection(data)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createcdatasection",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-createcdatasection\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createCDATASection(<var>data</var>)</code></dfn> method steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④②\">this</a> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document⑧\">HTML document</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④③\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror⑤\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤②\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>data</var> contains the string \"<code>]]&gt;</code>\", then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④④\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror⑧\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#cdatasection\" id=\"ref-for-cdatasection⑧\">CDATASection</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①③⑤\">node</a> with its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data①⑨\">data</a> set\n to <var>data</var> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③⑤\">node document</a> set to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④③\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createProcessingInstruction(target, data)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createprocessinginstruction",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-createprocessinginstruction\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createProcessingInstruction(<var>target</var>, <var>data</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>target</var> does not match the\n <code><a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml/#NT-Name\" id=\"ref-for-NT-Name①\">Name</a></code> production,\n then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑤\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror⑨\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤④\">DOMException</a></code>."
        },
        {
          "html": "If <var>data</var> contains the string\n \"<code>?&gt;</code>\", then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑥\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror①⓪\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⑤\">DOMException</a></code>."
        },
        {
          "html": "Return a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#processinginstruction\" id=\"ref-for-processinginstruction①③\">ProcessingInstruction</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①③⑦\">node</a>, with\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-pi-target\" id=\"ref-for-concept-pi-target⑤\">target</a> set to <var>target</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②①\">data</a> set to <var>data</var>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③⑦\">node document</a> set to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④⑤\">this</a>."
        }
      ]
    },
    {
      "name": "Document/importNode(node, options)",
      "href": "https://dom.spec.whatwg.org/#dom-document-importnode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"importNode(node, options)|importNode(node)\" id=\"dom-document-importnode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>importNode(<var>node</var>, <var>options</var>)</code></dfn>\nmethod steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document④④\">document</a> or <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root②③\">shadow root</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑦\">throw</a>\n a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror⑧\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤⑨\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>subtree</var> be false.\n\n </p>"
        },
        {
          "html": "<p>Let <var>registry</var> be null.\n\n </p>"
        },
        {
          "html": "<p>If <var>options</var> is a boolean, then set <var>subtree</var> to <var>options</var>.\n\n </p>"
        },
        {
          "html": "Otherwise:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>subtree</var> to the negation of\n   <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-importnodeoptions-selfonly\" id=\"ref-for-dom-importnodeoptions-selfonly①\">selfOnly</a></code>\"].\n\n   </p>"
            },
            {
              "html": "<p>If <var>options</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-importnodeoptions-customelementregistry\" id=\"ref-for-dom-importnodeoptions-customelementregistry①\">customElementRegistry</a></code>\"]\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①③\">exists</a>, then set <var>registry</var> to it.\n\n   </p>"
            },
            {
              "html": "<p>If <var>registry</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#is-scoped\" id=\"ref-for-is-scoped④\">is scoped</a> is false and\n   <var>registry</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry⑥\">custom element registry</a>, then\n   <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑧\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror⑨\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥⓪\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>If <var>registry</var> is null, then set <var>registry</var> to the result of\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-registry\" id=\"ref-for-look-up-a-custom-element-registry③\">looking up a custom element registry</a> given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④⑦\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone④\">cloning a node</a> given <var>node</var> with\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-document\" id=\"ref-for-clone-a-node-document②\"><i>document</i></a> set to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④⑧\">this</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-subtree\" id=\"ref-for-clone-a-node-subtree③\"><i>subtree</i></a> set to <var>subtree</var>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#clone-a-node-fallbackregistry\" id=\"ref-for-clone-a-node-fallbackregistry②\"><i>fallbackRegistry</i></a> set to <var>registry</var>.\n</p>"
        }
      ]
    },
    {
      "name": "adopt",
      "href": "https://dom.spec.whatwg.org/#concept-node-adopt",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-node-adopt\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">adopt</dfn> a <var>node</var> into a <var>document</var>, run\nthese steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>oldDocument</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③⑧\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent②⑨\">parent</a> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove①⓪\">remove</a>\n <var>node</var>.\n\n </p>"
        },
        {
          "html": "If <var>document</var> is not <var>oldDocument</var>:",
          "rationale": "for",
          "steps": [
            {
              "html": "For each <var>inclusiveDescendant</var> in <var>node</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-descendant\" id=\"ref-for-concept-shadow-including-inclusive-descendant③\">shadow-including inclusive descendants</a>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③⑨\">node document</a> to <var>document</var>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>inclusiveDescendant</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root②④\">shadow root</a> and\n     <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry⑦\">custom element registry</a>\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#is-a-global-custom-element-registry\" id=\"ref-for-is-a-global-custom-element-registry②\">is a global custom element registry</a>, then set <var>inclusiveDescendant</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry⑧\">custom element registry</a> to <var>document</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#effective-global-custom-element-registry\" id=\"ref-for-effective-global-custom-element-registry②\">effective global custom element registry</a>.\n\n     </p>"
                },
                {
                  "html": "Otherwise, if <var>inclusiveDescendant</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑦③\">element</a>:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④⓪\">node document</a> of each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②①\">attribute</a> in\n       <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute⑤\">attribute list</a> to <var>document</var>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>inclusiveDescendant</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry⑤\">custom element registry</a>\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#is-a-global-custom-element-registry\" id=\"ref-for-is-a-global-custom-element-registry③\">is a global custom element registry</a>, then set <var>inclusiveDescendant</var>’s\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry⑥\">custom element registry</a> to <var>document</var>’s\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#effective-global-custom-element-registry\" id=\"ref-for-effective-global-custom-element-registry③\">effective global custom element registry</a>.\n      </p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>For each <var>inclusiveDescendant</var> in <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-descendant\" id=\"ref-for-concept-shadow-including-inclusive-descendant④\">shadow-including inclusive descendants</a> that is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom\" id=\"ref-for-concept-element-custom⑤\">custom</a>,\n   <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\" id=\"ref-for-enqueue-a-custom-element-callback-reaction④\">enqueue a custom element callback reaction</a> with <var>inclusiveDescendant</var>, callback\n   name \"<code>adoptedCallback</code>\", and « <var>oldDocument</var>, <var>document</var> ».\n\n   </p>"
            },
            {
              "html": "<p>For each <var>inclusiveDescendant</var> in <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-descendant\" id=\"ref-for-concept-shadow-including-inclusive-descendant⑤\">shadow-including inclusive descendants</a>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-tree-order\" id=\"ref-for-concept-shadow-including-tree-order④\">shadow-including tree order</a>, run the\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-adopt-ext\" id=\"ref-for-concept-node-adopt-ext\">adopting steps</a> with <var>inclusiveDescendant</var> and <var>oldDocument</var>.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Document/adoptNode(node)",
      "href": "https://dom.spec.whatwg.org/#dom-document-adoptnode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-adoptnode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>adoptNode(<var>node</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document④⑤\">document</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw④⑨\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⓪\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥①\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root②⑤\">shadow root</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⓪\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror②③\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥②\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment②⑧\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①③⑨\">node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host④\">host</a> is non-null, then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-adopt\" id=\"ref-for-concept-node-adopt③\">Adopt</a> <var>node</var> into <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①④⑨\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>node</var>.\n</p>"
        }
      ]
    },
    {
      "name": "effective global custom element registry",
      "href": "https://dom.spec.whatwg.org/#effective-global-custom-element-registry",
      "html": "A <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document④⑥\">document</a> <var>document</var>’s <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"effective-global-custom-element-registry\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">effective global custom element registry</dfn>\nis:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry⑦\">custom element registry</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#is-a-global-custom-element-registry\" id=\"ref-for-is-a-global-custom-element-registry④\">is a global custom element registry</a>, then return <var>document</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry⑧\">custom element registry</a>.\n\n </p>"
        },
        {
          "html": "<p>Return null.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createAttribute(localName)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createattribute",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-createattribute\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createAttribute(<var>localName</var>)</code></dfn> method\nsteps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>localName</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-attribute-local-name\" id=\"ref-for-valid-attribute-local-name①\">valid attribute local name</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤①\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror①①\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤⓪\">this</a> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document⑨\">HTML document</a>, then set <var>localName</var> to\n <var>localName</var> in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase②\">ASCII lowercase</a>."
        },
        {
          "html": "Return a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②②\">attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name⑦\">local name</a> is <var>localName</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④①\">node document</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤①\">this</a>."
        }
      ]
    },
    {
      "name": "Document/createAttributeNS(namespace, qualifiedName)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createattributens",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-createattributens\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createAttributeNS(<var>namespace</var>, <var>qualifiedName</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let (<var>namespace</var>, <var>prefix</var>, <var>localName</var>) be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#validate-and-extract\" id=\"ref-for-validate-and-extract①\">validating and extracting</a> <var>namespace</var> and\n <var>qualifiedName</var> given \"<code>attribute</code>\".\n\n </p>"
        },
        {
          "html": "<p>Return a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②③\">attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace⑥\">namespace</a> is <var>namespace</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace-prefix\" id=\"ref-for-concept-attribute-namespace-prefix④\">namespace prefix</a> is <var>prefix</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name⑧\">local name</a> is\n <var>localName</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④②\">node document</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤②\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createEvent(interface)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createevent",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-document-createevent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createEvent(<var>interface</var>)</code></dfn> method steps\nare:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>constructor</var> be null.\n\n </p>"
        },
        {
          "html": "<p>If <var>interface</var> is an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-case-insensitive\" id=\"ref-for-ascii-case-insensitive①\">ASCII case-insensitive</a> match for any of the strings in the\n  first column in the following table, then set <var>constructor</var> to the interface in the\n  second column on the same row as the matching string:\n\n  </p>\n     <table>\n      <thead>\n       <tr>\n        <th>String\n        </th><th>Interface\n        </th><td>Notes\n   \n      </td></tr></thead><tbody>\n       <tr>\n        <td>\"<code>beforeunloadevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#beforeunloadevent\" id=\"ref-for-beforeunloadevent\">BeforeUnloadEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>compositionevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#compositionevent\" id=\"ref-for-compositionevent\">CompositionEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>customevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#customevent\" id=\"ref-for-customevent③\">CustomEvent</a></code>\n        </td><td>\n       </td></tr><tr>\n        <td>\"<code>devicemotionevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\" id=\"ref-for-devicemotion\">DeviceMotionEvent</a></code>\n        </td><td rowspan=\"2\"><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-device-orientation\" title=\"Device Orientation and Motion\">[DEVICE-ORIENTATION]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>deviceorientationevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" data-refhint-key=\"116e25eb\" href=\"https://w3c.github.io/deviceorientation/spec-source-orientation.html#devicemotion\" id=\"ref-for-devicemotion①\">DeviceOrientationEvent</a></code>\n    \n       </td></tr><tr>\n        <td>\"<code>dragevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/dnd.html#dragevent\" id=\"ref-for-dragevent\">DragEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>event</code>\"\n        </td><td rowspan=\"2\"><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event①⑧\">Event</a></code>\n        </td><td rowspan=\"2\">\n       </td></tr><tr>\n        <td>\"<code>events</code>\"\n    \n       </td></tr><tr>\n        <td>\"<code>focusevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#focusevent\" id=\"ref-for-focusevent\">FocusEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>hashchangeevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#hashchangeevent\" id=\"ref-for-hashchangeevent\">HashChangeEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>htmlevents</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event①⑨\">Event</a></code>\n        </td><td>\n       </td></tr><tr>\n        <td>\"<code>keyboardevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#keyboardevent\" id=\"ref-for-keyboardevent\">KeyboardEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>messageevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/comms.html#messageevent\" id=\"ref-for-messageevent\">MessageEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>mouseevent</code>\"\n        </td><td rowspan=\"2\"><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#mouseevent\" id=\"ref-for-mouseevent③\">MouseEvent</a></code>\n        </td><td rowspan=\"2\"><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>mouseevents</code>\"\n    \n       </td></tr><tr>\n        <td>\"<code>storageevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/webstorage.html#storageevent\" id=\"ref-for-storageevent\">StorageEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-html\" title=\"HTML Standard\">[HTML]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>svgevents</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#event\" id=\"ref-for-event②⓪\">Event</a></code>\n        </td><td>\n       </td></tr><tr>\n        <td>\"<code>textevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#textevent\" id=\"ref-for-textevent\">TextEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>touchevent</code>\"\n        </td><td><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/touch-events/#idl-def-touchevent\" id=\"ref-for-idl-def-touchevent③\">TouchEvent</a></code>\n        </td><td><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-touch-events\" title=\"Touch Events\">[TOUCH-EVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>uievent</code>\"\n        </td><td rowspan=\"2\"><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/uievents/#uievent\" id=\"ref-for-uievent\">UIEvent</a></code>\n        </td><td rowspan=\"2\"><a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-uievents\" title=\"UI Events\">[UIEVENTS]</a>\n    \n       </td></tr><tr>\n        <td>\"<code>uievents</code>\"\n  \n     </td></tr></tbody></table>"
        },
        {
          "html": "<p>If <var>constructor</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤②\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①①\">NotSupportedError</a></code>\"\n  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥④\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If the interface indicated by <var>constructor</var> is not exposed on the\n  <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global④\">relevant global object</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤③\">this</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤③\">throw</a> a\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①②\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥⑤\">DOMException</a></code>.\n\n  </p>"
        },
        {
          "html": "<p>Let <var>event</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-create\" id=\"ref-for-concept-event-create④\">creating an event</a> given <var>constructor</var>.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-type\" id=\"ref-for-dom-event-type①⑧\">type</a></code> attribute to the empty string.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-timestamp\" id=\"ref-for-dom-event-timestamp③\">timeStamp</a></code> attribute to the result of calling\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/hr-time/#dfn-current-high-resolution-time\" id=\"ref-for-dfn-current-high-resolution-time\">current high resolution time</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global⑤\">relevant global object</a>.\n\n </p>"
        },
        {
          "html": "<p>Initialize <var>event</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-event-istrusted\" id=\"ref-for-dom-event-istrusted⑨\">isTrusted</a></code> attribute to false.\n\n </p>"
        },
        {
          "html": "<p>Unset <var>event</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#initialized-flag\" id=\"ref-for-initialized-flag③\">initialized flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>event</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createNodeIterator(root, whatToShow, filter)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createnodeiterator",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"createNodeIterator(root, whatToShow, filter)|createNodeIterator(root, whatToShow)|createNodeIterator(root)\" id=\"dom-document-createnodeiterator\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createNodeIterator(<var>root</var>, <var>whatToShow</var>, <var>filter</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>iterator</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#nodeiterator\" id=\"ref-for-nodeiterator③\">NodeIterator</a></code> object.\n\n </p>"
        },
        {
          "html": "<p>Set <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root②\">root</a> and <var>iterator</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-reference\" id=\"ref-for-nodeiterator-reference\">reference</a> to <var>root</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pointer-before-reference\" id=\"ref-for-nodeiterator-pointer-before-reference\">pointer before reference</a> to true.\n\n </p>"
        },
        {
          "html": "<p>Set <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-whattoshow\" id=\"ref-for-concept-traversal-whattoshow\">whatToShow</a> to <var>whatToShow</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-filter\" id=\"ref-for-concept-traversal-filter\">filter</a> to <var>filter</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>iterator</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Document/createTreeWalker(root, whatToShow, filter)",
      "href": "https://dom.spec.whatwg.org/#dom-document-createtreewalker",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Document\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"createTreeWalker(root, whatToShow, filter)|createTreeWalker(root, whatToShow)|createTreeWalker(root)\" id=\"dom-document-createtreewalker\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createTreeWalker(<var>root</var>, <var>whatToShow</var>, <var>filter</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>walker</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#treewalker\" id=\"ref-for-treewalker①\">TreeWalker</a></code> object.\n\n </p>"
        },
        {
          "html": "<p>Set <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root③\">root</a> and <var>walker</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current\">current</a> to <var>root</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-whattoshow\" id=\"ref-for-concept-traversal-whattoshow①\">whatToShow</a> to <var>whatToShow</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-filter\" id=\"ref-for-concept-traversal-filter①\">filter</a> to <var>filter</var>.\n\n </p>"
        },
        {
          "html": "Return <var>walker</var>."
        }
      ]
    },
    {
      "name": "DOMImplementation/createDocumentType(name, publicId, systemId)",
      "href": "https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMImplementation\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-domimplementation-createdocumenttype\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createDocumentType(<var>name</var>, <var>publicId</var>, <var>systemId</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>name</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-doctype-name\" id=\"ref-for-valid-doctype-name②\">valid doctype name</a>, then throw an \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror①③\">InvalidCharacterError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype①⑧\">doctype</a>, with <var>name</var> as its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-name\" id=\"ref-for-concept-doctype-name④\">name</a>, <var>publicId</var> as its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-publicid\" id=\"ref-for-concept-doctype-publicid②\">public ID</a>, and <var>systemId</var>\n as its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-systemid\" id=\"ref-for-concept-doctype-systemid②\">system ID</a>, and with its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④③\">node document</a> set to the associated\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑤⓪\">document</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤⑥\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "DOMImplementation/createDocument(namespace, qualifiedName, doctype)",
      "href": "https://dom.spec.whatwg.org/#dom-domimplementation-createdocument",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMImplementation\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"createDocument(namespace, qualifiedName, doctype)|createDocument(namespace, qualifiedName)\" id=\"dom-domimplementation-createdocument\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createDocument(<var>namespace</var>, <var>qualifiedName</var>, <var>doctype</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#xmldocument\" id=\"ref-for-xmldocument③\">XMLDocument</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>element</var> be null.\n\n </p>"
        },
        {
          "html": "<p>If <var>qualifiedName</var> is not the empty string, then set <var>element</var> to the\n result of running the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#internal-createelementns-steps\" id=\"ref-for-internal-createelementns-steps①\">internal <code>createElementNS</code> steps</a>, given\n <var>document</var>, <var>namespace</var>, <var>qualifiedName</var>, and an empty dictionary.\n\n </p>"
        },
        {
          "html": "<p>If <var>doctype</var> is non-null, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append④\">append</a> <var>doctype</var> to <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>element</var> is non-null, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append⑤\">append</a> <var>element</var> to <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p><var>document</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-origin\" id=\"ref-for-concept-document-origin④\">origin</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤⑦\">this</a>’s associated\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑤①\">document</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-origin\" id=\"ref-for-concept-document-origin⑤\">origin</a>.\n\n </p>"
        },
        {
          "html": "<var>document</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-content-type\" id=\"ref-for-concept-document-content-type⑥\">content type</a> is determined by <var>namespace</var>:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "HTML namespace",
                  "html": "<code>application/xhtml+xml</code>"
                },
                {
                  "case": "SVG namespace",
                  "html": "<code>image/svg+xml</code>"
                },
                {
                  "case": "Any other namespace",
                  "html": "<code>application/xml</code>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return <var>document</var>.\n</p>"
        }
      ]
    },
    {
      "name": "DOMImplementation/createHTMLDocument(title)",
      "href": "https://dom.spec.whatwg.org/#dom-domimplementation-createhtmldocument",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMImplementation\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"createHTMLDocument(title)|createHTMLDocument()\" id=\"dom-domimplementation-createhtmldocument\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>createHTMLDocument(<var>title</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>doc</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑤②\">document</a> that is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①⓪\">HTML document</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-content-type\" id=\"ref-for-concept-document-content-type⑦\">content type</a> to \"<code>text/html</code>\".\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append⑥\">Append</a> a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype①⑨\">doctype</a>, with \"<code>html</code>\" as its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype-name\" id=\"ref-for-concept-doctype-name⑤\">name</a> and with its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④④\">node document</a> set to <var>doc</var>, to\n <var>doc</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append⑦\">Append</a> the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element③\">creating an element</a> given <var>doc</var>,\n \"<code>html</code>\", and the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①②\">HTML namespace</a>, to <var>doc</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append⑧\">Append</a> the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element④\">creating an element</a> given <var>doc</var>,\n \"<code>head</code>\", and the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①③\">HTML namespace</a>, to the <code><a data-link-type=\"element\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\" id=\"ref-for-the-html-element\">html</a></code> element created earlier.\n\n </p>"
        },
        {
          "html": "If <var>title</var> is given:",
          "rationale": "append",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append⑨\">Append</a> the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element⑤\">creating an element</a> given <var>doc</var>,\n   \"<code>title</code>\", and the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①④\">HTML namespace</a>, to the <code><a data-link-type=\"element\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-head-element\" id=\"ref-for-the-head-element\">head</a></code> element created earlier.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①⓪\">Append</a> a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text②⑦\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①④⓪\">node</a>, with its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②②\">data</a> set\n   to <var>title</var> (which could be the empty string) and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④⑤\">node document</a> set\n   to <var>doc</var>, to the <code><a data-link-type=\"element\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-title-element\" id=\"ref-for-the-title-element①\">title</a></code> element created earlier.\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①①\">Append</a> the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-create-element\" id=\"ref-for-concept-create-element⑥\">creating an element</a> given <var>doc</var>,\n \"<code>body</code>\", and the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①⑤\">HTML namespace</a>, to the <code><a data-link-type=\"element\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\" id=\"ref-for-the-html-element①\">html</a></code> element created earlier.</p>"
        },
        {
          "html": "<p><var>doc</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-origin\" id=\"ref-for-concept-document-origin⑥\">origin</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑤⑧\">this</a>’s associated\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑤③\">document</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-origin\" id=\"ref-for-concept-document-origin⑦\">origin</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>doc</var>.\n</p>"
        }
      ]
    },
    {
      "name": "retarget",
      "href": "https://dom.spec.whatwg.org/#retarget",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"retarget|retargeting\" id=\"retarget\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">retarget</dfn> an object <var>A</var> against an object\n<var>B</var>, repeat these steps until they return an object:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If one of the following is true\n\n  </p>\n     <ul class=\"brief\">\n      <li><var>A</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①④⑧\">node</a>\n   \n      </li><li><var>A</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root③⑨\">root</a> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root④⑤\">shadow root</a>\n   \n      </li><li><var>B</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①④⑨\">node</a> and <var>A</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④⓪\">root</a> is a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\" id=\"ref-for-concept-shadow-including-inclusive-ancestor②\">shadow-including inclusive ancestor</a> of <var>B</var>\n  \n     </li></ul>\n     <p>then return <var>A</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>A</var> to <var>A</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④①\">root</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host①④\">host</a>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/HTML-uppercased qualified name",
      "href": "https://dom.spec.whatwg.org/#element-html-uppercased-qualified-name",
      "html": "An <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑧③\">element</a>’s <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"element-html-uppercased-qualified-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">HTML-uppercased qualified name</dfn> is the return\nvalue of these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>qualifiedName</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑥⑨\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-qualified-name\" id=\"ref-for-concept-element-qualified-name④\">qualified name</a>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑦⓪\">this</a> is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①⑥\">HTML namespace</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④⑦\">node document</a> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①①\">HTML document</a>, then set <var>qualifiedName</var> to <var>qualifiedName</var> in\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-uppercase\" id=\"ref-for-ascii-uppercase\">ASCII uppercase</a>.\n\n </p>"
        },
        {
          "html": "Return <var>qualifiedName</var>."
        }
      ]
    },
    {
      "name": "create an element",
      "href": "https://dom.spec.whatwg.org/#concept-create-element",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-create-element\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create an element</dfn>, given a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑤④\">document</a>\n<var>document</var>, string <var>localName</var>, string-or-null <var>namespace</var>, and\noptionally a string-or-null <var>prefix</var> (default null), string-or-null <var>is</var> (default\nnull), boolean <var>synchronousCustomElements</var> (default false), and \"<code>default</code>\",\nnull, or a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#customelementregistry\" id=\"ref-for-customelementregistry①⑤\">CustomElementRegistry</a></code> object <var>registry</var> (default \"<code>default</code>\"):",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be null.\n\n </p>"
        },
        {
          "html": "<p>If <var>registry</var> is \"<code>default</code>\", then set <var>registry</var> to the result\n of <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-registry\" id=\"ref-for-look-up-a-custom-element-registry④\">looking up a custom element registry</a> given <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>definition</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\" id=\"ref-for-look-up-a-custom-element-definition\">looking up a custom element definition</a> given <var>registry</var>,\n <var>namespace</var>, <var>localName</var>, and <var>is</var>.\n\n </p>"
        },
        {
          "html": "If <var>definition</var> is non-null, and <var>definition</var>’s\n  <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-name\" id=\"ref-for-concept-custom-element-definition-name\">name</a> is not equal to its\n  <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-local-name\" id=\"ref-for-concept-custom-element-definition-local-name\">local name</a> (i.e., <var>definition</var> represents a\n  <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#customized-built-in-element\" id=\"ref-for-customized-built-in-element②\">customized built-in element</a>):",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>interface</var> be the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-interface\" id=\"ref-for-concept-element-interface\">element interface</a> for <var>localName</var> and the\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①⑦\">HTML namespace</a>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#create-an-element-internal\" id=\"ref-for-create-an-element-internal\">creating an element internal</a> given\n   <var>document</var>, <var>interface</var>, <var>localName</var>, the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①⑧\">HTML namespace</a>,\n   <var>prefix</var>, \"<code>undefined</code>\", <var>is</var>, and <var>registry</var>.\n\n   </p>"
            },
            {
              "html": "If <var>synchronousCustomElements</var> is true, then run this step while catching any\n    exceptions:",
              "rationale": "upgrade",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-upgrade-an-element\" id=\"ref-for-concept-upgrade-an-element②\">Upgrade</a> <var>result</var> using <var>definition</var>.\n    </p>"
                }
              ],
              "additional": [
                {
                  "html": "If this step threw an exception <var>exception</var>:",
                  "rationale": "report",
                  "steps": [
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#report-an-exception\" id=\"ref-for-report-an-exception①\">Report</a> <var>exception</var> for <var>definition</var>’s\n     <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-constructor\" id=\"ref-for-concept-custom-element-definition-constructor\">constructor</a>’s corresponding JavaScript object’s\n     <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm②\">associated realm</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global②\">global object</a>.\n\n     </p>"
                    },
                    {
                      "html": "<p>Set <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-state\" id=\"ref-for-concept-element-custom-element-state②\">custom element state</a> to\n     \"<code>failed</code>\".\n    </p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-upgrade-reaction\" id=\"ref-for-enqueue-a-custom-element-upgrade-reaction\">enqueue a custom element upgrade reaction</a> given <var>result</var> and\n   <var>definition</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "Otherwise, if <var>definition</var> is non-null:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>synchronousCustomElements</var> is true:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>C</var> be <var>definition</var>’s\n     <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-constructor\" id=\"ref-for-concept-custom-element-definition-constructor①\">constructor</a>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-set\" id=\"ref-for-map-set②\">Set</a> the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent⑧\">surrounding agent</a>’s\n     <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#active-custom-element-constructor-map\" id=\"ref-for-active-custom-element-constructor-map\">active custom element constructor map</a>[<var>C</var>] to\n     <var>registry</var>.\n\n     </p>"
                },
                {
                  "html": "Run these steps while catching any exceptions:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#construct-a-callback-function\" id=\"ref-for-construct-a-callback-function\">constructing</a> <var>C</var>, with no\n       arguments.\n\n       </p>"
                    },
                    {
                      "html": "<p>Assert: <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-state\" id=\"ref-for-concept-element-custom-element-state③\">custom element state</a> and\n       <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-definition\" id=\"ref-for-concept-element-custom-element-definition\">custom element definition</a> are initialized.\n\n       </p>"
                    },
                    {
                      "html": "<p>Assert: <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace①④\">namespace</a> is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace①⑨\">HTML namespace</a>.\n\n        </p>"
                    },
                    {
                      "html": "<p>If <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute⑥\">attribute list</a> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty⑥\">is not empty</a>,\n       then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤④\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①③\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥⑧\">DOMException</a></code>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>result</var> has <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑥①\">children</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑤\">throw</a> a\n       \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①④\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥⑨\">DOMException</a></code>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③⓪\">parent</a> is not null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑥\">throw</a> a\n       \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⑤\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦⓪\">DOMException</a></code>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④⑧\">node document</a> is not <var>document</var>, then\n       <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑦\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⑥\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦①\">DOMException</a></code>.\n\n       </p>"
                    },
                    {
                      "html": "<p>If <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name①②\">local name</a> is not equal to\n       <var>localName</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑧\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⑦\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦②\">DOMException</a></code>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Set <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix①②\">namespace prefix</a> to <var>prefix</var>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Set <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-is-value\" id=\"ref-for-concept-element-is-value①\"><code>is</code> value</a> to null.\n\n       </p>"
                    },
                    {
                      "html": "<p>Set <var>result</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry⑦\">custom element registry</a> to\n       <var>registry</var>.\n      </p>"
                    }
                  ],
                  "additional": [
                    {
                      "html": "If any of these steps threw an exception <var>exception</var>:",
                      "rationale": "report",
                      "steps": [
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#report-an-exception\" id=\"ref-for-report-an-exception②\">Report</a> <var>exception</var> for\n       <var>definition</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-constructor\" id=\"ref-for-concept-custom-element-definition-constructor②\">constructor</a>’s corresponding\n       JavaScript object’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-associated-realm\" id=\"ref-for-dfn-associated-realm③\">associated realm</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-realm-global\" id=\"ref-for-concept-realm-global③\">global object</a>.\n\n       </p>"
                        },
                        {
                          "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#create-an-element-internal\" id=\"ref-for-create-an-element-internal①\">creating an element internal</a> given\n       <var>document</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/dom.html#htmlunknownelement\" id=\"ref-for-htmlunknownelement\">HTMLUnknownElement</a></code>, <var>localName</var>, the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②①\">HTML namespace</a>,\n       <var>prefix</var>, \"<code>failed</code>\", null, and <var>registry</var>.\n      </p>"
                        }
                      ]
                    }
                  ]
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-remove\" id=\"ref-for-map-remove\">Remove</a> the <a data-link-type=\"dfn\" href=\"https://tc39.es/ecma262/#surrounding-agent\" id=\"ref-for-surrounding-agent⑨\">surrounding agent</a>’s\n      <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#active-custom-element-constructor-map\" id=\"ref-for-active-custom-element-constructor-map①\">active custom element constructor map</a>[<var>C</var>].\n\n      </p>"
                }
              ]
            },
            {
              "html": "Otherwise:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#create-an-element-internal\" id=\"ref-for-create-an-element-internal②\">creating an element internal</a> given\n     <var>document</var>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/dom.html#htmlelement\" id=\"ref-for-htmlelement①\">HTMLElement</a></code>, <var>localName</var>, the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②②\">HTML namespace</a>,\n     <var>prefix</var>, \"<code>undefined</code>\", null, and <var>registry</var>.\n\n     </p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-upgrade-reaction\" id=\"ref-for-enqueue-a-custom-element-upgrade-reaction①\">Enqueue a custom element upgrade reaction</a> given <var>result</var> and\n     <var>definition</var>.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>interface</var> be the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-interface\" id=\"ref-for-concept-element-interface①\">element interface</a> for <var>localName</var> and\n   <var>namespace</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#create-an-element-internal\" id=\"ref-for-create-an-element-internal③\">creating an element internal</a> given\n   <var>document</var>, <var>interface</var>, <var>localName</var>, <var>namespace</var>,\n   <var>prefix</var>, \"<code>uncustomized</code>\", <var>is</var>, and <var>registry</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>namespace</var> is the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②③\">HTML namespace</a>, and either <var>localName</var> is a\n   <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" id=\"ref-for-valid-custom-element-name①\">valid custom element name</a> or <var>is</var> is non-null, then set <var>result</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-state\" id=\"ref-for-concept-element-custom-element-state④\">custom element state</a> to \"<code>undefined</code>\".\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "create an element internal",
      "href": "https://dom.spec.whatwg.org/#create-an-element-internal",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"create-an-element-internal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create an element internal</dfn> given a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document\" id=\"ref-for-concept-document⑤⑤\">document</a> <var>document</var>, an\ninterface <var>interface</var> a string <var>localName</var>, a string-or-null <var>namespace</var>,\na string-or-null <var>prefix</var>, a string <var>state</var>, a string-or-null <var>is</var>, and\nnull or a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#customelementregistry\" id=\"ref-for-customelementregistry①⑥\">CustomElementRegistry</a></code> object <var>registry</var>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>element</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑧④\">element</a> that implements <var>interface</var>,\n with <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace①⑤\">namespace</a> set to <var>namespace</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace-prefix\" id=\"ref-for-concept-element-namespace-prefix①③\">namespace prefix</a>\n set to <var>prefix</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name①③\">local name</a> set to <var>localName</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry⑧\">custom element registry</a> set to <var>registry</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-state\" id=\"ref-for-concept-element-custom-element-state⑤\">custom element state</a> set to <var>state</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-definition\" id=\"ref-for-concept-element-custom-element-definition①\">custom element definition</a> set to null, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-is-value\" id=\"ref-for-concept-element-is-value②\"><code>is</code> value</a>\n set to <var>is</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document④⑨\">node document</a> set to <var>document</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑦\">Assert</a>: <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute⑦\">attribute list</a>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-is-empty\" id=\"ref-for-list-is-empty⑦\">is empty</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>element</var>.\n</p>"
        }
      ]
    },
    {
      "name": "handle attribute changes",
      "href": "https://dom.spec.whatwg.org/#handle-attribute-changes",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"handle-attribute-changes\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">handle attribute changes</dfn> for an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②⑤\">attribute</a> <var>attribute</var> with\n<var>element</var>, <var>oldValue</var>, and <var>newValue</var>, run these steps:",
      "rationale": "queue",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-mutation-record\" id=\"ref-for-queue-a-mutation-record①\">Queue a mutation record</a> of \"<code>attributes</code>\" for <var>element</var> with\n <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name⑨\">local name</a>, <var>attribute</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace⑦\">namespace</a>, <var>oldValue</var>, « », « », null, and null.\n\n </p>"
        },
        {
          "html": "<p>If <var>element</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom\" id=\"ref-for-concept-element-custom⑦\">custom</a>, then\n <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\" id=\"ref-for-enqueue-a-custom-element-callback-reaction⑤\">enqueue a custom element callback reaction</a> with <var>element</var>, callback name\n \"<code>attributeChangedCallback</code>\", and « <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name①⓪\">local name</a>,\n <var>oldValue</var>, <var>newValue</var>, <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace⑧\">namespace</a> ».\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext②\">attribute change steps</a> with <var>element</var>, <var>attribute</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name①①\">local name</a>, <var>oldValue</var>, <var>newValue</var>, and <var>attribute</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace⑨\">namespace</a>.\n</p>"
        }
      ]
    },
    {
      "name": "change an attribute",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-change",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"change an attribute\" id=\"concept-element-attributes-change\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">change</dfn> an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②⑥\">attribute</a> <var>attribute</var> to <var>value</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>oldValue</var> be <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①①\">value</a>.</p>"
        },
        {
          "html": "<p>Set <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①②\">value</a> to <var>value</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#handle-attribute-changes\" id=\"ref-for-handle-attribute-changes\">Handle attribute changes</a> for <var>attribute</var> with <var>attribute</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element⑥\">element</a>, <var>oldValue</var>, and <var>value</var>.\n</p>"
        }
      ]
    },
    {
      "name": "append an attribute",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-append",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"append an attribute\" id=\"concept-element-attributes-append\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">append</dfn> an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②⑦\">attribute</a> <var>attribute</var> to an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑧⑨\">element</a> <var>element</var>, run these\nsteps:",
      "rationale": "append",
      "steps": [
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append①④\">Append</a> <var>attribute</var> to <var>element</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①⓪\">attribute list</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element⑦\">element</a> to <var>element</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤⓪\">node document</a> to <var>element</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤①\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#handle-attribute-changes\" id=\"ref-for-handle-attribute-changes①\">Handle attribute changes</a> for <var>attribute</var> with <var>element</var>, null, and\n <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①③\">value</a>.\n</p>"
        }
      ]
    },
    {
      "name": "remove an attribute",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-remove",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"remove an attribute\" id=\"concept-element-attributes-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove</dfn> an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②⑧\">attribute</a> <var>attribute</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>element</var> be <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element⑧\">element</a>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑦\">Remove</a> <var>attribute</var> from <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①①\">attribute\n list</a>."
        },
        {
          "html": "<p>Set <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element⑨\">element</a> to null.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#handle-attribute-changes\" id=\"ref-for-handle-attribute-changes②\">Handle attribute changes</a> for <var>attribute</var> with <var>element</var>,\n <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①④\">value</a>, and null.\n</p>"
        }
      ]
    },
    {
      "name": "replace an attribute",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-replace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"replace an attribute\" id=\"concept-element-attributes-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace</dfn> an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute②⑨\">attribute</a> <var>oldAttribute</var> with an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute③⓪\">attribute</a> <var>newAttribute</var>:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>element</var> be <var>oldAttribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element①⓪\">element</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-replace\" id=\"ref-for-list-replace\">Replace</a> <var>oldAttribute</var> by <var>newAttribute</var> in\n <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①②\">attribute list</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>newAttribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element①①\">element</a> to <var>element</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>newAttribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤②\">node document</a> to <var>element</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤③\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>oldAttribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element①②\">element</a> to null.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#handle-attribute-changes\" id=\"ref-for-handle-attribute-changes③\">Handle attribute changes</a> for <var>oldAttribute</var> with <var>element</var>,\n <var>oldAttribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①⑤\">value</a>, and <var>newAttribute</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①⑥\">value</a>.\n</p>"
        }
      ]
    },
    {
      "name": "get an attribute by name",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-get-by-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get an attribute by name</dfn> given a\nstring <var>qualifiedName</var> and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨⓪\">element</a> <var>element</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>element</var> is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②④\">HTML namespace</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤④\">node document</a>\n is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①②\">HTML document</a>, then set <var>qualifiedName</var> to <var>qualifiedName</var> in\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase③\">ASCII lowercase</a>.\n\n </p>"
        },
        {
          "html": "<p>Return the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute③①\">attribute</a> in <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①③\">attribute list</a>\n whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-qualified-name\" id=\"ref-for-concept-attribute-qualified-name②\">qualified name</a> is <var>qualifiedName</var>; otherwise null.\n</p>"
        }
      ]
    },
    {
      "name": "get an attribute by namespace and local name",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-get-by-namespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get an attribute by namespace and local name</dfn>\ngiven null or a string <var>namespace</var>, a string <var>localName</var>, and an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨①\">element</a> <var>element</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>namespace</var> is the empty string, then set it to null.\n\n </p>"
        },
        {
          "html": "<p>Return the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute③②\">attribute</a> in <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①④\">attribute list</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace①⓪\">namespace</a> is <var>namespace</var> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name①②\">local name</a> is\n <var>localName</var>, if any; otherwise null.\n</p>"
        }
      ]
    },
    {
      "name": "get an attribute value",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-get-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-get-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">get an attribute value</dfn> given an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨②\">element</a> <var>element</var>, a string <var>localName</var>, and an optional null or\nstring <var>namespace</var> (default null):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\" id=\"ref-for-concept-element-attributes-get-by-namespace\">getting an attribute</a> given\n <var>namespace</var>, <var>localName</var>, and <var>element</var>.</p>"
        },
        {
          "html": "<p>If <var>attr</var> is null, then return the empty string.</p>"
        },
        {
          "html": "<p>Return <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①⑦\">value</a>.</p>"
        }
      ]
    },
    {
      "name": "set an attribute",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-set",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set an attribute</dfn> given an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute③③\">attribute</a> <var>attr</var> and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨③\">element</a> <var>element</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element①③\">element</a> is neither null nor <var>element</var>,\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑤⑨\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#inuseattributeerror\" id=\"ref-for-inuseattributeerror\">InUseAttributeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>oldAttr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\" id=\"ref-for-concept-element-attributes-get-by-namespace①\">getting an attribute</a> given\n <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace①①\">namespace</a>, <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name①③\">local name</a>, and\n <var>element</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>oldAttr</var> is <var>attr</var>, return <var>attr</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>oldAttr</var> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-replace\" id=\"ref-for-concept-element-attributes-replace\">replace</a>\n <var>oldAttr</var> with <var>attr</var>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-append\" id=\"ref-for-concept-element-attributes-append①\">append</a> <var>attr</var> to <var>element</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>oldAttr</var>.\n</p>"
        }
      ]
    },
    {
      "name": "set an attribute value",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-set-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-set-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set an attribute value</dfn> given an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨④\">element</a> <var>element</var>, a string <var>localName</var>, a string <var>value</var>,\nan optional null or string <var>prefix</var> (default null), and an optional null or string\n<var>namespace</var> (default null):",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>attribute</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\" id=\"ref-for-concept-element-attributes-get-by-namespace②\">getting an attribute</a> given\n <var>namespace</var>, <var>localName</var>, and <var>element</var>."
        },
        {
          "html": "If <var>attribute</var> is null, create an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute③④\">attribute</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace①②\">namespace</a> is\n <var>namespace</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace-prefix\" id=\"ref-for-concept-attribute-namespace-prefix⑤\">namespace prefix</a> is <var>prefix</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name①④\">local name</a> is <var>localName</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value①⑧\">value</a> is <var>value</var>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤⑤\">node document</a> is <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤⑥\">node document</a>, then\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-append\" id=\"ref-for-concept-element-attributes-append②\">append</a> this <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute③⑤\">attribute</a> to <var>element</var>, and then\n return."
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change\" id=\"ref-for-concept-element-attributes-change\">Change</a> <var>attribute</var> to <var>value</var>.\n</p>"
        }
      ]
    },
    {
      "name": "remove an attribute by name",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-remove-by-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove an attribute by name</dfn>\ngiven a string <var>qualifiedName</var> and an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨⑤\">element</a> <var>element</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\" id=\"ref-for-concept-element-attributes-get-by-name\">getting an attribute</a> given <var>qualifiedName</var> and\n <var>element</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>attr</var> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-remove\" id=\"ref-for-concept-element-attributes-remove\">remove</a> <var>attr</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>.\n</p>"
        }
      ]
    },
    {
      "name": "remove an attribute by namespace and local name",
      "href": "https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-element-attributes-remove-by-namespace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove an attribute by namespace and local name</dfn>\ngiven null or a string <var>namespace</var>, a string <var>localName</var>, and an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element⑨⑥\">element</a> <var>element</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\" id=\"ref-for-concept-element-attributes-get-by-namespace③\">getting an attribute</a> given\n <var>namespace</var>, <var>localName</var>, and <var>element</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>attr</var> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-remove\" id=\"ref-for-concept-element-attributes-remove①\">remove</a> <var>attr</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>.\n</p>"
        }
      ]
    },
    {
      "html": "Use these <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext③\">attribute change steps</a> to update an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⓪⓪\">element</a>’s\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-id\" id=\"ref-for-concept-id⑦\">ID</a>:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>localName</var> is <code>id</code>, <var>namespace</var> is null, and\n <var>value</var> is null or the empty string, then unset <var>element</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-id\" id=\"ref-for-concept-id⑧\">ID</a>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, if <var>localName</var> is <code>id</code>, <var>namespace</var> is null, then\n set <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-id\" id=\"ref-for-concept-id⑨\">ID</a> to <var>value</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/getAttribute(qualifiedName)",
      "href": "https://dom.spec.whatwg.org/#dom-element-getattribute",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-getattribute\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getAttribute(<var>qualifiedName</var>)</code></dfn> method\nsteps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\" id=\"ref-for-concept-element-attributes-get-by-name①\">getting an attribute</a> given <var>qualifiedName</var> and\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧⓪\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>attr</var> is null, return null.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value②①\">value</a>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/getAttributeNS(namespace, localName)",
      "href": "https://dom.spec.whatwg.org/#dom-element-getattributens",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-getattributens\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getAttributeNS(<var>namespace</var>, <var>localName</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\" id=\"ref-for-concept-element-attributes-get-by-namespace④\">getting an attribute</a> given\n <var>namespace</var>, <var>localName</var>, and <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧①\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>attr</var> is null, return null.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value②②\">value</a>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/setAttribute(qualifiedName, value)",
      "href": "https://dom.spec.whatwg.org/#dom-element-setattribute",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-setattribute\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setAttribute(<var>qualifiedName</var>, <var>value</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>qualifiedName</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-attribute-local-name\" id=\"ref-for-valid-attribute-local-name②\">valid attribute local name</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⓪\">throw</a> an\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror①④\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦④\">DOMException</a></code>.\n\n  </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧②\">this</a> is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②⑤\">HTML namespace</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤⑦\">node document</a> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①③\">HTML document</a>, then set <var>qualifiedName</var> to <var>qualifiedName</var> in\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase④\">ASCII lowercase</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>attribute</var> be the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤②\">attribute</a> in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧③\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①⑦\">attribute list</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-qualified-name\" id=\"ref-for-concept-attribute-qualified-name①⓪\">qualified name</a> is <var>qualifiedName</var>,\n and null otherwise.\n\n </p>"
        },
        {
          "html": "<p>If <var>attribute</var> is null, create an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤③\">attribute</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name②①\">local name</a> is <var>qualifiedName</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value②③\">value</a> is\n <var>value</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤⑧\">node document</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑤⑨\">node document</a>,\n then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-append\" id=\"ref-for-concept-element-attributes-append③\">append</a> this <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤④\">attribute</a> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧⑤\">this</a>, and then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change\" id=\"ref-for-concept-element-attributes-change①\">Change</a> <var>attribute</var> to <var>value</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/setAttributeNS(namespace, qualifiedName, value)",
      "href": "https://dom.spec.whatwg.org/#dom-element-setattributens",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-setattributens\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setAttributeNS(<var>namespace</var>, <var>qualifiedName</var>, <var>value</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let (<var>namespace</var>, <var>prefix</var>, <var>localName</var>) be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#validate-and-extract\" id=\"ref-for-validate-and-extract②\">validating and extracting</a> <var>namespace</var> and\n <var>qualifiedName</var> given \"<code>element</code>\".\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-set-value\" id=\"ref-for-concept-element-attributes-set-value①\">Set an attribute value</a> for <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧⑥\">this</a> using <var>localName</var>, <var>value</var>,\n and also <var>prefix</var> and <var>namespace</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/hasAttribute(qualifiedName)",
      "href": "https://dom.spec.whatwg.org/#dom-element-hasattribute",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-hasattribute\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>hasAttribute(<var>qualifiedName</var>)</code></dfn> method\nsteps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑧⑨\">this</a> is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②⑥\">HTML namespace</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥⓪\">node document</a> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①④\">HTML document</a>, then set <var>qualifiedName</var> to <var>qualifiedName</var> in\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑤\">ASCII lowercase</a>.\n\n </p>"
        },
        {
          "html": "<p>Return true if <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨⓪\">this</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has⑤\">has</a> an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤⑤\">attribute</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-qualified-name\" id=\"ref-for-concept-attribute-qualified-name①①\">qualified name</a> is <var>qualifiedName</var>; otherwise false.\n</p>"
        }
      ]
    },
    {
      "name": "Element/toggleAttribute(qualifiedName, force)",
      "href": "https://dom.spec.whatwg.org/#dom-element-toggleattribute",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"toggleAttribute(qualifiedName, force)|toggleAttribute(qualifiedName)\" id=\"dom-element-toggleattribute\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>toggleAttribute(<var>qualifiedName</var>, <var>force</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>qualifiedName</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-attribute-local-name\" id=\"ref-for-valid-attribute-local-name③\">valid attribute local name</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥①\">throw</a> an\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror①⑤\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦⑤\">DOMException</a></code>.\n\n  </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨①\">this</a> is in the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②⑦\">HTML namespace</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥①\">node document</a> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①⑤\">HTML document</a>, then set <var>qualifiedName</var> to <var>qualifiedName</var> in\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑥\">ASCII lowercase</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>attribute</var> be the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤⑥\">attribute</a> in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨②\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①⑧\">attribute list</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-qualified-name\" id=\"ref-for-concept-attribute-qualified-name①②\">qualified name</a> is <var>qualifiedName</var>,\n and null otherwise.\n\n </p>"
        },
        {
          "html": "If <var>attribute</var> is null:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>force</var> is not given or is true, create an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤⑦\">attribute</a> whose\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name②②\">local name</a> is <var>qualifiedName</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value②④\">value</a> is the empty\n   string, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥②\">node document</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨③\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥③\">node document</a>, then\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-append\" id=\"ref-for-concept-element-attributes-append④\">append</a> this <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤⑧\">attribute</a> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨④\">this</a>, and then return\n   true.\n\n   </p>"
            },
            {
              "html": "<p>Return false.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Otherwise, if <var>force</var> is not given or is false,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\" id=\"ref-for-concept-element-attributes-remove-by-name①\">remove an attribute</a> given <var>qualifiedName</var> and\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨⑤\">this</a>, and then return false.\n\n </p>"
        },
        {
          "html": "<p>Return true.\n</p>"
        }
      ]
    },
    {
      "name": "Element/hasAttributeNS(namespace, localName)",
      "href": "https://dom.spec.whatwg.org/#dom-element-hasattributens",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-hasattributens\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>hasAttributeNS(<var>namespace</var>, <var>localName</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>namespace</var> is the empty string, then set it to null.\n\n </p>"
        },
        {
          "html": "Return true if <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①⑨⑥\">this</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute-has\" id=\"ref-for-concept-element-attribute-has⑥\">has</a> an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑤⑨\">attribute</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-namespace\" id=\"ref-for-concept-attribute-namespace①⑦\">namespace</a> is <var>namespace</var> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name②③\">local name</a> is\n <var>localName</var>; otherwise false."
        }
      ]
    },
    {
      "name": "Element/removeAttributeNode(attr)",
      "href": "https://dom.spec.whatwg.org/#dom-element-removeattributenode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-removeattributenode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>removeAttributeNode(<var>attr</var>)</code></dfn> method steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪⓪\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attribute\" id=\"ref-for-concept-element-attribute①⑨\">attribute list</a> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain⑥\">contain</a>\n <var>attr</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥②\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror④\">NotFoundError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-remove\" id=\"ref-for-concept-element-attributes-remove②\">Remove</a> <var>attr</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/attachShadow(init)",
      "href": "https://dom.spec.whatwg.org/#dom-element-attachshadow",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-attachshadow\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>attachShadow(<var>init</var>)</code></dfn> method steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>registry</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪①\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥④\">node document</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry⑨\">custom element registry</a>.\n\n </p>"
        },
        {
          "html": "If <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-customelementregistry\" id=\"ref-for-dom-shadowrootinit-customelementregistry①\">customElementRegistry</a></code>\"] is non-null:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>registry</var> to <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-customelementregistry\" id=\"ref-for-dom-shadowrootinit-customelementregistry②\">customElementRegistry</a></code>\"].\n\n   </p>"
            },
            {
              "html": "<p>If <var>registry</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#is-scoped\" id=\"ref-for-is-scoped⑥\">is scoped</a> is false and\n   <var>registry</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥⑤\">node document</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#document-custom-element-registry\" id=\"ref-for-document-custom-element-registry①⓪\">custom element registry</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥③\">throw</a> a\n   \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⑧\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦⑦\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attach-a-shadow-root\" id=\"ref-for-concept-attach-a-shadow-root①\">attach a shadow root</a> with <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪③\">this</a>,\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-mode\" id=\"ref-for-dom-shadowrootinit-mode\">mode</a></code>\"], <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-clonable\" id=\"ref-for-dom-shadowrootinit-clonable\">clonable</a></code>\"],\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-serializable\" id=\"ref-for-dom-shadowrootinit-serializable\">serializable</a></code>\"],\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-delegatesfocus\" id=\"ref-for-dom-shadowrootinit-delegatesfocus\">delegatesFocus</a></code>\"],\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-shadowrootinit-slotassignment\" id=\"ref-for-dom-shadowrootinit-slotassignment\">slotAssignment</a></code>\"], and <var>registry</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root①④\">shadow root</a>.\n</p>"
        }
      ]
    },
    {
      "name": "attach a shadow root",
      "href": "https://dom.spec.whatwg.org/#concept-attach-a-shadow-root",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-attach-a-shadow-root\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">attach a shadow root</dfn>, given an\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⓪④\">element</a> <var>element</var>, a string <var>mode</var>, a boolean <var>clonable</var>,\na boolean <var>serializable</var>, a boolean <var>delegatesFocus</var>, a string\n<var>slotAssignment</var>, and null or a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#customelementregistry\" id=\"ref-for-customelementregistry①⑦\">CustomElementRegistry</a></code> object <var>registry</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace①⑧\">namespace</a> is not the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②⑧\">HTML namespace</a>,\n then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥④\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⑨\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦⑧\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name①⑥\">local name</a> is not a\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#valid-shadow-host-name\" id=\"ref-for-valid-shadow-host-name\">valid shadow host name</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑤\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror②⓪\">NotSupportedError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦⑨\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name①⑦\">local name</a> is a <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" id=\"ref-for-valid-custom-element-name③\">valid custom element name</a>, or\n  <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-is-value\" id=\"ref-for-concept-element-is-value③\"><code>is</code> value</a> is non-null:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>definition</var> be the result of <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\" id=\"ref-for-look-up-a-custom-element-definition①\">looking up a custom element definition</a>\n   given <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-custom-element-registry\" id=\"ref-for-element-custom-element-registry⑨\">custom element registry</a>, its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-namespace\" id=\"ref-for-concept-element-namespace①⑨\">namespace</a>, its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-local-name\" id=\"ref-for-concept-element-local-name①⑧\">local name</a>, and its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-is-value\" id=\"ref-for-concept-element-is-value④\"><code>is</code> value</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>definition</var> is not null and <var>definition</var>’s\n   <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-disable-shadow\" id=\"ref-for-concept-custom-element-definition-disable-shadow\">disable shadow</a> is true, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑥\">throw</a> a\n   \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror②①\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧⓪\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "If <var>element</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#element-shadow-host\" id=\"ref-for-element-shadow-host⑤\">shadow host</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>currentShadowRoot</var> be <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root①⑤\">shadow root</a>.\n\n   </p>"
            },
            {
              "html": "<p>If any of the following are true:\n\n    </p>\n        <ul>\n         <li>\n          <p><var>currentShadowRoot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-declarative\" id=\"ref-for-shadowroot-declarative②\">declarative</a> is false; or\n\n     </p>\n         </li><li>\n          <p><var>currentShadowRoot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode⑧\">mode</a> is not <var>mode</var>,\n    </p>\n        </li></ul>\n        <p>then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑦\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror②②\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧①\">DOMException</a></code>.\n\n   </p>"
            },
            {
              "html": "Otherwise:",
              "rationale": "remove",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove①①\">Remove</a> all of <var>currentShadowRoot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑥②\">children</a>, in\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②③\">tree order</a>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>currentShadowRoot</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-declarative\" id=\"ref-for-shadowroot-declarative③\">declarative</a> to false.\n\n     </p>"
                },
                {
                  "html": "<p>Return.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Let <var>shadow</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-root\" id=\"ref-for-concept-shadow-root④⑨\">shadow root</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥⑥\">node document</a>\n is <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥⑦\">node document</a>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-documentfragment-host\" id=\"ref-for-concept-documentfragment-host①⑤\">host</a> is\n <var>element</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode⑨\">mode</a> is <var>mode</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-delegates-focus\" id=\"ref-for-shadowroot-delegates-focus②\">delegates focus</a> to <var>delegatesFocus</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-custom-element-state\" id=\"ref-for-concept-element-custom-element-state⑥\">custom element state</a> is\n \"<code>precustomized</code>\" or \"<code>custom</code>\", then set <var>shadow</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-available-to-element-internals\" id=\"ref-for-shadowroot-available-to-element-internals\">available to element internals</a> to true.\n\n </p>"
        },
        {
          "html": "<p>Set <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-slot-assignment\" id=\"ref-for-shadowroot-slot-assignment⑥\">slot assignment</a> to <var>slotAssignment</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-declarative\" id=\"ref-for-shadowroot-declarative④\">declarative</a> to false.\n\n </p>"
        },
        {
          "html": "<p>Set <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-clonable\" id=\"ref-for-shadowroot-clonable②\">clonable</a> to <var>clonable</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-serializable\" id=\"ref-for-shadowroot-serializable②\">serializable</a> to <var>serializable</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>shadow</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-custom-element-registry\" id=\"ref-for-shadowroot-custom-element-registry①⓪\">custom element registry</a> to\n <var>registry</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root①⑥\">shadow root</a> to <var>shadow</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/shadowRoot",
      "href": "https://dom.spec.whatwg.org/#dom-element-shadowroot",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-element-shadowroot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>shadowRoot</code></dfn> getter steps are:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>shadow</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-shadow-root\" id=\"ref-for-concept-element-shadow-root①⑦\">shadow root</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>shadow</var> is null or its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#shadowroot-mode\" id=\"ref-for-shadowroot-mode①⓪\">mode</a> is \"<code>closed</code>\",\n then return null.\n\n </p>"
        },
        {
          "html": "<p>Return <var>shadow</var>.\n</p>"
        }
      ]
    },
    {
      "name": "Element/closest(selectors)",
      "href": "https://dom.spec.whatwg.org/#dom-element-closest",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-closest\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>closest(<var>selectors</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#parse-a-selector\" id=\"ref-for-parse-a-selector①\">parse a selector</a> from <var>selectors</var>.\n <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-selectors4\" title=\"Selectors Level 4\">[SELECTORS4]</a>\n\n </p>"
        },
        {
          "html": "<p>If <var>s</var> is failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑧\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror①\">SyntaxError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧②\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>elements</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪⑦\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor⑥\">inclusive ancestors</a> that are\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⓪⑤\">elements</a>, in reverse <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②④\">tree order</a>.\n\n </p>"
        },
        {
          "html": "<p>For each <var>element</var> in <var>elements</var>, if\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#match-a-selector-against-an-element\" id=\"ref-for-match-a-selector-against-an-element\">match a selector against an element</a>, using <var>s</var>, <var>element</var>, and\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#scoping-root\" id=\"ref-for-scoping-root①\">scoping root</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪⑧\">this</a>, returns success, return <var>element</var>. <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-selectors4\" title=\"Selectors Level 4\">[SELECTORS4]</a>\n\n </p>"
        },
        {
          "html": "<p>Return null.\n</p>"
        }
      ]
    },
    {
      "name": "Element/matches(selectors)",
      "href": "https://dom.spec.whatwg.org/#dom-element-matches",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-matches\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>matches(<var>selectors</var>)</code></dfn> and\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-webkitmatchesselector\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>webkitMatchesSelector(<var>selectors</var>)</code></dfn> method steps\nare:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#parse-a-selector\" id=\"ref-for-parse-a-selector②\">parse a selector</a> from <var>selectors</var>.\n <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-selectors4\" title=\"Selectors Level 4\">[SELECTORS4]</a>\n\n </p>"
        },
        {
          "html": "<p>If <var>s</var> is failure, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑥⑨\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror②\">SyntaxError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧③\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#match-a-selector-against-an-element\" id=\"ref-for-match-a-selector-against-an-element①\">match a selector against an element</a>, using <var>s</var>,\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⓪⑨\">this</a>, and <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#scoping-root\" id=\"ref-for-scoping-root②\">scoping root</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①⓪\">this</a>, returns success, then return true; otherwise,\n return false. <a data-link-type=\"biblio\" href=\"https://dom.spec.whatwg.org/#biblio-selectors4\" title=\"Selectors Level 4\">[SELECTORS4]</a>\n</p>"
        }
      ]
    },
    {
      "name": "insert adjacent",
      "href": "https://dom.spec.whatwg.org/#insert-adjacent",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"insert-adjacent\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">insert adjacent</dfn>, given an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①⓪⑥\">element</a> <var>element</var>, string\n<var>where</var>, and a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑤③\">node</a> <var>node</var>, run the steps associated with the first\n<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-case-insensitive\" id=\"ref-for-ascii-case-insensitive②\">ASCII case-insensitive</a> match for <var>where</var>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "\"beforebegin\"",
              "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③③\">parent</a> is null, return null.\n\n  </p>\n     <p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert⑧\">pre-inserting</a> <var>node</var> into <var>element</var>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③④\">parent</a> before <var>element</var>.\n\n </p>"
            },
            {
              "case": "\"afterbegin\"",
              "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert⑨\">pre-inserting</a> <var>node</var> into <var>element</var> before\n <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child⑤\">first child</a>.\n\n </p>"
            },
            {
              "case": "\"beforeend\"",
              "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert①⓪\">pre-inserting</a> <var>node</var> into <var>element</var> before\n null.\n\n </p>"
            },
            {
              "case": "\"afterend\"",
              "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③⑤\">parent</a> is null, return null.\n\n  </p>\n     <p>Return the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert①①\">pre-inserting</a> <var>node</var> into <var>element</var>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③⑥\">parent</a> before <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①②\">next sibling</a>.\n\n </p>"
            },
            {
              "case": "Otherwise",
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⓪\">Throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror③\">SyntaxError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧④\">DOMException</a></code>.\n</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "Element/insertAdjacentText(where, data)",
      "href": "https://dom.spec.whatwg.org/#dom-element-insertadjacenttext",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Element\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-element-insertadjacenttext\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>insertAdjacentText(<var>where</var>, <var>data</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>text</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text②⑧\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑤④\">node</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②③\">data</a>\n is <var>data</var> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥⑧\">node document</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①⑤\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑥⑨\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>Run <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#insert-adjacent\" id=\"ref-for-insert-adjacent①\">insert adjacent</a>, given <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①⑥\">this</a>, <var>where</var>, and <var>text</var>.\n</p>"
        }
      ]
    },
    {
      "name": "NamedNodeMap/item(index)",
      "href": "https://dom.spec.whatwg.org/#dom-namednodemap-item",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"NamedNodeMap\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-namednodemap-item\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>item(<var>index</var>)</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>index</var> is equal to or greater than <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①⑦\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-namednodemap-attribute\" id=\"ref-for-concept-namednodemap-attribute③\">attribute list</a>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑥\">size</a>, then return null.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②①⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-namednodemap-attribute\" id=\"ref-for-concept-namednodemap-attribute④\">attribute list</a>[<var>index</var>].\n</p>"
        }
      ]
    },
    {
      "html": "A <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#namednodemap\" id=\"ref-for-namednodemap⑦\">NamedNodeMap</a></code> object’s <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-supported-property-names\" id=\"ref-for-dfn-supported-property-names①\">supported property names</a> are the return value of running these\nsteps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>names</var> be the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-qualified-name\" id=\"ref-for-concept-attribute-qualified-name①③\">qualified names</a> of the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑥⓪\">attributes</a> in this\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#namednodemap\" id=\"ref-for-namednodemap⑧\">NamedNodeMap</a></code> object’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-namednodemap-attribute\" id=\"ref-for-concept-namednodemap-attribute⑤\">attribute list</a>, with duplicates omitted, in\n order.\n\n </p>"
        },
        {
          "html": "If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#namednodemap\" id=\"ref-for-namednodemap⑨\">NamedNodeMap</a></code> object’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-namednodemap-element\" id=\"ref-for-concept-namednodemap-element①\">element</a> is in the\n  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#html-namespace\" id=\"ref-for-html-namespace②⑨\">HTML namespace</a> and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦⓪\">node document</a> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#html-document\" id=\"ref-for-html-document①⑥\">HTML document</a>, then\n  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⑥\">for each</a> <var>name</var> of <var>names</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>lowercaseName</var> be <var>name</var>, in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑦\">ASCII lowercase</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>lowercaseName</var> is not equal to <var>name</var>, remove <var>name</var> from\n   <var>names</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>names</var>.\n</p>"
        }
      ]
    },
    {
      "name": "NamedNodeMap/removeNamedItem(qualifiedName)",
      "href": "https://dom.spec.whatwg.org/#dom-namednodemap-removenameditem",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"NamedNodeMap\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-namednodemap-removenameditem\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>removeNamedItem(<var>qualifiedName</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\" id=\"ref-for-concept-element-attributes-remove-by-name②\">removing an attribute</a> given\n <var>qualifiedName</var> and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-namednodemap-element\" id=\"ref-for-concept-namednodemap-element⑤\">element</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>attr</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦①\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror⑤\">NotFoundError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧⑤\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>.\n</p>"
        }
      ]
    },
    {
      "name": "NamedNodeMap/removeNamedItemNS(namespace, localName)",
      "href": "https://dom.spec.whatwg.org/#dom-namednodemap-removenameditemns",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"NamedNodeMap\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-namednodemap-removenameditemns\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>removeNamedItemNS(<var>namespace</var>, <var>localName</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>attr</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\" id=\"ref-for-concept-element-attributes-remove-by-namespace①\">removing an attribute</a> given\n <var>namespace</var>, <var>localName</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-namednodemap-element\" id=\"ref-for-concept-namednodemap-element⑥\">element</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>attr</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦②\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror⑥\">NotFoundError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>attr</var>.\n</p>"
        }
      ]
    },
    {
      "name": "set an existing attribute value",
      "href": "https://dom.spec.whatwg.org/#set-an-existing-attribute-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"set-an-existing-attribute-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set an existing attribute value</dfn>, given an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑥⑥\">attribute</a> <var>attribute</var> and\nstring <var>value</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>attribute</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-element\" id=\"ref-for-concept-attribute-element①⑤\">element</a> is null, then set <var>attribute</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-value\" id=\"ref-for-concept-attribute-value②⑦\">value</a> to <var>value</var>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change\" id=\"ref-for-concept-element-attributes-change②\">change</a> <var>attribute</var> to <var>value</var>.\n</p>"
        }
      ]
    },
    {
      "name": "replace data",
      "href": "https://dom.spec.whatwg.org/#concept-cd-replace",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-cd-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">replace data</dfn> of node <var>node</var> with offset\n<var>offset</var>, count <var>count</var>, and data <var>data</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>length</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length⑤\">length</a>."
        },
        {
          "html": "If <var>offset</var> is greater than <var>length</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦③\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror\">IndexSizeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧⑦\">DOMException</a></code>."
        },
        {
          "html": "If <var>offset</var> plus <var>count</var> is greater than <var>length</var>, then set\n <var>count</var> to <var>length</var> minus <var>offset</var>."
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#queue-a-mutation-record\" id=\"ref-for-queue-a-mutation-record②\">Queue a mutation record</a> of \"<code>characterData</code>\" for <var>node</var> with\n null, null, <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②④\">data</a>, « », « », null, and null.\n\n </p>"
        },
        {
          "html": "Insert <var>data</var> into <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②⑤\">data</a> after <var>offset</var>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit\">code units</a>."
        },
        {
          "html": "Let <var>delete offset</var> be <var>offset</var> + <var>data</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length④\">length</a>."
        },
        {
          "html": "Starting from <var>delete offset</var>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit①\">code units</a>, remove\n <var>count</var>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit②\">code units</a> from\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②⑥\">data</a>."
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range⑨\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node⑥\">start node</a> is <var>node</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset⑦\">start offset</a> is greater than <var>offset</var> but less than or equal to\n <var>offset</var> plus <var>count</var>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset⑧\">start offset</a> to\n <var>offset</var>.\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①⓪\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node⑥\">end node</a> is <var>node</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset⑦\">end offset</a> is greater than <var>offset</var> but less than or equal to\n <var>offset</var> plus <var>count</var>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset⑧\">end offset</a> to <var>offset</var>.\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①①\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node⑦\">start node</a> is <var>node</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset⑨\">start offset</a> is greater than <var>offset</var> plus <var>count</var>, increase its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①⓪\">start offset</a> by <var>data</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length⑤\">length</a> and decrease it by\n <var>count</var>.\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①②\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node⑦\">end node</a> is <var>node</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset⑨\">end offset</a> is greater than <var>offset</var> plus <var>count</var>, increase its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①⓪\">end offset</a> by <var>data</var>’s <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-length\" id=\"ref-for-string-length⑥\">length</a> and decrease it by\n <var>count</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③⑦\">parent</a> is non-null, then run the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-children-changed-ext\" id=\"ref-for-concept-node-children-changed-ext②\">children changed steps</a> for <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③⑧\">parent</a>.\n</p>"
        }
      ]
    },
    {
      "name": "CharacterData/substring data",
      "href": "https://dom.spec.whatwg.org/#concept-cd-substring",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"CharacterData, Text, Comment, ProcessingInstruction\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-cd-substring\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">substring data</dfn> with node\n<var>node</var>, offset <var>offset</var>, and count\n<var>count</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>length</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length⑥\">length</a>."
        },
        {
          "html": "If <var>offset</var> is greater than <var>length</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦④\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror①\">IndexSizeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧⑧\">DOMException</a></code>."
        },
        {
          "html": "If <var>offset</var> plus <var>count</var> is\n greater than <var>length</var>, return a string whose value is the\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit③\">code units</a> from the\n <var>offset</var><sup>th</sup>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit④\">code unit</a> to the end of\n <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②⑦\">data</a>, and then\n return."
        },
        {
          "html": "Return a string whose value is the\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit⑤\">code units</a> from the\n <var>offset</var><sup>th</sup>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit⑥\">code unit</a> to the\n <var>offset</var>+<var>count</var><sup>th</sup>\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit⑦\">code unit</a> in <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data②⑧\">data</a>."
        }
      ]
    },
    {
      "name": "split a Text node",
      "href": "https://dom.spec.whatwg.org/#concept-text-split",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"split a Text node\" id=\"concept-text-split\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">split</dfn> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text④③\">Text</a></code>\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑦①\">node</a> <var>node</var> with offset <var>offset</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>length</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①⓪\">length</a>."
        },
        {
          "html": "If <var>offset</var> is greater than <var>length</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑤\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror②\">IndexSizeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧⑨\">DOMException</a></code>."
        },
        {
          "html": "Let <var>count</var> be <var>length</var> minus\n <var>offset</var>."
        },
        {
          "html": "Let <var>new data</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring①\">substringing data</a> with node\n <var>node</var>, offset <var>offset</var>, and count\n <var>count</var>."
        },
        {
          "html": "Let <var>new node</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text④④\">Text</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑦②\">node</a>, with the same\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦②\">node document</a> as\n <var>node</var>. Set <var>new node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data③⑥\">data</a> to <var>new data</var>."
        },
        {
          "html": "Let <var>parent</var> be <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent③⑨\">parent</a>."
        },
        {
          "html": "If <var>parent</var> is not null:",
          "rationale": "insert",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-insert\" id=\"ref-for-concept-node-insert⑨\">Insert</a> <var>new node</var> into <var>parent</var> before <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①⑤\">next sibling</a>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①③\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node⑧\">start node</a> is <var>node</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①①\">start offset</a> is greater than <var>offset</var>, set its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node⑨\">start node</a> to <var>new node</var> and decrease its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①②\">start offset</a>\n   by <var>offset</var>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①④\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node⑧\">end node</a> is <var>node</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①①\">end offset</a> is greater than <var>offset</var>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node⑨\">end node</a>\n   to <var>new node</var> and decrease its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①②\">end offset</a> by <var>offset</var>.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①⑤\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node①⓪\">start node</a> is <var>parent</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①③\">start offset</a> is equal to the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index⑨\">index</a> of <var>node</var> plus 1,\n   increase its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①④\">start offset</a> by 1.\n\n   </p>"
            },
            {
              "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range①⑥\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node①⓪\">end node</a> is <var>parent</var> and\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①③\">end offset</a> is equal to the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①⓪\">index</a> of <var>node</var> plus 1,\n   increase its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①④\">end offset</a> by 1.\n  </p>"
            }
          ]
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace⑨\">Replace data</a> with node\n <var>node</var>, offset <var>offset</var>, count\n <var>count</var>, and data the empty string."
        },
        {
          "html": "Return <var>new node</var>."
        }
      ]
    },
    {
      "name": "boundary point/position",
      "href": "https://dom.spec.whatwg.org/#concept-range-bp-position",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"boundary point\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-bp-position\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">position</dfn> of a\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp⑤\">boundary point</a> (<var>nodeA</var>, <var>offsetA</var>) relative to a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp⑥\">boundary point</a>\n(<var>nodeB</var>, <var>offsetB</var>) is\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"boundary point\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-bp-before\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">before</dfn>,\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"boundary point\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-bp-equal\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">equal</dfn>, or\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"boundary point\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-bp-after\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">after</dfn>, as returned by these steps:",
      "rationale": "assert",
      "steps": [
        {
          "html": "<p>Assert: <var>nodeA</var> and <var>nodeB</var> have the same <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④③\">root</a>.\n\n </p>"
        },
        {
          "html": "If <var>nodeA</var> is <var>nodeB</var>, then return <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-equal\" id=\"ref-for-concept-range-bp-equal\">equal</a> if\n <var>offsetA</var> is <var>offsetB</var>, <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before\">before</a> if <var>offsetA</var>\n is less than <var>offsetB</var>, and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after\">after</a> if <var>offsetA</var> is\n greater than <var>offsetB</var>."
        },
        {
          "html": "<p>If <var>nodeA</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following①②\">following</a> <var>nodeB</var>, then if the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-position\" id=\"ref-for-concept-range-bp-position\">position</a> of (<var>nodeB</var>, <var>offsetB</var>) relative to\n (<var>nodeA</var>, <var>offsetA</var>) is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before①\">before</a>, return\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after①\">after</a>, and if it is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after②\">after</a>, return\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before②\">before</a>.\n\n </p>"
        },
        {
          "html": "If <var>nodeA</var> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-ancestor\" id=\"ref-for-concept-tree-ancestor⑤\">ancestor</a> of <var>nodeB</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>child</var> be <var>nodeB</var>.\n\n   </p>"
            },
            {
              "html": "<p>While <var>child</var> is not a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑥④\">child</a> of <var>nodeA</var>, set\n   <var>child</var> to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④⓪\">parent</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>child</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①①\">index</a> is less than <var>offsetA</var>, then return\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after③\">after</a>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before③\">before</a>.\n</p>"
        }
      ]
    },
    {
      "name": "StaticRange/StaticRange(init)",
      "href": "https://dom.spec.whatwg.org/#dom-staticrange-staticrange",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"StaticRange\" data-dfn-type=\"constructor\" data-export=\"\" data-lt=\"StaticRange(init)|constructor(init)\" id=\"dom-staticrange-staticrange\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>new StaticRange(<var>init</var>)</code></dfn>\nconstructor steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-staticrangeinit-startcontainer\" id=\"ref-for-dom-staticrangeinit-startcontainer\">startContainer</a></code>\"] or\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-staticrangeinit-endcontainer\" id=\"ref-for-dom-staticrangeinit-endcontainer\">endContainer</a></code>\"] is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documenttype\" id=\"ref-for-documenttype②③\">DocumentType</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#attr\" id=\"ref-for-attr③⑧\">Attr</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑦⑦\">node</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑥\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror\">InvalidNodeTypeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨⓪\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②④⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start④\">start</a> to\n (<var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-staticrangeinit-startcontainer\" id=\"ref-for-dom-staticrangeinit-startcontainer①\">startContainer</a></code>\"],\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-staticrangeinit-startoffset\" id=\"ref-for-dom-staticrangeinit-startoffset\">startOffset</a></code>\"]) and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end④\">end</a> to\n (<var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-staticrangeinit-endcontainer\" id=\"ref-for-dom-staticrangeinit-endcontainer①\">endContainer</a></code>\"],\n <var>init</var>[\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-staticrangeinit-endoffset\" id=\"ref-for-dom-staticrangeinit-endoffset\">endOffset</a></code>\"]).\n</p>"
        }
      ]
    },
    {
      "name": "live range pre-remove steps",
      "href": "https://dom.spec.whatwg.org/#live-range-pre-remove-steps",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"live-range-pre-remove-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">live range pre-remove steps</dfn> given a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑧⑧\">node</a> <var>node</var>, are as\nfollows:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④②\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#assert\" id=\"ref-for-assert⑧\">Assert</a>: <var>parent</var> is not null.\n\n </p>"
        },
        {
          "html": "<p>Let <var>index</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①②\">index</a>.\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③⓪\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node②⑤\">start node</a> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant⑤\">inclusive descendant</a> of <var>node</var>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start⑧\">start</a> to\n (<var>parent</var>, <var>index</var>).\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③①\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②③\">end node</a> is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant⑥\">inclusive descendant</a>\n of <var>node</var>, set its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end⑧\">end</a> to (<var>parent</var>, <var>index</var>).\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③②\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node②⑥\">start node</a> is <var>parent</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset①⑨\">start offset</a> is greater than <var>index</var>, decrease its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②⓪\">start offset</a> by 1.\n\n </p>"
        },
        {
          "html": "<p>For each <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③③\">live range</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②④\">end node</a> is <var>parent</var> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset①⑨\">end offset</a> is greater than <var>index</var>, decrease its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②⓪\">end offset</a> by 1.\n</p>"
        }
      ]
    },
    {
      "name": "Range/commonAncestorContainer",
      "href": "https://dom.spec.whatwg.org/#dom-range-commonancestorcontainer",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-range-commonancestorcontainer\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>commonAncestorContainer</code></dfn> getter steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>container</var> be\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node②⑧\">start node</a>."
        },
        {
          "html": "While <var>container</var> is not an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor①①\">inclusive ancestor</a> of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②⑥\">end node</a>, let\n <var>container</var> be <var>container</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④③\">parent</a>."
        },
        {
          "html": "Return <var>container</var>."
        }
      ]
    },
    {
      "name": "Range/set the start",
      "href": "https://dom.spec.whatwg.org/#concept-range-bp-set",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"set the start|set the end\" id=\"concept-range-bp-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set the start or end</dfn>\nof a <var>range</var> to a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp⑧\">boundary point</a> (<var>node</var>, <var>offset</var>), run these\nsteps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype②③\">doctype</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑦\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror①\">InvalidNodeTypeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨①\">DOMException</a></code>."
        },
        {
          "html": "If <var>offset</var> is greater than <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①⑤\">length</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑧\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror③\">IndexSizeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨②\">DOMException</a></code>."
        },
        {
          "html": "Let <var>bp</var> be the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp⑨\">boundary point</a>\n (<var>node</var>, <var>offset</var>)."
        },
        {
          "html": "<dl class=\"switch\">\n      <dt>If these steps were invoked as \"set the start\"\n   \n      </dt><dd>\n       \n      </dd><dt>If these steps were invoked as \"set the end\"\n   \n      </dt><dd>\n       \n     </dd></dl>",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "If these steps were invoked as \"set the start\"",
                  "html": "",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <var>range</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root①\">root</a> is not equal to\n     <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④⑥\">root</a>,\n     or if <var>bp</var> is\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after⑤\">after</a> the\n     <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①⓪\">end</a>, set\n     <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①①\">end</a>\n     to <var>bp</var>."
                    },
                    {
                      "html": "Set <var>range</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①⓪\">start</a> to <var>bp</var>."
                    }
                  ]
                },
                {
                  "case": "If these steps were invoked as \"set the end\"",
                  "html": "",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <var>range</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root②\">root</a> is not equal to\n     <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④⑦\">root</a>,\n     or if <var>bp</var> is\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before⑥\">before</a> the\n     <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①①\">start</a>, set\n     <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①②\">start</a>\n     to <var>bp</var>."
                    },
                    {
                      "html": "Set <var>range</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①②\">end</a> to <var>bp</var>."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Range/setStartBefore(node)",
      "href": "https://dom.spec.whatwg.org/#dom-range-setstartbefore",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-setstartbefore\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setStartBefore(<var>node</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>parent</var> be <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④④\">parent</a>."
        },
        {
          "html": "If <var>parent</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑦⑨\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror②\">InvalidNodeTypeError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨③\">DOMException</a></code>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-set\" id=\"ref-for-concept-range-bp-set②\">Set the start</a> of\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤②\">this</a> to\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①②\">boundary point</a>\n (<var>parent</var>, <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①③\">index</a>)."
        }
      ]
    },
    {
      "name": "Range/setStartAfter(node)",
      "href": "https://dom.spec.whatwg.org/#dom-range-setstartafter",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-setstartafter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setStartAfter(<var>node</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④⑤\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⓪\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror③\">InvalidNodeTypeError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨④\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-set\" id=\"ref-for-concept-range-bp-set③\">Set the start</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤③\">this</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①③\">boundary point</a>\n (<var>parent</var>, <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①④\">index</a> plus 1).\n</p>"
        }
      ]
    },
    {
      "name": "Range/setEndBefore(node)",
      "href": "https://dom.spec.whatwg.org/#dom-range-setendbefore",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-setendbefore\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setEndBefore(<var>node</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>parent</var> be <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④⑥\">parent</a>."
        },
        {
          "html": "If <var>parent</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧①\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror④\">InvalidNodeTypeError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨⑤\">DOMException</a></code>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-set\" id=\"ref-for-concept-range-bp-set④\">Set the end</a> of\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤④\">this</a> to\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①④\">boundary point</a>\n (<var>parent</var>, <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①⑤\">index</a>)."
        }
      ]
    },
    {
      "name": "Range/setEndAfter(node)",
      "href": "https://dom.spec.whatwg.org/#dom-range-setendafter",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-setendafter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setEndAfter(<var>node</var>)</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④⑦\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧②\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror⑤\">InvalidNodeTypeError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-set\" id=\"ref-for-concept-range-bp-set⑤\">Set the end</a> of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤⑤\">this</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①⑤\">boundary point</a>\n (<var>parent</var>, <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①⑥\">index</a> plus 1).\n</p>"
        }
      ]
    },
    {
      "name": "range/select",
      "href": "https://dom.spec.whatwg.org/#concept-range-select",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"range\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-select\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">select</dfn> a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨⓪\">node</a> <var>node</var>\nwithin a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range\" id=\"ref-for-concept-range①②\">range</a> <var>range</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>parent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④⑧\">parent</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>parent</var> is null, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧③\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror⑥\">InvalidNodeTypeError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>index</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①⑦\">index</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①⑤\">start</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①⑥\">boundary point</a>\n (<var>parent</var>, <var>index</var>).\n\n </p>"
        },
        {
          "html": "<p>Set <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①⑤\">end</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①⑦\">boundary point</a>\n (<var>parent</var>, <var>index</var> plus 1).\n</p>"
        }
      ]
    },
    {
      "name": "Range/selectNodeContents(node)",
      "href": "https://dom.spec.whatwg.org/#dom-range-selectnodecontents",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-selectnodecontents\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>selectNodeContents(<var>node</var>)</code></dfn> method steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype②④\">doctype</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧④\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror⑦\">InvalidNodeTypeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨⑧\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>length</var> be the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①⑥\">length</a> of <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①⑥\">start</a> to the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①⑧\">boundary point</a> (<var>node</var>, 0).\n\n </p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①⑥\">end</a> to the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp\" id=\"ref-for-concept-range-bp①⑨\">boundary point</a> (<var>node</var>, <var>length</var>).\n</p>"
        }
      ]
    },
    {
      "name": "Range/compareBoundaryPoints(how, sourceRange)",
      "href": "https://dom.spec.whatwg.org/#dom-range-compareboundarypoints",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-compareboundarypoints\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>compareBoundaryPoints(<var>how</var>, <var>sourceRange</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>how</var> is not one of\n\n  </p>\n     <ul class=\"brief\">\n      <li><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-range-start_to_start\" id=\"ref-for-dom-range-start_to_start\">START_TO_START</a></code>,\n   \n      </li><li><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-range-start_to_end\" id=\"ref-for-dom-range-start_to_end\">START_TO_END</a></code>,\n   \n      </li><li><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-range-end_to_end\" id=\"ref-for-dom-range-end_to_end\">END_TO_END</a></code>, and\n   \n      </li><li><code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-range-end_to_start\" id=\"ref-for-dom-range-end_to_start\">END_TO_START</a></code>,\n  \n     </li></ul>\n     <p>then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑤\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror②③\">NotSupportedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨⑨\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤⑦\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root③\">root</a> is not the same as <var>sourceRange</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root④\">root</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑥\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#wrongdocumenterror\" id=\"ref-for-wrongdocumenterror\">WrongDocumentError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪⓪\">DOMException</a></code>."
        },
        {
          "html": "If <var>how</var> is:",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "START_TO_START:",
                  "html": "Let <var>this point</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤⑧\">this</a>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①⑦\">start</a>.\n    Let <var>other point</var> be <var>sourceRange</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①⑧\">start</a>."
                },
                {
                  "case": "START_TO_END:",
                  "html": "Let <var>this point</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑤⑨\">this</a>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①⑦\">end</a>.\n    Let <var>other point</var> be <var>sourceRange</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start①⑨\">start</a>."
                },
                {
                  "case": "END_TO_END:",
                  "html": "Let <var>this point</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥⓪\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①⑧\">end</a>.\n     Let <var>other point</var> be <var>sourceRange</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end①⑨\">end</a>."
                },
                {
                  "case": "END_TO_START:",
                  "html": "Let <var>this point</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥①\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②⓪\">start</a>.\n     Let <var>other point</var> be <var>sourceRange</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②⓪\">end</a>."
                }
              ]
            }
          ]
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-position\" id=\"ref-for-concept-range-bp-position①\">position</a> of <var>this point</var> relative to\n   <var>other point</var> is",
          "rationale": ".switch",
          "steps": [
            {
              "operation": "switch",
              "steps": [
                {
                  "case": "before",
                  "html": "Return −1."
                },
                {
                  "case": "equal",
                  "html": "Return 0."
                },
                {
                  "case": "after",
                  "html": "Return 1."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Range/deleteContents()",
      "href": "https://dom.spec.whatwg.org/#dom-range-deletecontents",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-deletecontents\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>deleteContents()</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥②\">this</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#range-collapsed\" id=\"ref-for-range-collapsed②\">collapsed</a>, then return.\n\n </p>"
        },
        {
          "html": "Let <var>original start node</var>,\n <var>original start offset</var>, <var>original end node</var>,\n and <var>original end offset</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥③\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node②⑨\">start node</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②①\">start offset</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②⑦\">end node</a>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②①\">end offset</a>, respectively."
        },
        {
          "html": "<p>If <var>original start node</var> is <var>original end node</var> and it is a\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②③\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨①\">node</a>, then\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①②\">replace data</a> with node\n <var>original start node</var>, offset\n <var>original start offset</var>, count\n <var>original end offset</var> minus\n <var>original start offset</var>, and data the empty string, and then return.\n\n </p>"
        },
        {
          "html": "Let <var>nodes to remove</var> be a list of all the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨②\">nodes</a> that are <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contained\" id=\"ref-for-contained①①\">contained</a> in\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥④\">this</a>, in\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②⑧\">tree order</a>, omitting any\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨③\">node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent④⑨\">parent</a> is also\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contained\" id=\"ref-for-contained①②\">contained</a> in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑥⑤\">this</a>."
        },
        {
          "html": "If <var>original start node</var> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor①②\">inclusive ancestor</a> of\n <var>original end node</var>, set\n <var>new node</var> to <var>original start node</var> and\n <var>new offset</var> to <var>original start offset</var>."
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>reference node</var> equal\n   <var>original start node</var>."
            },
            {
              "html": "While <var>reference node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤⓪\">parent</a> is not null and is not an\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor①③\">inclusive ancestor</a> of\n   <var>original end node</var>, set <var>reference node</var>\n   to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤①\">parent</a>."
            },
            {
              "html": "Set <var>new node</var> to the\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤②\">parent</a> of\n    <var>reference node</var>, and <var>new offset</var> to one\n    plus the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①⑧\">index</a> of\n    <var>reference node</var>."
            }
          ]
        },
        {
          "html": "<p>If <var>original start node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②④\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨④\">node</a>, then\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①③\">replace data</a> with node <var>original start node</var>, offset\n <var>original start offset</var>, count <var>original start node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①⑦\">length</a>\n − <var>original start offset</var>, data the empty string.\n\n </p>"
        },
        {
          "html": "<p>For each <var>node</var> in <var>nodes to remove</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order②⑨\">tree order</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove①④\">remove</a> <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>If <var>original end node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②⑤\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨⑤\">node</a>, then\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①④\">replace data</a> with node\n <var>original end node</var>, offset 0, count\n <var>original end offset</var> and data the empty string.\n\n </p>"
        },
        {
          "html": "Set <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②①\">start</a> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②①\">end</a> to\n (<var>new node</var>, <var>new offset</var>)."
        }
      ]
    },
    {
      "name": "live range/extract",
      "href": "https://dom.spec.whatwg.org/#concept-range-extract",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"live range\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-extract\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">extract</dfn> a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③⑤\">live range</a>\n<var>range</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>fragment</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment③⑥\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨⑥\">node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦④\">node document</a> is <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③⓪\">start node</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦⑤\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>range</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#range-collapsed\" id=\"ref-for-range-collapsed③\">collapsed</a>, then return <var>fragment</var>.\n\n </p>"
        },
        {
          "html": "Let <var>original start node</var>, <var>original start offset</var>,\n <var>original end node</var>, and <var>original end offset</var> be\n <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③①\">start node</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②②\">start offset</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②⑧\">end node</a>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②②\">end offset</a>, respectively."
        },
        {
          "html": "If <var>original start node</var> is <var>original end node</var> and it is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②⑥\">CharacterData</a></code>\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨⑦\">node</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone⑤\">clone</a> of\n   <var>original start node</var>."
            },
            {
              "html": "Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④⓪\">data</a> of\n   <var>clone</var> to the result of\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring②\">substringing data</a> with node\n   <var>original start node</var>, offset\n   <var>original start offset</var>, and count\n   <var>original end offset</var> minus\n   <var>original start offset</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①②\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①⑤\">Replace data</a> with node\n   <var>original start node</var>, offset\n   <var>original start offset</var>, count\n   <var>original end offset</var> minus\n   <var>original start offset</var>, and data the empty string."
            },
            {
              "html": "Return <var>fragment</var>."
            }
          ]
        },
        {
          "html": "Let <var>common ancestor</var> be\n <var>original start node</var>."
        },
        {
          "html": "While <var>common ancestor</var> is not an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor①⑤\">inclusive ancestor</a> of\n <var>original end node</var>, set <var>common ancestor</var> to\n its own <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤④\">parent</a>."
        },
        {
          "html": "Let <var>first partially contained child</var> be null."
        },
        {
          "html": "If <var>original start node</var> is <em>not</em> an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor①⑥\">inclusive ancestor</a> of\n <var>original end node</var>, set <var>first partially contained child</var>\n to the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑦⓪\">child</a> of\n <var>common ancestor</var> that is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#partially-contained\" id=\"ref-for-partially-contained⑤\">partially contained</a> in\n <var>range</var>."
        },
        {
          "html": "Let <var>last partially contained child</var> be null."
        },
        {
          "html": "If <var>original end node</var> is <em>not</em> an\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor①⑦\">inclusive ancestor</a> of\n  <var>original start node</var>, set\n  <var>last partially contained child</var> to the last\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑦①\">child</a> of <var>common ancestor</var> that is\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#partially-contained\" id=\"ref-for-partially-contained⑥\">partially contained</a> in <var>range</var>."
        },
        {
          "html": "Let <var>contained children</var> be a list of all\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑦④\">children</a> of\n <var>common ancestor</var> that are <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contained\" id=\"ref-for-contained①③\">contained</a> in\n <var>range</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order③⓪\">tree order</a>."
        },
        {
          "html": "<p>If any member of <var>contained children</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype②⑤\">doctype</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑦\">throw</a> a\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror②④\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪①\">DOMException</a></code>.\n\n  </p>"
        },
        {
          "html": "If <var>original start node</var> is an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②⓪\">inclusive ancestor</a> of\n <var>original end node</var>, set <var>new node</var> to\n <var>original start node</var> and <var>new offset</var> to\n <var>original start offset</var>."
        },
        {
          "html": "Otherwise:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>reference node</var> equal <var>original start node</var>."
            },
            {
              "html": "While <var>reference node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤⑤\">parent</a> is not null and is not an\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②①\">inclusive ancestor</a> of\n   <var>original end node</var>, set <var>reference node</var> to its\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤⑥\">parent</a>."
            },
            {
              "html": "Set <var>new node</var> to the\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤⑦\">parent</a> of <var>reference node</var>, and\n    <var>new offset</var> to one plus <var>reference node</var>’s\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index①⑨\">index</a>."
            }
          ]
        },
        {
          "html": "If <var>first partially contained child</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②⑦\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨⑧\">node</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>clone</var> be a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone⑥\">clone</a> of\n   <var>original start node</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④①\">data</a> of <var>clone</var> to the result of\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring③\">substringing data</a> with node <var>original start node</var>, offset\n   <var>original start offset</var>, and count <var>original start node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①⑧\">length</a> − <var>original start offset</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①③\">Append</a> <var>clone</var> to <var>fragment</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①⑥\">Replace data</a> with node <var>original start node</var>, offset\n   <var>original start offset</var>, count <var>original start node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length①⑨\">length</a>\n   − <var>original start offset</var>, and data the empty string.\n  </p>"
            }
          ]
        },
        {
          "html": "Otherwise, if <var>first partially contained child</var> is not\n  null:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone⑦\">clone</a> of\n   <var>first partially contained child</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①④\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "Let <var>subrange</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③⑥\">live range</a>\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②②\">start</a> is\n   (<var>original start node</var>, <var>original start offset</var>) and\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②②\">end</a> is\n   (<var>first partially contained child</var>, <var>first partially contained child</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②⓪\">length</a>)."
            },
            {
              "html": "<p>Let <var>subfragment</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-extract\" id=\"ref-for-concept-range-extract\">extracting</a>\n   <var>subrange</var>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①⑤\">Append</a> <var>subfragment</var> to\n   <var>clone</var>."
            }
          ]
        },
        {
          "html": "For each <var>contained child</var> in <var>contained children</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①⑥\">append</a> <var>contained child</var> to\n <var>fragment</var>."
        },
        {
          "html": "If <var>last partially contained child</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②⑧\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node①⑨⑨\">node</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone⑧\">clone</a> of\n   <var>original end node</var>."
            },
            {
              "html": "Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④②\">data</a> of\n   <var>clone</var> to the result of\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring④\">substringing data</a> with node\n   <var>original end node</var>, offset 0, and count\n   <var>original end offset</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①⑦\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-replace\" id=\"ref-for-concept-cd-replace①⑦\">Replace data</a> with node\n   <var>original end node</var>, offset 0, count\n   <var>original end offset</var>, and data the empty string."
            }
          ]
        },
        {
          "html": "Otherwise, if <var>last partially contained child</var> is not\n  null:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone⑨\">clone</a> of\n   <var>last partially contained child</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①⑧\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "Let <var>subrange</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③⑦\">live range</a>\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②③\">start</a> is\n   (<var>last partially contained child</var>, 0) and whose\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②③\">end</a> is\n   (<var>original end node</var>, <var>original end offset</var>)."
            },
            {
              "html": "<p>Let <var>subfragment</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-extract\" id=\"ref-for-concept-range-extract①\">extracting</a>\n   <var>subrange</var>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append①⑨\">Append</a> <var>subfragment</var> to\n   <var>clone</var>."
            }
          ]
        },
        {
          "html": "Set <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②④\">start</a> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②④\">end</a> to\n (<var>new node</var>, <var>new offset</var>)."
        },
        {
          "html": "Return <var>fragment</var>."
        }
      ]
    },
    {
      "name": "live range/clone the contents",
      "href": "https://dom.spec.whatwg.org/#concept-range-clone",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"live range\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"clone the contents|cloning the contents\" id=\"concept-range-clone\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">clone the contents</dfn>\nof a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③⑧\">live range</a> <var>range</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>fragment</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment③⑦\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪⓪\">node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦⑥\">node document</a> is <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③②\">start node</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document⑦⑦\">node document</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>range</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#range-collapsed\" id=\"ref-for-range-collapsed④\">collapsed</a>, then return <var>fragment</var>.\n\n </p>"
        },
        {
          "html": "Let <var>original start node</var>, <var>original start offset</var>,\n <var>original end node</var>, and <var>original end offset</var> be\n <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③③\">start node</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②③\">start offset</a>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node②⑨\">end node</a>, and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②③\">end offset</a>, respectively."
        },
        {
          "html": "If <var>original start node</var> is <var>original end node</var> and it is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata②⑨\">CharacterData</a></code>\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪①\">node</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①⓪\">clone</a> of\n   <var>original start node</var>."
            },
            {
              "html": "Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④③\">data</a> of\n   <var>clone</var> to the result of\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring⑤\">substringing data</a> with node\n   <var>original start node</var>, offset\n   <var>original start offset</var>, and count\n   <var>original end offset</var> minus\n   <var>original start offset</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②⓪\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "Return <var>fragment</var>."
            }
          ]
        },
        {
          "html": "Let <var>common ancestor</var> be\n <var>original start node</var>."
        },
        {
          "html": "While <var>common ancestor</var> is not an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②③\">inclusive ancestor</a> of\n <var>original end node</var>, set\n <var>common ancestor</var> to its own\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑤⑨\">parent</a>."
        },
        {
          "html": "Let <var>first partially contained child</var> be null."
        },
        {
          "html": "If <var>original start node</var> is <em>not</em> an\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②④\">inclusive ancestor</a> of\n <var>original end node</var>, set <var>first partially contained child</var>\n to the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑦⑤\">child</a> of\n <var>common ancestor</var> that is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#partially-contained\" id=\"ref-for-partially-contained⑧\">partially contained</a> in\n <var>range</var>."
        },
        {
          "html": "Let <var>last partially contained child</var> be null."
        },
        {
          "html": "If <var>original end node</var> is <em>not</em> an\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②⑤\">inclusive ancestor</a> of\n  <var>original start node</var>, set\n  <var>last partially contained child</var> to the last\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑦⑥\">child</a> of <var>common ancestor</var> that is\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#partially-contained\" id=\"ref-for-partially-contained⑨\">partially contained</a> in <var>range</var>."
        },
        {
          "html": "Let <var>contained children</var> be a list of all\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑦⑨\">children</a> of\n <var>common ancestor</var> that are <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contained\" id=\"ref-for-contained①④\">contained</a> in\n <var>range</var>, in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order③①\">tree order</a>."
        },
        {
          "html": "<p>If any member of <var>contained children</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype②⑦\">doctype</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑧\">throw</a> a\n  \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror②⑤\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪②\">DOMException</a></code>.\n\n  </p>"
        },
        {
          "html": "If <var>first partially contained child</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata③⓪\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪②\">node</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>clone</var> be a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①①\">clone</a> of\n   <var>original start node</var>.\n\n   </p>"
            },
            {
              "html": "<p>Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④④\">data</a> of <var>clone</var> to the result of\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring⑥\">substringing data</a> with node <var>original start node</var>, offset\n   <var>original start offset</var>, and count <var>original start node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②①\">length</a> − <var>original start offset</var>.\n\n   </p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②①\">Append</a> <var>clone</var> to <var>fragment</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "Otherwise, if <var>first partially contained child</var> is not\n  null:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①②\">clone</a> of\n   <var>first partially contained child</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②②\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "Let <var>subrange</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range③⑨\">live range</a>\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②⑤\">start</a> is\n   (<var>original start node</var>, <var>original start offset</var>) and\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②⑤\">end</a> is\n   (<var>first partially contained child</var>, <var>first partially contained child</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②②\">length</a>)."
            },
            {
              "html": "<p>Let <var>subfragment</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-clone\" id=\"ref-for-concept-range-clone\">cloning the contents</a>\n   of <var>subrange</var>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②③\">Append</a> <var>subfragment</var> to\n   <var>clone</var>."
            }
          ]
        },
        {
          "html": "For each <var>contained child</var> in\n  <var>contained children</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①③\">clone</a> of\n   <var>contained child</var> with the <i>clone children flag</i> set."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②④\">Append</a> <var>clone</var> to\n   <var>fragment</var>."
            }
          ]
        },
        {
          "html": "If <var>last partially contained child</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#characterdata\" id=\"ref-for-characterdata③①\">CharacterData</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪③\">node</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①④\">clone</a> of\n   <var>original end node</var>."
            },
            {
              "html": "Set the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④⑤\">data</a> of\n   <var>clone</var> to the result of\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-substring\" id=\"ref-for-concept-cd-substring⑦\">substringing data</a> with node\n   <var>original end node</var>, offset 0, and count\n   <var>original end offset</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②⑤\">Append</a> <var>clone</var> to\n   <var>fragment</var>."
            }
          ]
        },
        {
          "html": "Otherwise, if <var>last partially contained child</var> is not\n  null:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>clone</var> be a\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-clone\" id=\"ref-for-concept-node-clone①⑤\">clone</a> of\n   <var>last partially contained child</var>."
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②⑥\">Append</a> <var>clone</var>\n   to <var>fragment</var>."
            },
            {
              "html": "Let <var>subrange</var> be a new <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range④⓪\">live range</a>\n   whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②⑥\">start</a> is\n   (<var>last partially contained child</var>, 0) and whose\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②⑥\">end</a> is\n   (<var>original end node</var>, <var>original end offset</var>)."
            },
            {
              "html": "<p>Let <var>subfragment</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-clone\" id=\"ref-for-concept-range-clone①\">cloning the contents</a>\n   of <var>subrange</var>.\n\n   </p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②⑦\">Append</a> <var>subfragment</var> to\n   <var>clone</var>."
            }
          ]
        },
        {
          "html": "Return <var>fragment</var>."
        }
      ]
    },
    {
      "name": "live range/insert",
      "href": "https://dom.spec.whatwg.org/#concept-range-insert",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"live range\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-range-insert\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">insert</dfn> a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪④\">node</a>\n<var>node</var> into a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-live-range\" id=\"ref-for-concept-live-range④①\">live range</a> <var>range</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③④\">start node</a> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#processinginstruction\" id=\"ref-for-processinginstruction①⑦\">ProcessingInstruction</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#comment\" id=\"ref-for-comment①⑦\">Comment</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪⑤\">node</a>, is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text④⑨\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪⑥\">node</a> whose <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥⓪\">parent</a> is null, or is\n <var>node</var>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑧⑨\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror②⑥\">HierarchyRequestError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪③\">DOMException</a></code>."
        },
        {
          "html": "Let <var>referenceNode</var> be null."
        },
        {
          "html": "If <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③⑤\">start node</a>\n is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤⓪\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪⑦\">node</a>,\n set <var>referenceNode</var> to that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤①\">Text</a></code>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪⑧\">node</a>."
        },
        {
          "html": "Otherwise, set <var>referenceNode</var> to the\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑧⓪\">child</a> of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③⑥\">start node</a> whose\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index②⓪\">index</a> is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②④\">start offset</a>, and null if\n there is no such <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑧①\">child</a>."
        },
        {
          "html": "Let <var>parent</var> be <var>range</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③⑦\">start node</a> if <var>referenceNode</var>\n is null, and <var>referenceNode</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥①\">parent</a> otherwise."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\" id=\"ref-for-concept-node-ensure-pre-insertion-validity②\">Ensure pre-insert validity</a> of <var>node</var> into <var>parent</var> before\n <var>referenceNode</var>."
        },
        {
          "html": "If <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③⑧\">start node</a> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤②\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②⓪⑨\">node</a>, set\n <var>referenceNode</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-text-split\" id=\"ref-for-concept-text-split③\">splitting</a> it with\n offset <var>range</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②⑤\">start offset</a>."
        },
        {
          "html": "If <var>node</var> is <var>referenceNode</var>, set <var>referenceNode</var> to its\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①⑥\">next sibling</a>."
        },
        {
          "html": "<p>If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥②\">parent</a> is non-null, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-remove\" id=\"ref-for-concept-node-remove①⑤\">remove</a>\n <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>newOffset</var> be <var>parent</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②③\">length</a> if\n <var>referenceNode</var> is null; otherwise <var>referenceNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index②①\">index</a>.\n\n </p>"
        },
        {
          "html": "<p>Increase <var>newOffset</var> by <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②④\">length</a> if <var>node</var>\n is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment③⑧\">DocumentFragment</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①⓪\">node</a>; otherwise 1.\n\n </p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-pre-insert\" id=\"ref-for-concept-node-pre-insert①②\">Pre-insert</a>\n <var>node</var> into <var>parent</var> before <var>referenceNode</var>."
        },
        {
          "html": "<p>If <var>range</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#range-collapsed\" id=\"ref-for-range-collapsed⑤\">collapsed</a>, then set <var>range</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②⑦\">end</a> to (<var>parent</var>, <var>newOffset</var>).\n</p>"
        }
      ]
    },
    {
      "name": "Range/surroundContents(newParent)",
      "href": "https://dom.spec.whatwg.org/#dom-range-surroundcontents",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-surroundcontents\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>surroundContents(<var>newParent</var>)</code></dfn> method steps\nare:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If a non-<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤③\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①①\">node</a> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#partially-contained\" id=\"ref-for-partially-contained①①\">partially contained</a> in\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦⓪\">this</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⓪\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪④\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>newParent</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#document\" id=\"ref-for-document②①\">Document</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documenttype\" id=\"ref-for-documenttype②④\">DocumentType</a></code>, or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentfragment\" id=\"ref-for-documentfragment③⑨\">DocumentFragment</a></code>\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①②\">node</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨①\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror⑧\">InvalidNodeTypeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪⑤\">DOMException</a></code>.\n\n  </p>"
        },
        {
          "html": "<p>Let <var>fragment</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-extract\" id=\"ref-for-concept-range-extract③\">extracting</a> <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦①\">this</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>newParent</var> has <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑧②\">children</a>, then <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-replace-all\" id=\"ref-for-concept-node-replace-all②\">replace all</a> with\n null within <var>newParent</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-insert\" id=\"ref-for-concept-range-insert①\">Insert</a> <var>newParent</var> into <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦②\">this</a>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-append\" id=\"ref-for-concept-node-append②⑧\">Append</a> <var>fragment</var> to <var>newParent</var>.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-select\" id=\"ref-for-concept-range-select①\">Select</a> <var>newParent</var> within <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦③\">this</a>.\n</p>"
        }
      ]
    },
    {
      "name": "Range/isPointInRange(node, offset)",
      "href": "https://dom.spec.whatwg.org/#dom-range-ispointinrange",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-ispointinrange\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>isPointInRange(<var>node</var>, <var>offset</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④⑧\">root</a> is different from <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦⑤\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root⑦\">root</a>, return false."
        },
        {
          "html": "If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype②⑨\">doctype</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨②\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror⑨\">InvalidNodeTypeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪⑥\">DOMException</a></code>."
        },
        {
          "html": "<p>If <var>offset</var> is greater than <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②⑤\">length</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨③\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror④\">IndexSizeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If (<var>node</var>, <var>offset</var>) is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before⑧\">before</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②⑧\">start</a> or\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after⑦\">after</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end②⑨\">end</a>, return false."
        },
        {
          "html": "Return true."
        }
      ]
    },
    {
      "name": "Range/comparePoint(node, offset)",
      "href": "https://dom.spec.whatwg.org/#dom-range-comparepoint",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-comparepoint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>comparePoint(<var>node</var>, <var>offset</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root④⑨\">root</a> is different from <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦⑥\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root⑧\">root</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨④\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#wrongdocumenterror\" id=\"ref-for-wrongdocumenterror①\">WrongDocumentError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪⑧\">DOMException</a></code>."
        },
        {
          "html": "If <var>node</var> is a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-doctype\" id=\"ref-for-concept-doctype③⓪\">doctype</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑤\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidnodetypeerror\" id=\"ref-for-invalidnodetypeerror①⓪\">InvalidNodeTypeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪⑨\">DOMException</a></code>."
        },
        {
          "html": "<p>If <var>offset</var> is greater than <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-length\" id=\"ref-for-concept-node-length②⑥\">length</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑥\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror⑤\">IndexSizeError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①①⓪\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If (<var>node</var>, <var>offset</var>) is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before⑨\">before</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start②⑨\">start</a>, return −1."
        },
        {
          "html": "If (<var>node</var>, <var>offset</var>) is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after⑧\">after</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end③⓪\">end</a>, return 1."
        },
        {
          "html": "Return 0."
        }
      ]
    },
    {
      "name": "Range/intersectsNode(node)",
      "href": "https://dom.spec.whatwg.org/#dom-range-intersectsnode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-range-intersectsnode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>intersectsNode(<var>node</var>)</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-root\" id=\"ref-for-concept-tree-root⑤⓪\">root</a>\n is different from <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦⑦\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-root\" id=\"ref-for-concept-range-root⑨\">root</a>, return false."
        },
        {
          "html": "Let <var>parent</var> be <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥③\">parent</a>."
        },
        {
          "html": "If <var>parent</var> is null, return true."
        },
        {
          "html": "Let <var>offset</var> be <var>node</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-index\" id=\"ref-for-concept-tree-index②②\">index</a>."
        },
        {
          "html": "If (<var>parent</var>, <var>offset</var>) is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-before\" id=\"ref-for-concept-range-bp-before①⓪\">before</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end\" id=\"ref-for-concept-range-end③①\">end</a> and (<var>parent</var>,\n <var>offset</var> plus 1) is\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-bp-after\" id=\"ref-for-concept-range-bp-after⑨\">after</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start\" id=\"ref-for-concept-range-start③⓪\">start</a>, return true."
        },
        {
          "html": "Return false."
        }
      ]
    },
    {
      "name": "Range/stringificationbehavior",
      "href": "https://dom.spec.whatwg.org/#dom-range-stringifier",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"Range\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"stringificationbehavior\" id=\"dom-range-stringifier\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">stringification behavior</dfn> must run\nthese steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be the empty string.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node③⑨\">start node</a> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑦⑨\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node③⓪\">end node</a> and\n it is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤④\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①④\">node</a>, then return the substring of that <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤⑤\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①⑤\">node</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④⑥\">data</a> beginning at <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧⓪\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②⑥\">start offset</a> and ending\n at <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧①\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②④\">end offset</a>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-node\" id=\"ref-for-concept-range-start-node④⓪\">start node</a> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤⑥\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①⑥\">node</a>, then append\n the substring of that <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①⑦\">node</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④⑦\">data</a> from <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧③\">this</a>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-start-offset\" id=\"ref-for-concept-range-start-offset②⑦\">start offset</a> until the end to <var>s</var>.\n\n </p>"
        },
        {
          "html": "<p>Append the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string-concatenate\" id=\"ref-for-string-concatenate⑤\">concatenation</a> of the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④⑧\">data</a> of all\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤⑦\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①⑧\">nodes</a> that are <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#contained\" id=\"ref-for-contained①⑤\">contained</a> in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧④\">this</a>, in\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order③②\">tree order</a>, to <var>s</var>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-node\" id=\"ref-for-concept-range-end-node③①\">end node</a> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#text\" id=\"ref-for-text⑤⑧\">Text</a></code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②①⑨\">node</a>, then\n append the substring of that <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②⓪\">node</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data④⑨\">data</a> from its start until\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑧⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-range-end-offset\" id=\"ref-for-concept-range-end-offset②⑤\">end offset</a> to <var>s</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>s</var>.\n</p>"
        }
      ]
    },
    {
      "name": "filter",
      "href": "https://dom.spec.whatwg.org/#concept-node-filter",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-node-filter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">filter</dfn> a <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②③\">node</a> <var>node</var> within\na <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#nodeiterator\" id=\"ref-for-nodeiterator⑦\">NodeIterator</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#treewalker\" id=\"ref-for-treewalker⑤\">TreeWalker</a></code> object <var>traverser</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>traverser</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-active\" id=\"ref-for-concept-traversal-active\">active flag</a> is set, then throw an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①①①\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>n</var> be <var>node</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-node-nodetype\" id=\"ref-for-dom-node-nodetype②\">nodeType</a></code> attribute value − 1.\n\n </p>"
        },
        {
          "html": "<p>If the <var>n</var><sup>th</sup> bit (where 0 is the least significant bit) of\n <var>traverser</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-whattoshow\" id=\"ref-for-concept-traversal-whattoshow②\">whatToShow</a> is not set, then return\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_skip\" id=\"ref-for-dom-nodefilter-filter_skip\">FILTER_SKIP</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>traverser</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-filter\" id=\"ref-for-concept-traversal-filter②\">filter</a> is null, then return\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept\">FILTER_ACCEPT</a></code>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>traverser</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-active\" id=\"ref-for-concept-traversal-active①\">active flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>result</var> be the return value of <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#call-a-user-objects-operation\" id=\"ref-for-call-a-user-objects-operation①\">call a user object’s operation</a> with\n <var>traverser</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-filter\" id=\"ref-for-concept-traversal-filter③\">filter</a>, \"<code>acceptNode</code>\", and\n « <var>node</var> ». If this throws an exception, then unset <var>traverser</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-active\" id=\"ref-for-concept-traversal-active②\">active flag</a> and rethrow the exception.\n\n </p>"
        },
        {
          "html": "<p>Unset <var>traverser</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-active\" id=\"ref-for-concept-traversal-active③\">active flag</a>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    },
    {
      "name": "NodeIterator pre-remove steps",
      "href": "https://dom.spec.whatwg.org/#nodeiterator-pre-removing-steps",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"nodeiterator-pre-removing-steps\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>NodeIterator</code> pre-remove steps</dfn>\ngiven a <var>nodeIterator</var> and <var>toBeRemovedNode</var>, are as follows:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>toBeRemovedNode</var> is not an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\" id=\"ref-for-concept-tree-inclusive-ancestor②⑧\">inclusive ancestor</a> of\n <var>nodeIterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-reference\" id=\"ref-for-nodeiterator-reference①\">reference</a>, or <var>toBeRemovedNode</var> is\n <var>nodeIterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root⑥\">root</a>, then return.\n\n </p>"
        },
        {
          "html": "If <var>nodeIterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pointer-before-reference\" id=\"ref-for-nodeiterator-pointer-before-reference①\">pointer before reference</a> is true:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>next</var> be <var>toBeRemovedNode</var>’s first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following①③\">following</a>\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②⑥\">node</a> that is an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant⑦\">inclusive descendant</a> of <var>nodeIterator</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root⑦\">root</a> and is not an <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant⑧\">inclusive descendant</a> of\n   <var>toBeRemovedNode</var>, and null if there is no such <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②⑦\">node</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>next</var> is non-null, then set <var>nodeIterator</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-reference\" id=\"ref-for-nodeiterator-reference②\">reference</a> to <var>next</var> and return.\n\n   </p>"
            },
            {
              "html": "<p>Otherwise, set <var>nodeIterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pointer-before-reference\" id=\"ref-for-nodeiterator-pointer-before-reference②\">pointer before reference</a> to\n    false.\n\n    </p>"
            }
          ]
        },
        {
          "html": "<p>Set <var>nodeIterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-reference\" id=\"ref-for-nodeiterator-reference③\">reference</a> to\n <var>toBeRemovedNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥④\">parent</a>, if <var>toBeRemovedNode</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①⓪\">previous sibling</a> is null, and to the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-inclusive-descendant\" id=\"ref-for-concept-tree-inclusive-descendant⑨\">inclusive descendant</a> of\n <var>toBeRemovedNode</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①①\">previous sibling</a> that appears last in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-order\" id=\"ref-for-concept-tree-order③③\">tree order</a>\n otherwise.\n</p>"
        }
      ]
    },
    {
      "name": "NodeIterator/traverse",
      "href": "https://dom.spec.whatwg.org/#concept-nodeiterator-traverse",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"NodeIterator\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-nodeiterator-traverse\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">traverse</dfn>, given a\n<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#nodeiterator\" id=\"ref-for-nodeiterator①④\">NodeIterator</a></code> object <var>iterator</var> and a direction <var>direction</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-reference\" id=\"ref-for-nodeiterator-reference⑤\">reference</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>beforeNode</var> be <var>iterator</var>’s\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pointer-before-reference\" id=\"ref-for-nodeiterator-pointer-before-reference④\">pointer before reference</a>.\n\n </p>"
        },
        {
          "html": "While true:",
          "rationale": "branch",
          "steps": [
            {
              "html": "Branch on <var>direction</var>:",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": "next",
                      "html": "<p>If <var>beforeNode</var> is false, then set <var>node</var> to the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②⑧\">node</a>\n      <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-following\" id=\"ref-for-concept-tree-following①④\">following</a> <var>node</var> in <var>iterator</var>’s\n      <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#iterator-collection\" id=\"ref-for-iterator-collection\">iterator collection</a>. If there is no such <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②②⑨\">node</a>, then\n      return null.\n\n      </p>\n         <p>If <var>beforeNode</var> is true, then set it to false.\n\n     </p>"
                    },
                    {
                      "case": "previous",
                      "html": "<p>If <var>beforeNode</var> is true, then set <var>node</var> to the first <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②③⓪\">node</a>\n      <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-preceding\" id=\"ref-for-concept-tree-preceding①②\">preceding</a> <var>node</var> in <var>iterator</var>’s\n      <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#iterator-collection\" id=\"ref-for-iterator-collection①\">iterator collection</a>. If there is no such <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node\" id=\"ref-for-concept-node②③①\">node</a>, then\n      return null.\n\n      </p>\n         <p>If <var>beforeNode</var> is false, then set it to true.\n    </p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Let <var>result</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter\">filtering</a> <var>node</var> within\n   <var>iterator</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept①\">FILTER_ACCEPT</a></code>, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break②\">break</a>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Set <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-reference\" id=\"ref-for-nodeiterator-reference⑥\">reference</a> to <var>node</var>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>iterator</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#nodeiterator-pointer-before-reference\" id=\"ref-for-nodeiterator-pointer-before-reference⑤\">pointer before reference</a> to\n <var>beforeNode</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>node</var>.\n</p>"
        }
      ]
    },
    {
      "name": "TreeWalker/parentNode()",
      "href": "https://dom.spec.whatwg.org/#dom-treewalker-parentnode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"TreeWalker\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-treewalker-parentnode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>parentNode()</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②⑨⑨\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current③\">current</a>.\n\n </p>"
        },
        {
          "html": "While <var>node</var> is non-null and is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪⓪\">this</a>’s\n  <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①①\">root</a>:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set <var>node</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥⑤\">parent</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>node</var> is non-null and <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter①\">filtering</a> <var>node</var> within\n   <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪①\">this</a> returns <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept②\">FILTER_ACCEPT</a></code>, then set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪②\">this</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current④\">current</a> to <var>node</var> and return <var>node</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return null.\n</p>"
        }
      ]
    },
    {
      "name": "TreeWalker/traverse children",
      "href": "https://dom.spec.whatwg.org/#concept-traverse-children",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"TreeWalker\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-traverse-children\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">traverse children</dfn>, given a\n<var>walker</var> and <var>type</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current⑤\">current</a>.\n\n </p>"
        },
        {
          "html": "<p>Set <var>node</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child⑥\">first child</a> if <var>type</var> is\n first, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-last-child\" id=\"ref-for-concept-tree-last-child⑥\">last child</a> if <var>type</var> is last.\n\n </p>"
        },
        {
          "html": "While <var>node</var> is non-null:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>result</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter②\">filtering</a> <var>node</var> within\n   <var>walker</var>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept③\">FILTER_ACCEPT</a></code>, then set <var>walker</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current⑥\">current</a> to <var>node</var> and return <var>node</var>.\n\n   </p>"
            },
            {
              "html": "If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_skip\" id=\"ref-for-dom-nodefilter-filter_skip①\">FILTER_SKIP</a></code>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>child</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child⑦\">first child</a> if <var>type</var>\n     is first, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-last-child\" id=\"ref-for-concept-tree-last-child⑦\">last child</a> if <var>type</var> is last.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>child</var> is non-null, then set <var>node</var> to <var>child</var> and\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue⑤\">continue</a>.\n    </p>"
                }
              ]
            },
            {
              "html": "While <var>node</var> is non-null:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>sibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①⑦\">next sibling</a> if\n     <var>type</var> is first, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①②\">previous sibling</a> if\n     <var>type</var> is last.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>sibling</var> is non-null, then set <var>node</var> to <var>sibling</var> and\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break③\">break</a>.\n\n     </p>"
                },
                {
                  "html": "<p>Let <var>parent</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥⑥\">parent</a>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>parent</var> is null, <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①②\">root</a>, or\n     <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current⑦\">current</a>, then return null.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>node</var> to <var>parent</var>.\n    </p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Return null.\n</p>"
        }
      ]
    },
    {
      "name": "traverse siblings",
      "href": "https://dom.spec.whatwg.org/#concept-traverse-siblings",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-traverse-siblings\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">traverse siblings</dfn>, given a <var>walker</var>\nand <var>type</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current⑧\">current</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>node</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①③\">root</a>, then return null.\n\n </p>"
        },
        {
          "html": "While true:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>sibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①⑧\">next sibling</a> if\n   <var>type</var> is next, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①③\">previous sibling</a> if\n   <var>type</var> is previous.\n\n   </p>"
            },
            {
              "html": "While <var>sibling</var> is non-null:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>node</var> to <var>sibling</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Let <var>result</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter③\">filtering</a> <var>node</var> within\n     <var>walker</var>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept④\">FILTER_ACCEPT</a></code>, then set <var>walker</var>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current⑨\">current</a> to <var>node</var> and return <var>node</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>sibling</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child⑧\">first child</a> if\n     <var>type</var> is next, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-last-child\" id=\"ref-for-concept-tree-last-child⑧\">last child</a> if <var>type</var> is\n     previous.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_reject\" id=\"ref-for-dom-nodefilter-filter_reject\">FILTER_REJECT</a></code> or <var>sibling</var> is null, then\n     set <var>sibling</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling①⑨\">next sibling</a> if <var>type</var> is\n     next, and <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①④\">previous sibling</a> if <var>type</var> is previous.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>node</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥⑦\">parent</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>node</var> is null or <var>walker</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①④\">root</a>, then return\n   null.\n\n   </p>"
            },
            {
              "html": "<p>If the return value of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter④\">filtering</a> <var>node</var> within <var>walker</var> is\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept⑤\">FILTER_ACCEPT</a></code>, then return null.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "TreeWalker/previousNode()",
      "href": "https://dom.spec.whatwg.org/#dom-treewalker-previousnode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"TreeWalker\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-treewalker-previousnode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>previousNode()</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪⑦\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current①⓪\">current</a>.\n\n </p>"
        },
        {
          "html": "While <var>node</var> is not <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①⑤\">root</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>sibling</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①⑤\">previous sibling</a>.\n\n   </p>"
            },
            {
              "html": "While <var>sibling</var> is non-null:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>node</var> to <var>sibling</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Let <var>result</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter⑤\">filtering</a> <var>node</var> within\n     <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③⓪⑨\">this</a>.\n\n     </p>"
                },
                {
                  "html": "While <var>result</var> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_reject\" id=\"ref-for-dom-nodefilter-filter_reject①\">FILTER_REJECT</a></code> and <var>node</var> has a\n      <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑧③\">child</a>:",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>node</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-last-child\" id=\"ref-for-concept-tree-last-child⑨\">last child</a>.\n\n       </p>"
                    },
                    {
                      "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter⑥\">filtering</a> <var>node</var> within\n       <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①⓪\">this</a>.\n      </p>"
                    }
                  ]
                },
                {
                  "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept⑥\">FILTER_ACCEPT</a></code>, then set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①①\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current①①\">current</a> to <var>node</var> and return <var>node</var>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>sibling</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-previous-sibling\" id=\"ref-for-concept-tree-previous-sibling①⑥\">previous sibling</a>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>If <var>node</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①⑥\">root</a> or <var>node</var>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥⑧\">parent</a> is null, then return null.\n\n   </p>"
            },
            {
              "html": "<p>Set <var>node</var> to <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑥⑨\">parent</a>.\n\n   </p>"
            },
            {
              "html": "<p>If the return value of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter⑦\">filtering</a> <var>node</var> within <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①③\">this</a> is\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept⑦\">FILTER_ACCEPT</a></code>, then set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①④\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current①②\">current</a> to\n   <var>node</var> and return <var>node</var>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Return null.\n</p>"
        }
      ]
    },
    {
      "name": "TreeWalker/nextNode()",
      "href": "https://dom.spec.whatwg.org/#dom-treewalker-nextnode",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"TreeWalker\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-treewalker-nextnode\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>nextNode()</code></dfn> method steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current①③\">current</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>result</var> be <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept⑧\">FILTER_ACCEPT</a></code>.\n\n </p>"
        },
        {
          "html": "While true:",
          "rationale": "while",
          "steps": [
            {
              "html": "While <var>result</var> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_reject\" id=\"ref-for-dom-nodefilter-filter_reject②\">FILTER_REJECT</a></code> and <var>node</var> has a\n    <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-child\" id=\"ref-for-concept-tree-child⑧④\">child</a>:",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>node</var> to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-first-child\" id=\"ref-for-concept-tree-first-child⑨\">first child</a>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter⑧\">filtering</a> <var>node</var> within\n     <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①⑥\">this</a>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept⑨\">FILTER_ACCEPT</a></code>, then set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①⑦\">this</a>’s\n     <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current①④\">current</a> to <var>node</var> and return <var>node</var>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Let <var>sibling</var> be null.\n\n   </p>"
            },
            {
              "html": "<p>Let <var>temporary</var> be <var>node</var>.\n\n   </p>"
            },
            {
              "html": "While <var>temporary</var> is non-null:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>temporary</var> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-traversal-root\" id=\"ref-for-concept-traversal-root①⑦\">root</a>, then return null.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>sibling</var> to <var>temporary</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-next-sibling\" id=\"ref-for-concept-tree-next-sibling②⓪\">next sibling</a>.\n\n     </p>"
                },
                {
                  "html": "<p>If <var>sibling</var> is non-null, then set <var>node</var> to <var>sibling</var> and\n     <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-break\" id=\"ref-for-iteration-break④\">break</a>.\n\n     </p>"
                },
                {
                  "html": "<p>Set <var>temporary</var> to <var>temporary</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-tree-parent\" id=\"ref-for-concept-tree-parent⑦⓪\">parent</a>.\n    </p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>result</var> to the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-filter\" id=\"ref-for-concept-node-filter⑨\">filtering</a> <var>node</var> within\n   <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③①⑨\">this</a>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>result</var> is <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#dom-nodefilter-filter_accept\" id=\"ref-for-dom-nodefilter-filter_accept①⓪\">FILTER_ACCEPT</a></code>, then set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②⓪\">this</a>’s\n   <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#treewalker-current\" id=\"ref-for-treewalker-current①⑤\">current</a> to <var>node</var> and return <var>node</var>.\n  </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "DOMTokenList/validation steps",
      "href": "https://dom.spec.whatwg.org/#concept-domtokenlist-validation",
      "html": "A <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#domtokenlist\" id=\"ref-for-domtokenlist⑨\">DOMTokenList</a></code> object’s\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-domtokenlist-validation\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">validation steps</dfn> for a given\n<var>token</var> are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the associated <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑦⓪\">attribute</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name③①\">local name</a> does not define\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-supported-tokens\" id=\"ref-for-concept-supported-tokens\">supported tokens</a>, <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑦\">throw</a> a <code>TypeError</code>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>lowercase token</var> be a copy of <var>token</var>, in <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑧\">ASCII lowercase</a>.\n\n </p>"
        },
        {
          "html": "<p>If <var>lowercase token</var> is present in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-supported-tokens\" id=\"ref-for-concept-supported-tokens①\">supported tokens</a>, return true.\n\n </p>"
        },
        {
          "html": "<p>Return false.\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/update steps",
      "href": "https://dom.spec.whatwg.org/#concept-dtl-update",
      "html": "A <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#domtokenlist\" id=\"ref-for-domtokenlist①⓪\">DOMTokenList</a></code> object’s <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"concept-dtl-update\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">update steps</dfn> are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the associated <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①①②\">element</a> does not have an associated <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑦①\">attribute</a> and\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①\">token set</a> is empty, then return.\n\n </p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-set-value\" id=\"ref-for-concept-element-attributes-set-value②\">Set an attribute value</a> for the associated <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①①③\">element</a> using associated\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute\" id=\"ref-for-concept-attribute⑦②\">attribute</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name③②\">local name</a> and the result of running the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-ordered-set-serializer\" id=\"ref-for-concept-ordered-set-serializer\">ordered set\n serializer</a> for <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens②\">token set</a>.\n</p>"
        }
      ]
    },
    {
      "html": "A <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#domtokenlist\" id=\"ref-for-domtokenlist①②\">DOMTokenList</a></code> object has these <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext④\">attribute change steps</a> for its associated\n<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①①⑤\">element</a>:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>localName</var> is associated attribute’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name③④\">local name</a>,\n <var>namespace</var> is null, and <var>value</var> is null, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-empty\" id=\"ref-for-list-empty⑥\">empty</a>\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens③\">token set</a>.\n\n </p>"
        },
        {
          "html": "<p>Otherwise, if <var>localName</var> is associated attribute’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name③⑤\">local name</a>,\n <var>namespace</var> is null, then set <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens④\">token set</a> to <var>value</var>,\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-ordered-set-parser\" id=\"ref-for-concept-ordered-set-parser①\">parsed</a>.\n</p>"
        }
      ]
    },
    {
      "html": "When a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#domtokenlist\" id=\"ref-for-domtokenlist①③\">DOMTokenList</a></code> object is created, then:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>element</var> be associated <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element\" id=\"ref-for-concept-element①①⑥\">element</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>localName</var> be associated attribute’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-attribute-local-name\" id=\"ref-for-concept-attribute-local-name③⑥\">local name</a>.\n\n </p>"
        },
        {
          "html": "<p>Let <var>value</var> be the result of\n <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-value\" id=\"ref-for-concept-element-attributes-get-value②\">getting an attribute value</a> given <var>element</var> and\n <var>localName</var>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext⑤\">attribute change steps</a> for <var>element</var>, <var>localName</var>,\n <var>value</var>, <var>value</var>, and null.\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/item(index)",
      "href": "https://dom.spec.whatwg.org/#dom-domtokenlist-item",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-domtokenlist-item\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>item(<var>index</var>)</code></dfn> method steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>index</var> is equal to or greater than <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②②\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens⑧\">token set</a>’s\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-size\" id=\"ref-for-list-size⑨\">size</a>, then return null.\n\n </p>"
        },
        {
          "html": "<p>Return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②③\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens⑨\">token set</a>[<var>index</var>].\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/add(...tokens)",
      "href": "https://dom.spec.whatwg.org/#dom-domtokenlist-add",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"add(...tokens)|add()|add(tokens)\" id=\"dom-domtokenlist-add\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>add(<var>tokens</var>…)</code></dfn>\nmethod steps are:",
      "rationale": "for",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⑦\">For each</a> <var>token</var> of <var>tokens</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>token</var> is the empty string, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑧\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror⑧\">SyntaxError</a></code>\"\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②⓪\">DOMException</a></code>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>token</var> contains any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace⑧\">ASCII whitespace</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw⑨⑨\">throw</a> an\n   \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror②⓪\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②①\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⑧\">For each</a> <var>token</var> of <var>tokens</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①②\">append</a>\n <var>token</var> to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②⑤\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①①\">token set</a>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-update\" id=\"ref-for-concept-dtl-update\">update steps</a>.\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/remove(...tokens)",
      "href": "https://dom.spec.whatwg.org/#dom-domtokenlist-remove",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"remove(...tokens)|remove()|remove(tokens)\" id=\"dom-domtokenlist-remove\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>remove(<var>tokens</var>…)</code></dfn>\nmethod steps are:",
      "rationale": "for",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-iterate\" id=\"ref-for-list-iterate②⑨\">For each</a> <var>token</var> of <var>tokens</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>token</var> is the empty string, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⓪\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror⑨\">SyntaxError</a></code>\"\n   <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②②\">DOMException</a></code>.\n\n   </p>"
            },
            {
              "html": "<p>If <var>token</var> contains any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace⑨\">ASCII whitespace</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪①\">throw</a> an\n   \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror②①\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②③\">DOMException</a></code>.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>For each <var>token</var> in <var>tokens</var>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑧\">remove</a> <var>token</var> from\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②⑥\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①②\">token set</a>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-update\" id=\"ref-for-concept-dtl-update①\">update steps</a>.\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/toggle(token, force)",
      "href": "https://dom.spec.whatwg.org/#dom-domtokenlist-toggle",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"toggle(token, force)|toggle(token)\" id=\"dom-domtokenlist-toggle\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>toggle(<var>token</var>, <var>force</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If <var>token</var> is the empty string, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪②\">throw</a> a \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror①⓪\">SyntaxError</a></code>\"\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②④\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <var>token</var> contains any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace①⓪\">ASCII whitespace</a>, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪③\">throw</a> an\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror②②\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②⑤\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②⑦\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①③\">token set</a>[<var>token</var>] <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain⑧\">exists</a>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>force</var> is either not given or is false, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-remove\" id=\"ref-for-list-remove⑨\">remove</a>\n   <var>token</var> from <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②⑧\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①④\">token set</a>, run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-update\" id=\"ref-for-concept-dtl-update②\">update steps</a> and return\n   false.\n\n   </p>"
            },
            {
              "html": "<p>Return true.\n  </p>"
            }
          ]
        },
        {
          "html": "<p>Otherwise, if <var>force</var> not given or is true, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-append\" id=\"ref-for-set-append①③\">append</a> <var>token</var>\n to <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③②⑨\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①⑤\">token set</a>, run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-update\" id=\"ref-for-concept-dtl-update③\">update steps</a>, and return true.\n\n </p>"
        },
        {
          "html": "<p>Return false.\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/replace(token, newToken)",
      "href": "https://dom.spec.whatwg.org/#dom-domtokenlist-replace",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-domtokenlist-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>replace(<var>token</var>, <var>newToken</var>)</code></dfn>\nmethod steps are:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If either <var>token</var> or <var>newToken</var> is the empty string, then <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪④\">throw</a> a\n \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror①①\">SyntaxError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②⑥\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If either <var>token</var> or <var>newToken</var> contains any <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-whitespace\" id=\"ref-for-ascii-whitespace①①\">ASCII whitespace</a>, then\n <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-throw\" id=\"ref-for-dfn-throw①⓪⑤\">throw</a> an \"<code class=\"idl\"><a class=\"idl-code\" data-link-type=\"exception\" href=\"https://webidl.spec.whatwg.org/#invalidcharactererror\" id=\"ref-for-invalidcharactererror②③\">InvalidCharacterError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①②⑦\">DOMException</a></code>.\n\n </p>"
        },
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③③⓪\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①⑥\">token set</a> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-contain\" id=\"ref-for-list-contain⑨\">contain</a> <var>token</var>, then\n return false.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#set-replace\" id=\"ref-for-set-replace\">Replace</a> <var>token</var> in <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③③①\">this</a>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-tokens\" id=\"ref-for-concept-dtl-tokens①⑦\">token set</a> with\n <var>newToken</var>.\n\n </p>"
        },
        {
          "html": "<p>Run the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-dtl-update\" id=\"ref-for-concept-dtl-update⑤\">update steps</a>.\n\n </p>"
        },
        {
          "html": "<p>Return true.\n</p>"
        }
      ]
    },
    {
      "name": "DOMTokenList/supports(token)",
      "href": "https://dom.spec.whatwg.org/#dom-domtokenlist-supports",
      "html": "The\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DOMTokenList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-domtokenlist-supports\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>supports(<var>token</var>)</code></dfn>\nmethod steps are:",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>result</var> be the return value of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-domtokenlist-validation\" id=\"ref-for-concept-domtokenlist-validation\">validation steps</a> called with\n <var>token</var>.\n\n </p>"
        },
        {
          "html": "<p>Return <var>result</var>.\n</p>"
        }
      ]
    }
  ]
}