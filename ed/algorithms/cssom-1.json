{
  "spec": {
    "title": "CSS Object Model (CSSOM) Module Level 1",
    "url": "https://drafts.csswg.org/cssom-1/"
  },
  "algorithms": [
    {
      "name": "escape a character",
      "href": "https://drafts.csswg.org/cssom-1/#escape-a-character",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"escape-a-character\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">escape a character</dfn> means to create a string of\n\"<code>\\</code>\" (U+005C), followed by the character.",
      "rationale": "To <dfn>"
    },
    {
      "name": "serialize an identifier",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-an-identifier",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-an-identifier\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize an identifier</dfn> means to create a string represented\nby the concatenation of, for each character of the identifier:",
      "rationale": "To <dfn>"
    },
    {
      "name": "CSS/serialize a function",
      "href": "https://drafts.csswg.org/cssom-1/#css-serialize-a-function",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"CSS\" data-dfn-type=\"dfn\" data-export=\"\" id=\"css-serialize-a-function\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a function</dfn> <var>func</var>,\n    returning a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string\">string</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>s</var> be an empty <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#string\" id=\"ref-for-string①\">string</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier\">Serialize an identifier</a> from <var>func</var>’s name,\nASCII lowercased,\nand append the result to <var>s</var>.</p>"
        },
        {
          "html": "<p>Append \"(\" (U+0028) to <var>s</var>.</p>"
        },
        {
          "html": "<p>Serialize <var>func</var>’s contents,\neither as specified by the definition of <var>func</var>,\nor in the shortest form possible\n(akin to the principles captured by <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-value\" id=\"ref-for-serialize-a-css-value\">serialize a CSS value</a>).\nAppend the result to <var>s</var>.</p>"
        },
        {
          "html": "<p>Append \")\" (U+0029) to <var>s</var>.</p>"
        },
        {
          "html": "<p>Return <var>s</var>.</p>"
        }
      ]
    },
    {
      "name": "serialize a string",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-string",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" data-lt=\"serialize a string|serialize as a string\" id=\"serialize-a-string\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a string</dfn> means to create a string represented\nby '\"' (U+0022), followed by the result of applying the rules\nbelow to each character of the given string, followed by\n'\"' (U+0022):",
      "rationale": "To <dfn>"
    },
    {
      "name": "serialize a URL",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-url",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-url\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a URL</dfn> means to create a string represented by\n\"<code>url(</code>\", followed by the\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string\">serialization</a> of the URL as a\nstring, followed by \"<code>)</code>\".",
      "rationale": "To <dfn>"
    },
    {
      "name": "serialize a LOCAL",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-local",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-local\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a LOCAL</dfn> means to create a string represented by\n\"<code>local(</code>\", followed by the\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string①\">serialization</a> of the LOCAL as a\nstring, followed by \"<code>)</code>\".",
      "rationale": "To <dfn>"
    },
    {
      "name": "serialize a comma-separated list",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-comma-separated-list",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-comma-separated-list\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a comma-separated list</dfn> concatenate all items of\nthe list in list order while separating them by \"<code>, </code>\", i.e.,\nCOMMA (U+002C) followed by a single SPACE (U+0020).",
      "rationale": "To <dfn>"
    },
    {
      "name": "serialize a whitespace-separated list",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-whitespace-separated-list",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-whitespace-separated-list\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a whitespace-separated list</dfn> concatenate all\nitems of the list in list order while separating them by \"<code> </code>\", i.e.,\na single SPACE (U+0020).",
      "rationale": "To <dfn>"
    },
    {
      "name": "parse a media query list",
      "href": "https://drafts.csswg.org/cssom-1/#parse-a-media-query-list",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-a-media-query-list\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a media query list</dfn> for a\ngiven string <var>s</var> into a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-query-list\" id=\"ref-for-media-query-list\">media query list</a> is defined in\nthe Media Queries specification. Return the list of media\nqueries that the algorithm defined there gives.",
      "rationale": "To <dfn>"
    },
    {
      "name": "parse a media query",
      "href": "https://drafts.csswg.org/cssom-1/#parse-a-media-query",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-a-media-query\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a media query</dfn> for a given string\n<var>s</var> means to follow the\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-media-query-list\" id=\"ref-for-parse-a-media-query-list\">parse a media query list</a> steps and return null if more\nthan one media query is returned or a media query if a\nsingle media query is returned.",
      "rationale": "To <dfn>"
    },
    {
      "name": "serialize a media query list",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-media-query-list",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-media-query-list\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a media query list</dfn>\nrun these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-query-list\" id=\"ref-for-media-query-list①\">media query list</a> is empty, then return the empty string."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-media-query\" id=\"ref-for-serialize-a-media-query\">Serialize</a> each media query in the list of media queries, in the same order as they appear in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-query-list\" id=\"ref-for-media-query-list②\">media query list</a>, and then <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-comma-separated-list\" id=\"ref-for-serialize-a-comma-separated-list\">serialize</a> the list."
        }
      ]
    },
    {
      "name": "serialize a media query",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-media-query",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-media-query\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a media query</dfn> let\n<var>s</var> be the empty string, run the steps below:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-query\" id=\"ref-for-media-query②\">media query</a> is negated append \"<code>not</code>\", followed\n by a single SPACE (U+0020), to <var>s</var>."
        },
        {
          "html": "Let <var>type</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier①\">serialization\n as an identifier</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-type\" id=\"ref-for-media-type\">media type</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-query\" id=\"ref-for-media-query③\">media query</a>,\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase\">converted to ASCII lowercase</a>."
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-query\" id=\"ref-for-media-query④\">media query</a> does not contain <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-feature\" id=\"ref-for-media-feature\">media features</a> append\n <var>type</var>, to <var>s</var>,\n then return <var>s</var>."
        },
        {
          "html": "If <var>type</var> is not \"<code>all</code>\" or if the\n media query is negated append <var>type</var>, followed by a\n single SPACE (U+0020), followed by \"<code>and</code>\", followed by a single SPACE\n (U+0020), to <var>s</var>."
        },
        {
          "html": "Then, for each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-feature\" id=\"ref-for-media-feature①\">media feature</a>:",
          "rationale": "append",
          "steps": [
            {
              "html": "Append a \"<code>(</code>\" (U+0028), followed by the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-feature\" id=\"ref-for-media-feature②\">media feature</a>\n   name, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase①\">converted to ASCII lowercase</a>,\n   to <var>s</var>."
            },
            {
              "html": "If a value is given append a \"<code>:</code>\" (U+003A), followed\n   by a single SPACE (U+0020), followed by the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-media-feature-value\" id=\"ref-for-serialize-a-media-feature-value\">serialized media feature value</a>,\n   to <var>s</var>."
            },
            {
              "html": "Append a \"<code>)</code>\" (U+0029) to\n   <var>s</var>."
            },
            {
              "html": "If this is not the last <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/mediaqueries-5/#media-feature\" id=\"ref-for-media-feature③\">media feature</a> append a single SPACE (U+0020),\n   followed by \"<code>and</code>\", followed by a single SPACE (U+0020), to\n   <var>s</var>."
            }
          ]
        },
        {
          "html": "Return <var>s</var>."
        }
      ]
    },
    {
      "name": "serialize a media feature value",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-media-feature-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-media-feature-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a media feature value</dfn>\nnamed <var>v</var> locate <var>v</var> in the first\ncolumn of the table below and use the serialization format described in\nthe second column:",
      "rationale": "To <dfn>"
    },
    {
      "name": "create a MediaList object",
      "href": "https://drafts.csswg.org/cssom-1/#create-a-medialist-object",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"create-a-medialist-object\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a <code>MediaList</code> object</dfn> with a string <var>text</var>, run the following steps:",
      "rationale": "create",
      "steps": [
        {
          "html": "Create a new <code>MediaList</code> object."
        },
        {
          "html": "Set its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-medialist-mediatext\" id=\"ref-for-dom-medialist-mediatext①\">mediaText</a></code> attribute to <var>text</var>."
        },
        {
          "html": "Return the newly created <code>MediaList</code> object."
        }
      ]
    },
    {
      "name": "MediaList/mediaText",
      "href": "https://drafts.csswg.org/cssom-1/#dom-medialist-mediatext",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MediaList\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-medialist-mediatext\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>mediaText</code></dfn> attribute, on getting, must return a\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-media-query-list\" id=\"ref-for-serialize-a-media-query-list\">serialization</a> of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#medialist-collection-of-media-queries\" id=\"ref-for-medialist-collection-of-media-queries①\">collection of media queries</a>.\nSetting the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-medialist-mediatext\" id=\"ref-for-dom-medialist-mediatext②\">mediaText</a></code> attribute must run these steps:",
      "rationale": "empty",
      "steps": [
        {
          "html": "Empty the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#medialist-collection-of-media-queries\" id=\"ref-for-medialist-collection-of-media-queries②\">collection of media queries</a>."
        },
        {
          "html": "If the given value is the empty string, then return."
        },
        {
          "html": "Append all the media queries as a result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-media-query-list\" id=\"ref-for-parse-a-media-query-list①\">parsing</a> the given\n value to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#medialist-collection-of-media-queries\" id=\"ref-for-medialist-collection-of-media-queries③\">collection of media queries</a>."
        }
      ]
    },
    {
      "name": "MediaList/appendMedium(medium)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-medialist-appendmedium",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MediaList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-medialist-appendmedium\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>appendMedium(<var>medium</var>)</code></dfn> method must run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>m</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-media-query\" id=\"ref-for-parse-a-media-query\">parsing</a> the given value."
        },
        {
          "html": "If <var>m</var> is null, then return."
        },
        {
          "html": "If <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#compare-media-queries\" id=\"ref-for-compare-media-queries\">comparing</a> <var>m</var> with any of the media queries in the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#medialist-collection-of-media-queries\" id=\"ref-for-medialist-collection-of-media-queries⑦\">collection of media queries</a> returns true, then return."
        },
        {
          "html": "Append <var>m</var> to the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#medialist-collection-of-media-queries\" id=\"ref-for-medialist-collection-of-media-queries⑧\">collection of media queries</a>."
        }
      ]
    },
    {
      "name": "MediaList/deleteMedium(medium)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-medialist-deletemedium",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MediaList\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-medialist-deletemedium\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>deleteMedium(<var>medium</var>)</code></dfn> method must run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>m</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-media-query\" id=\"ref-for-parse-a-media-query①\">parsing</a> the given value."
        },
        {
          "html": "If <var>m</var> is null, then return."
        },
        {
          "html": "Remove any media query from the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#medialist-collection-of-media-queries\" id=\"ref-for-medialist-collection-of-media-queries⑨\">collection of media queries</a> for which\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#compare-media-queries\" id=\"ref-for-compare-media-queries①\">comparing</a> the media query with <var>m</var> returns true.\n If nothing was removed, then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror\">NotFoundError</a></code> exception."
        }
      ]
    },
    {
      "name": "serialize a selector",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-selector",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-selector\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a selector</dfn> let\n<var>s</var> be the empty string, run the steps below for each\npart of the chain of the selector, and finally return\n<var>s</var>:",
      "rationale": "if",
      "steps": [
        {
          "html": "If there is only one <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#simple\" id=\"ref-for-simple\">simple selector</a> in the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#compound\" id=\"ref-for-compound\">compound selectors</a> which is a\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#universal-selector\" id=\"ref-for-universal-selector\">universal selector</a>, append the result of\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-simple-selector\" id=\"ref-for-serialize-a-simple-selector\">serializing</a> the\n <span id=\"ref-for-universal-selector①\">universal selector</span> to <var>s</var>."
        },
        {
          "html": "Otherwise, for each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#simple\" id=\"ref-for-simple①\">simple selector</a> in the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#compound\" id=\"ref-for-compound①\">compound selectors</a> that is not a\n universal selector of which the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#namespace-prefix\" id=\"ref-for-namespace-prefix\">namespace prefix</a> maps to a namespace that is not the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#default-namespace\" id=\"ref-for-default-namespace\">default namespace</a>\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-simple-selector\" id=\"ref-for-serialize-a-simple-selector①\">serialize</a> the\n <span id=\"ref-for-simple②\">simple selector</span> and append the result to\n <var>s</var>."
        },
        {
          "html": "If this is not the last part of the chain of the selector append a\n single SPACE (U+0020), followed by the combinator\n \"<code>&gt;</code>\",\n \"<code>+</code>\",\n \"<code>~</code>\",\n \"<code>&gt;&gt;</code>\",\n \"<code>||</code>\",\n as appropriate, followed by another single SPACE (U+0020) if the combinator was\n not whitespace, to <var>s</var>."
        },
        {
          "html": "If this is the last part of the chain of the selector and there is\n a pseudo-element, append \"<code>::</code>\" followed by the name of the\n pseudo-element, to <var>s</var>."
        }
      ]
    },
    {
      "name": "serialize a simple selector",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-simple-selector",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-simple-selector\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a simple selector</dfn>\nlet <var>s</var> be the empty string, run the steps below, and\nfinally return <var>s</var>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "type selector",
              "html": "",
              "rationale": "if",
              "steps": [
                {
                  "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#namespace-prefix\" id=\"ref-for-namespace-prefix①\">namespace prefix</a> maps to a namespace that is\n   not the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#default-namespace\" id=\"ref-for-default-namespace①\">default namespace</a> and is not the\n   null namespace (not in a namespace) append the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier②\">serialization</a> of the\n   <span id=\"ref-for-namespace-prefix②\">namespace prefix</span> as an identifier, followed by a\n   \"<code>|</code>\" (U+007C) to <var>s</var>."
                },
                {
                  "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#namespace-prefix\" id=\"ref-for-namespace-prefix③\">namespace prefix</a> maps to a namespace that is\n   the null namespace (not in a namespace) append\n   \"<code>|</code>\" (U+007C) to <var>s</var>."
                },
                {
                  "html": "If this is a type selector append the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier③\">serialization</a> of the element name\n   as an identifier to <var>s</var>."
                },
                {
                  "html": "If this is a universal selector append \"<code>*</code>\" (U+002A)\n   to <var>s</var>."
                }
              ]
            },
            {
              "case": "universal selector",
              "html": "",
              "rationale": "if",
              "steps": [
                {
                  "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#namespace-prefix\" id=\"ref-for-namespace-prefix①\">namespace prefix</a> maps to a namespace that is\n   not the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#default-namespace\" id=\"ref-for-default-namespace①\">default namespace</a> and is not the\n   null namespace (not in a namespace) append the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier②\">serialization</a> of the\n   <span id=\"ref-for-namespace-prefix②\">namespace prefix</span> as an identifier, followed by a\n   \"<code>|</code>\" (U+007C) to <var>s</var>."
                },
                {
                  "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#namespace-prefix\" id=\"ref-for-namespace-prefix③\">namespace prefix</a> maps to a namespace that is\n   the null namespace (not in a namespace) append\n   \"<code>|</code>\" (U+007C) to <var>s</var>."
                },
                {
                  "html": "If this is a type selector append the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier③\">serialization</a> of the element name\n   as an identifier to <var>s</var>."
                },
                {
                  "html": "If this is a universal selector append \"<code>*</code>\" (U+002A)\n   to <var>s</var>."
                }
              ]
            },
            {
              "case": "attribute selector",
              "html": "",
              "rationale": "append",
              "steps": [
                {
                  "html": "Append \"<code>[</code>\" (U+005B) to\n   <var>s</var>."
                },
                {
                  "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-namespaces-3/#namespace-prefix\" id=\"ref-for-namespace-prefix④\">namespace prefix</a> maps to a namespace that is\n   not the null namespace (not in a namespace) append the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier④\">serialization</a> of the\n   <span id=\"ref-for-namespace-prefix⑤\">namespace prefix</span> as an identifier, followed by a\n   \"<code>|</code>\" (U+007C) to <var>s</var>."
                },
                {
                  "html": "Append the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier⑤\">serialization</a>\n   of the attribute name as an identifier to <var>s</var>."
                },
                {
                  "html": "If there is an attribute value specified, append\n   \"<code>=</code>\",\n   \"<code>~=</code>\",\n   \"<code>|=</code>\",\n   \"<code>^=</code>\",\n   \"<code>$=</code>\", or\n   \"<code>*=</code>\"\n   as appropriate (depending on the type of attribute selector), followed\n   by the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string②\">serialization</a> of the\n   attribute value as a string, to <var>s</var>."
                },
                {
                  "html": "If the attribute selector has the case-sensitivity flag present,\n   append \"<code> i</code>\" (U+0020 U+0069) to <var>s</var>."
                },
                {
                  "html": "Append \"<code>]</code>\" (U+005D) to\n   <var>s</var>."
                }
              ]
            },
            {
              "case": "class selector",
              "html": "Append a \"<code>.</code>\" (U+002E), followed by the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier⑥\">serialization</a> of the class name\n as an identifier to <var>s</var>."
            },
            {
              "case": "ID selector",
              "html": "Append a \"<code>#</code>\" (U+0023), followed by the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier⑦\">serialization</a> of the ID\n as an identifier to <var>s</var>."
            },
            {
              "case": "pseudo-class",
              "html": "Otherwise, append \"<code>:</code>\" (U+003A), followed by the name of\n  the pseudo-class, followed by \"<code>(</code>\" (U+0028), followed by the\n  value of the pseudo-class argument(s) determined as per below, followed by\n  \"<code>)</code>\" (U+0029), to <var>s</var>.",
              "rationale": ".switch",
              "steps": [
                {
                  "operation": "switch",
                  "steps": [
                    {
                      "case": ":lang()",
                      "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-comma-separated-list\" id=\"ref-for-serialize-a-comma-separated-list②\">serialization of a\n   comma-separated list</a> of each argument’s\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string③\">serialization as a string</a>, preserving\n   relative order."
                    },
                    {
                      "case": ":nth-child()",
                      "html": "The result of serializing the value using the rules to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#serialize-an-anb-value\" id=\"ref-for-serialize-an-anb-value\">serialize an &lt;an+b&gt; value</a>."
                    },
                    {
                      "case": ":nth-last-child()",
                      "html": "The result of serializing the value using the rules to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#serialize-an-anb-value\" id=\"ref-for-serialize-an-anb-value\">serialize an &lt;an+b&gt; value</a>."
                    },
                    {
                      "case": ":nth-of-type()",
                      "html": "The result of serializing the value using the rules to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#serialize-an-anb-value\" id=\"ref-for-serialize-an-anb-value\">serialize an &lt;an+b&gt; value</a>."
                    },
                    {
                      "case": ":nth-last-of-type()",
                      "html": "The result of serializing the value using the rules to <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#serialize-an-anb-value\" id=\"ref-for-serialize-an-anb-value\">serialize an &lt;an+b&gt; value</a>."
                    },
                    {
                      "case": ":not()",
                      "html": "The result of serializing the value using the rules for\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-group-of-selectors\" id=\"ref-for-serialize-a-group-of-selectors\">serializing a group of selectors</a>."
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "create a constructed CSSStyleSheet",
      "href": "https://drafts.csswg.org/cssom-1/#create-a-constructed-cssstylesheet",
      "html": "",
      "rationale": "set",
      "steps": [
        {
          "html": "Construct a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#cssstylesheet\" id=\"ref-for-cssstylesheet②\">CSSStyleSheet</a></code> object <var>sheet</var>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-location\" id=\"ref-for-concept-css-style-sheet-location\">location</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#link-options-base-url\" id=\"ref-for-link-options-base-url\">base URL</a> of the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window\">associated Document</a> for the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-global-object\" id=\"ref-for-current-global-object\">current global object</a>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-stylesheet-base-url\" id=\"ref-for-concept-css-style-sheet-stylesheet-base-url\">stylesheet base URL</a> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstylesheetinit-baseurl\" id=\"ref-for-dom-cssstylesheetinit-baseurl\">baseURL</a></code> attribute value from <var>options</var>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-parent-css-style-sheet\" id=\"ref-for-concept-css-style-sheet-parent-css-style-sheet\">parent CSS style sheet</a> to null."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-node\" id=\"ref-for-concept-css-style-sheet-owner-node\">owner node</a> to null."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-css-rule\" id=\"ref-for-concept-css-style-sheet-owner-css-rule\">owner CSS rule</a> to null."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-title\" id=\"ref-for-concept-css-style-sheet-title\">title</a> to the empty string."
        },
        {
          "html": "Unset <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-alternate-flag\" id=\"ref-for-concept-css-style-sheet-alternate-flag\">alternate flag</a>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-origin-clean-flag\" id=\"ref-for-concept-css-style-sheet-origin-clean-flag\">origin-clean flag</a>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructed-flag\" id=\"ref-for-concept-css-style-sheet-constructed-flag\">constructed flag</a>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructor-document\" id=\"ref-for-concept-css-style-sheet-constructor-document\">Constructor document</a> to the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window①\">associated Document</a> for the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-global-object\" id=\"ref-for-current-global-object①\">current global object</a>."
        },
        {
          "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstylesheetinit-media\" id=\"ref-for-dom-cssstylesheetinit-media\">media</a></code> attribute of <var>options</var> is a string,\n        <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#create-a-medialist-object\" id=\"ref-for-create-a-medialist-object\">create a MediaList object</a> from the string\n        and assign it as <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-media\" id=\"ref-for-concept-css-style-sheet-media\">media</a>.\n        Otherwise, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-media-query-list\" id=\"ref-for-serialize-a-media-query-list①\">serialize a media query list</a> from the attribute and then <span id=\"ref-for-create-a-medialist-object①\">create a MediaList object</span>\n        from the resulting string and set it as <var>sheet</var>’s <span id=\"ref-for-concept-css-style-sheet-media①\">media</span>."
        },
        {
          "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstylesheetinit-disabled\" id=\"ref-for-dom-cssstylesheetinit-disabled\">disabled</a></code> attribute of <var>options</var> is true,\n        set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disabled-flag\" id=\"ref-for-concept-css-style-sheet-disabled-flag\">disabled flag</a>."
        },
        {
          "html": "Return <var>sheet</var>."
        }
      ]
    },
    {
      "name": "CSSStyleSheet/cssRules",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstylesheet-cssrules",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleSheet\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-cssstylesheet-cssrules\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>cssRules</code></dfn> attribute must follow these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-origin-clean-flag\" id=\"ref-for-concept-css-style-sheet-origin-clean-flag①\">origin-clean flag</a> is unset,\n <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror\">SecurityError</a></code> exception."
        },
        {
          "html": "Return a read-only, live <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#cssrulelist\" id=\"ref-for-cssrulelist①\">CSSRuleList</a></code> object representing\n the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-css-rules\" id=\"ref-for-concept-css-style-sheet-css-rules①\">CSS rules</a>."
        }
      ]
    },
    {
      "name": "CSSStyleSheet/insertRule(rule, index)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstylesheet-insertrule",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleSheet\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"insertRule(rule, index)|insertRule(rule)\" id=\"dom-cssstylesheet-insertrule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>insertRule(<var>rule</var>, <var>index</var>)</code></dfn> method must run the following steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-origin-clean-flag\" id=\"ref-for-concept-css-style-sheet-origin-clean-flag②\">origin-clean flag</a> is unset,\n <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror①\">SecurityError</a></code> exception."
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disallow-modification-flag\" id=\"ref-for-concept-css-style-sheet-disallow-modification-flag\">disallow modification flag</a> is set, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notallowederror\" id=\"ref-for-notallowederror\">NotAllowedError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>."
        },
        {
          "html": "Let <var>parsed rule</var> be the return value of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-rule\" id=\"ref-for-parse-a-rule\">parse a rule</a> with <var>rule</var>."
        },
        {
          "html": "If <var>parsed rule</var> is a syntax error, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror\">SyntaxError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code>."
        },
        {
          "html": "If <var>parsed rule</var> is an <a class=\"css\" data-link-type=\"at-rule\" href=\"https://drafts.csswg.org/css-cascade-5/#at-ruledef-import\" id=\"ref-for-at-ruledef-import\">@import</a> rule, and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructed-flag\" id=\"ref-for-concept-css-style-sheet-constructed-flag③\">constructed flag</a> is set, throw\n a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror①\">SyntaxError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException②\">DOMException</a></code>."
        },
        {
          "html": "Return the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#insert-a-css-rule\" id=\"ref-for-insert-a-css-rule\">insert a CSS rule</a> <var>rule</var> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-css-rules\" id=\"ref-for-concept-css-style-sheet-css-rules②\">CSS rules</a>\n at <var>index</var>."
        }
      ]
    },
    {
      "name": "CSSStyleSheet/deleteRule(index)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstylesheet-deleterule",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleSheet\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-cssstylesheet-deleterule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>deleteRule(<var>index</var>)</code></dfn> method must run the following steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-origin-clean-flag\" id=\"ref-for-concept-css-style-sheet-origin-clean-flag③\">origin-clean flag</a> is unset,\n <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror②\">SecurityError</a></code> exception."
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disallow-modification-flag\" id=\"ref-for-concept-css-style-sheet-disallow-modification-flag①\">disallow modification flag</a> is set, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notallowederror\" id=\"ref-for-notallowederror①\">NotAllowedError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③\">DOMException</a></code>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#remove-a-css-rule\" id=\"ref-for-remove-a-css-rule\">Remove a CSS rule</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-css-rules\" id=\"ref-for-concept-css-style-sheet-css-rules③\">CSS rules</a> at <var>index</var>."
        }
      ]
    },
    {
      "name": "CSSStyleSheet/replace(text)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstylesheet-replace",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleSheet\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-cssstylesheet-replace\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>replace(<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-rule-text\" id=\"ref-for-concept-css-rule-text\">text</a>)</code></dfn> method must run the following steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>promise</var> be a promise."
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructed-flag\" id=\"ref-for-concept-css-style-sheet-constructed-flag④\">constructed flag</a> is not set, or the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disallow-modification-flag\" id=\"ref-for-concept-css-style-sheet-disallow-modification-flag②\">disallow modification flag</a> is set, reject <var>promise</var> with a\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notallowederror\" id=\"ref-for-notallowederror②\">NotAllowedError</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④\">DOMException</a></code> and return <var>promise</var>."
        },
        {
          "html": "Set the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disallow-modification-flag\" id=\"ref-for-concept-css-style-sheet-disallow-modification-flag③\">disallow modification flag</a>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#in-parallel\" id=\"ref-for-in-parallel\">In parallel</a>, do these steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>rules</var> be the result of running <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-stylesheets-contents\" id=\"ref-for-parse-a-stylesheets-contents\">parse a stylesheet’s contents</a> from <var>text</var>."
            },
            {
              "html": "If <var>rules</var> contains one or more <a class=\"css\" data-link-type=\"at-rule\" href=\"https://drafts.csswg.org/css-cascade-5/#at-ruledef-import\" id=\"ref-for-at-ruledef-import①\">@import</a> rules, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#remove-a-css-rule\" id=\"ref-for-remove-a-css-rule①\">remove those rules</a> from <var>rules</var>."
            },
            {
              "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-css-rules\" id=\"ref-for-concept-css-style-sheet-css-rules④\">CSS rules</a> to <var>rules</var>."
            },
            {
              "html": "Unset <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disallow-modification-flag\" id=\"ref-for-concept-css-style-sheet-disallow-modification-flag④\">disallow modification flag</a>."
            },
            {
              "html": "Resolve <var>promise</var> with <var>sheet</var>."
            }
          ]
        },
        {
          "html": "Return <var>promise</var>."
        }
      ]
    },
    {
      "name": "synchronously replace the rules of a CSSStyleSheet",
      "href": "https://drafts.csswg.org/cssom-1/#synchronously-replace-the-rules-of-a-cssstylesheet",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"synchronously-replace-the-rules-of-a-cssstylesheet\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">synchronously replace the rules of a CSSStyleSheet</dfn> on <var>sheet</var> given <var>text</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructed-flag\" id=\"ref-for-concept-css-style-sheet-constructed-flag⑤\">constructed flag</a> is not set, or the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disallow-modification-flag\" id=\"ref-for-concept-css-style-sheet-disallow-modification-flag⑤\">disallow modification flag</a> is set, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notallowederror\" id=\"ref-for-notallowederror③\">NotAllowedError</a></code>\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤\">DOMException</a></code>."
        },
        {
          "html": "Let <var>rules</var> be the result of running <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-stylesheets-contents\" id=\"ref-for-parse-a-stylesheets-contents①\">parse a stylesheet’s contents</a> from <var>text</var>."
        },
        {
          "html": "If <var>rules</var> contains one or more <a class=\"css\" data-link-type=\"at-rule\" href=\"https://drafts.csswg.org/css-cascade-5/#at-ruledef-import\" id=\"ref-for-at-ruledef-import②\">@import</a> rules, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#remove-a-css-rule\" id=\"ref-for-remove-a-css-rule②\">remove those rules</a> from <var>rules</var>."
        },
        {
          "html": "Set <var>sheet</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-css-rules\" id=\"ref-for-concept-css-style-sheet-css-rules⑤\">CSS rules</a> to <var>rules</var>."
        }
      ]
    },
    {
      "name": "CSSStyleSheet/addRule(selector, style, index)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstylesheet-addrule",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleSheet\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"addRule(selector, style, index)|addRule(selector, style)|addRule(selector)|addRule()|addRule(selector, block, optionalIndex)\" id=\"dom-cssstylesheet-addrule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>addRule(<var>selector</var>, <var>block</var>, <var>optionalIndex</var>)</code></dfn> method must run the following steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>rule</var> be an empty string."
        },
        {
          "html": "Append <var>selector</var> to <var>rule</var>."
        },
        {
          "html": "Append <code>\" { \"</code> to <var>rule</var>."
        },
        {
          "html": "If <var>block</var> is not empty, append <var>block</var>, followed by a space, to <var>rule</var>."
        },
        {
          "html": "Append <code>\"}\"</code> to <var>rule</var>"
        },
        {
          "html": "Let <var>index</var> be <var>optionalIndex</var> if provided, or the number of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-css-rules\" id=\"ref-for-concept-css-style-sheet-css-rules⑥\">CSS rules</a> in the stylesheet otherwise."
        },
        {
          "html": "Call <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstylesheet-insertrule\" id=\"ref-for-dom-cssstylesheet-insertrule②\">insertRule()</a></code>, with <var>rule</var> and <var>index</var> as arguments."
        },
        {
          "html": "Return <code>-1</code>."
        }
      ]
    },
    {
      "name": "create a CSS style sheet",
      "href": "https://drafts.csswg.org/cssom-1/#create-a-css-style-sheet",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"create-a-css-style-sheet\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">create a CSS style sheet</dfn>, run these steps:",
      "rationale": "create",
      "steps": [
        {
          "html": "Create a new <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet②②\">CSS style sheet</a> object and set its\n properties as specified."
        },
        {
          "html": "Then run the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#add-a-css-style-sheet\" id=\"ref-for-add-a-css-style-sheet①\">add a CSS style sheet</a> steps for the newly created <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet②③\">CSS style sheet</a>.\n\n  \n     <p class=\"warning\">If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-origin-clean-flag\" id=\"ref-for-concept-css-style-sheet-origin-clean-flag④\">origin-clean flag</a> is unset, this can expose information from the user’s\n  intranet.\n</p>"
        }
      ]
    },
    {
      "name": "add a CSS style sheet",
      "href": "https://drafts.csswg.org/cssom-1/#add-a-css-style-sheet",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"add-a-css-style-sheet\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">add a CSS style sheet</dfn>, run these\nsteps:",
      "rationale": "add",
      "steps": [
        {
          "html": "Add the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet②④\">CSS style sheet</a> to the list of\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#documentorshadowroot-document-or-shadow-root-css-style-sheets\" id=\"ref-for-documentorshadowroot-document-or-shadow-root-css-style-sheets①\">document or shadow root CSS style sheets</a> at the appropriate location."
        },
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet②⑤\">CSS style sheet</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-node\" id=\"ref-for-concept-css-style-sheet-owner-node⑦\">owner node</a> <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#contributes-a-script-blocking-style-sheet\" id=\"ref-for-contributes-a-script-blocking-style-sheet\">contributes a\n script-blocking style sheet</a>, then user agents must <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list-append\" id=\"ref-for-list-append\">append</a> the <span id=\"ref-for-concept-css-style-sheet-owner-node⑧\">owner node</span> to its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document\">node document</a>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/semantics.html#script-blocking-style-sheet-set\" id=\"ref-for-script-blocking-style-sheet-set\">script-blocking\n style sheet set</a>.</p>"
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disabled-flag\" id=\"ref-for-concept-css-style-sheet-disabled-flag⑤\">disabled flag</a> is set, then return."
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-title\" id=\"ref-for-concept-css-style-sheet-title⑦\">title</a> is not the empty string, the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-alternate-flag\" id=\"ref-for-concept-css-style-sheet-alternate-flag②\">alternate flag</a> is unset, and\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#preferred-css-style-sheet-set-name\" id=\"ref-for-preferred-css-style-sheet-set-name\">preferred CSS style sheet set name</a> is the empty string\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#change-the-preferred-css-style-sheet-set-name\" id=\"ref-for-change-the-preferred-css-style-sheet-set-name\">change the preferred CSS style sheet set name</a> to the\n <span id=\"ref-for-concept-css-style-sheet-title⑧\">title</span>."
        },
        {
          "html": "If any of the following is true, then unset the\n  <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disabled-flag\" id=\"ref-for-concept-css-style-sheet-disabled-flag⑥\">disabled flag</a> and return:\n\n  \n     <ul>\n      <li>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-title\" id=\"ref-for-concept-css-style-sheet-title⑨\">title</a> is the empty string.\n   \n      </li><li>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#last-css-style-sheet-set-name\" id=\"ref-for-last-css-style-sheet-set-name\">last CSS style sheet set name</a> is null and the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-title\" id=\"ref-for-concept-css-style-sheet-title①⓪\">title</a> is a\n   <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive②\">case-sensitive</a> match\n   for the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#preferred-css-style-sheet-set-name\" id=\"ref-for-preferred-css-style-sheet-set-name①\">preferred CSS style sheet set name</a>.\n   \n      </li><li>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-title\" id=\"ref-for-concept-css-style-sheet-title①①\">title</a> is a\n   <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive③\">case-sensitive</a> match for the\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#last-css-style-sheet-set-name\" id=\"ref-for-last-css-style-sheet-set-name①\">last CSS style sheet set name</a>.\n  \n     </li></ul>"
        },
        {
          "html": "Set the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disabled-flag\" id=\"ref-for-concept-css-style-sheet-disabled-flag⑦\">disabled flag</a>."
        }
      ]
    },
    {
      "name": "remove a CSS style sheet",
      "href": "https://drafts.csswg.org/cssom-1/#remove-a-css-style-sheet",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"remove-a-css-style-sheet\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove a CSS style sheet</dfn>, run these steps:",
      "rationale": "remove",
      "steps": [
        {
          "html": "Remove the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet②⑥\">CSS style sheet</a> from the list of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#documentorshadowroot-document-or-shadow-root-css-style-sheets\" id=\"ref-for-documentorshadowroot-document-or-shadow-root-css-style-sheets②\">document or shadow root CSS style sheets</a>."
        },
        {
          "html": "Set the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet②⑦\">CSS style sheet</a>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-parent-css-style-sheet\" id=\"ref-for-concept-css-style-sheet-parent-css-style-sheet③\">parent CSS style sheet</a>,\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-node\" id=\"ref-for-concept-css-style-sheet-owner-node⑨\">owner node</a> and <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-css-rule\" id=\"ref-for-concept-css-style-sheet-owner-css-rule②\">owner CSS rule</a> to null."
        }
      ]
    },
    {
      "name": "enable a CSS style sheet set",
      "href": "https://drafts.csswg.org/cssom-1/#enable-a-css-style-sheet-set",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"enable-a-css-style-sheet-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">enable a CSS style sheet set</dfn>\nwith name <var>name</var>, run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>name</var> is the empty string, set the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disabled-flag\" id=\"ref-for-concept-css-style-sheet-disabled-flag⑨\">disabled flag</a> for each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet③①\">CSS style sheet</a>\n that is in a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet-set\" id=\"ref-for-css-style-sheet-set②\">CSS style sheet set</a> and return."
        },
        {
          "html": "Unset the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-disabled-flag\" id=\"ref-for-concept-css-style-sheet-disabled-flag①⓪\">disabled flag</a> for each\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet\" id=\"ref-for-css-style-sheet③②\">CSS style sheet</a> in a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet-set\" id=\"ref-for-css-style-sheet-set③\">CSS style sheet set</a> whose\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-style-sheet-set-name\" id=\"ref-for-css-style-sheet-set-name\">CSS style sheet set name</a> is a\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive④\">case-sensitive</a> match for\n <var>name</var> and set it for all other\n <span id=\"ref-for-css-style-sheet③③\">CSS style sheets</span> in a\n <span id=\"ref-for-css-style-sheet-set④\">CSS style sheet set</span>."
        }
      ]
    },
    {
      "name": "select a CSS style sheet set",
      "href": "https://drafts.csswg.org/cssom-1/#select-a-css-style-sheet-set",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"select-a-css-style-sheet-set\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">select a CSS style sheet set</dfn>\nwith name <var>name</var>, run these steps:",
      "rationale": "set",
      "steps": [
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#enable-a-css-style-sheet-set\" id=\"ref-for-enable-a-css-style-sheet-set\">enable a CSS style sheet set</a> with name\n <var>name</var>."
        },
        {
          "html": "Set <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#last-css-style-sheet-set-name\" id=\"ref-for-last-css-style-sheet-set-name②\">last CSS style sheet set name</a> to\n <var>name</var>."
        }
      ]
    },
    {
      "name": "change the preferred CSS style sheet set name",
      "href": "https://drafts.csswg.org/cssom-1/#change-the-preferred-css-style-sheet-set-name",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"change-the-preferred-css-style-sheet-set-name\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">change the preferred CSS style sheet set name</dfn>\nwith name <var>name</var>, run these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>current</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#preferred-css-style-sheet-set-name\" id=\"ref-for-preferred-css-style-sheet-set-name②\">preferred CSS style sheet set name</a>."
        },
        {
          "html": "Set <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#preferred-css-style-sheet-set-name\" id=\"ref-for-preferred-css-style-sheet-set-name③\">preferred CSS style sheet set name</a> to\n <var>name</var>."
        },
        {
          "html": "If <var>name</var> is not a\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive⑤\">case-sensitive</a> match for\n <var>current</var> and\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#last-css-style-sheet-set-name\" id=\"ref-for-last-css-style-sheet-set-name③\">last CSS style sheet set name</a> is null\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#enable-a-css-style-sheet-set\" id=\"ref-for-enable-a-css-style-sheet-set①\">enable a CSS style sheet set</a> with name\n <var>name</var>."
        }
      ]
    },
    {
      "name": "DocumentOrShadowRoot/adoptedStyleSheets",
      "href": "https://drafts.csswg.org/cssom-1/#dom-documentorshadowroot-adoptedstylesheets",
      "html": "The <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#observable-array-attribute-set-an-indexed-value\" id=\"ref-for-observable-array-attribute-set-an-indexed-value\">set an indexed value</a> algorithm for\n<dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"DocumentOrShadowRoot\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-documentorshadowroot-adoptedstylesheets\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>adoptedStyleSheets</code></dfn>, given <var>value</var> and <var>index</var>,\nis the following:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>value</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructed-flag\" id=\"ref-for-concept-css-style-sheet-constructed-flag⑥\">constructed flag</a> is not set, or its <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-constructor-document\" id=\"ref-for-concept-css-style-sheet-constructor-document①\">constructor document</a> is not equal to this\n  <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://dom.spec.whatwg.org/#documentorshadowroot\" id=\"ref-for-documentorshadowroot⑦\">DocumentOrShadowRoot</a></code>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document①\">node document</a>, throw a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notallowederror\" id=\"ref-for-notallowederror④\">NotAllowedError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥\">DOMException</a></code>."
        }
      ]
    },
    {
      "name": "fetch a CSS style sheet",
      "href": "https://drafts.csswg.org/cssom-1/#fetch-a-css-style-sheet",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"fetch-a-css-style-sheet\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">fetch a CSS style sheet</dfn>\n with parsed URL <var>parsed URL</var>,\n referrer <var>referrer</var>,\n document <var>document</var>,\n optionally a set of parameters <var>parameters</var>\n (used as input to creating a <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request\" id=\"ref-for-concept-request\">request</a>),\n and an algorithm for handling the response result <var>processTheResponse</var> that takes a response,\n follow these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>origin</var> be <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/browsers.html#concept-origin\" id=\"ref-for-concept-origin\">origin</a>."
        },
        {
          "html": "Let <var>request</var> be a new <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request\" id=\"ref-for-concept-request①\">request</a>, with the\n  <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request-url\" id=\"ref-for-concept-request-url\">url</a> <var>parsed URL</var>,\n  <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request-origin\" id=\"ref-for-concept-request-origin\">origin</a> <var>origin</var>,\n  <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-request-referrer\" id=\"ref-for-concept-request-referrer\">referrer</a> <var>referrer</var>, and if specified the set of parameters <var>parameters</var>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-fetch\" id=\"ref-for-concept-fetch\">Fetch</a> <var>request</var>,\n   with <var>processResponseEndOfBody</var>, given <var>response</var>,\n   being the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>response</var> is a <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-network-error\" id=\"ref-for-concept-network-error\">network error</a>, return."
            },
            {
              "html": "If <var>document</var> is in <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-quirks\" id=\"ref-for-concept-document-quirks\">quirks mode</a>, <var>response</var> is\n    <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin\" id=\"ref-for-cors-same-origin\">CORS-same-origin</a> and the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#content-type\" id=\"ref-for-content-type\">Content-Type metadata</a> of <var>response</var> is not a\n    <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#supported-styling-language\" id=\"ref-for-supported-styling-language\">supported styling language</a> change the <span id=\"ref-for-content-type①\">Content-Type metadata</span> of <var>response</var> to\n    <code>text/css</code>."
            },
            {
              "html": "If <var>response</var> is not in a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#supported-styling-language\" id=\"ref-for-supported-styling-language①\">supported styling language</a>, return."
            },
            {
              "html": "Execute <var>processTheResponse</var> given <var>response</var>"
            }
          ]
        }
      ]
    },
    {
      "name": "handle a PI stylesheet",
      "html": "When a <code>ProcessingInstruction</code> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#boundary-point-node\" id=\"ref-for-boundary-point-node\">node</a> <var>node</var> becomes part of the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#prolog\" id=\"ref-for-prolog\">prolog</a>, is no longer part of the <span id=\"ref-for-prolog①\">prolog</span>, or has its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-cd-data\" id=\"ref-for-concept-cd-data\">data</a> changed, these steps\n must be run:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If an instance of this algorithm is currently running for <var>node</var>, abort that instance, and stop the associated\n  <a data-link-type=\"dfn\" href=\"https://fetch.spec.whatwg.org/#concept-fetch\" id=\"ref-for-concept-fetch①\">fetching</a> if applicable."
        },
        {
          "html": "If <var>node</var> has an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#associated-css-style-sheet\" id=\"ref-for-associated-css-style-sheet③\">associated CSS style sheet</a>, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#remove-a-css-style-sheet\" id=\"ref-for-remove-a-css-style-sheet\">remove</a> it."
        },
        {
          "html": "If <var>node</var> is not an <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-xml-stylesheet\" id=\"ref-for-dt-xml-stylesheet①\">xml-stylesheet processing instruction</a>, then return."
        },
        {
          "html": "If <var>node</var> does not have an <code>href</code> <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-pseudo-attribute\" id=\"ref-for-dt-pseudo-attribute\">pseudo-attribute</a>, then return."
        },
        {
          "html": "Let <var>title</var> be the value of the\n  <code>title</code> <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-pseudo-attribute\" id=\"ref-for-dt-pseudo-attribute①\">pseudo-attribute</a> or the empty string if the\n  <code>title</code> <span id=\"ref-for-dt-pseudo-attribute②\">pseudo-attribute</span> is not specified."
        },
        {
          "html": "If there is an <code>alternate</code> <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-pseudo-attribute\" id=\"ref-for-dt-pseudo-attribute③\">pseudo-attribute</a>\n  whose value is a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive⑥\">case-sensitive</a> match\n  for \"<code>yes</code>\" and <var>title</var> is the\n  empty string, then return."
        },
        {
          "html": "If there is a <code>type</code> <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-pseudo-attribute\" id=\"ref-for-dt-pseudo-attribute④\">pseudo-attribute</a> whose\n  value is not a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#supported-styling-language\" id=\"ref-for-supported-styling-language②\">supported styling language</a> the user agent\n  may return."
        },
        {
          "html": "Let <var>input URL</var> be the value specified by the\n  <code>href</code> <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-pseudo-attribute\" id=\"ref-for-dt-pseudo-attribute⑤\">pseudo-attribute</a>."
        },
        {
          "html": "Let <var>document</var> be <var>node</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document②\">node document</a>"
        },
        {
          "html": "Let <var>base URL</var> be <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#document-base-url\" id=\"ref-for-document-base-url\">document base URL</a>."
        },
        {
          "html": "Let <var>referrer</var> be <var>document</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-url\" id=\"ref-for-concept-document-url\">address</a>."
        },
        {
          "html": "Let <var>parsed URL</var> be the return value of invoking the <a data-link-type=\"dfn\" href=\"https://url.spec.whatwg.org/#concept-url-parser\" id=\"ref-for-concept-url-parser\">URL parser</a> with the\n  string <var>input URL</var> and the base URL <var>base URL</var>."
        },
        {
          "html": "If <var>parsed URL</var> is failure, then return."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#fetch-a-css-style-sheet\" id=\"ref-for-fetch-a-css-style-sheet\">Fetch a CSS style sheet</a>\n   with parsed URL <var>parsed URL</var>,\n   referrer <var>referrer</var>,\n   document <var>document</var>,\n   and <var>processTheResponse</var> given <var>response</var> being the following steps:",
          "rationale": "create",
          "steps": [
            {
              "html": "The CSS <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#environment-encoding\" id=\"ref-for-environment-encoding\">environment encoding</a> is the result of running the following steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If the element has a <code>charset</code>\n      <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/xml-stylesheet/#dt-pseudo-attribute\" id=\"ref-for-dt-pseudo-attribute⑧\">pseudo-attribute</a>,\n      <a data-link-type=\"dfn\" href=\"https://encoding.spec.whatwg.org/#concept-encoding-get\" id=\"ref-for-concept-encoding-get\">get an encoding</a> from that pseudo-attribute’s value.\n      If that succeeds, return the resulting encoding and abort these steps."
                },
                {
                  "html": "Otherwise, return the <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-encoding\" id=\"ref-for-concept-document-encoding\">document’s character encoding</a>.\n      <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/cssom-1/#biblio-dom\" title=\"DOM Standard\">[DOM]</a>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "fetch a Link header stylesheet",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Let <var>title</var> be the value of the first of all the\n  <code>title</code> parameters.\n  If there are no such parameters it is the empty string."
        },
        {
          "html": "If one of the (other) link relation types is an\n  <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-case-insensitive\" id=\"ref-for-ascii-case-insensitive②\">ASCII case-insensitive</a> match for\n  \"<code>alternate</code>\" and <var>title</var> is the\n  empty string, then return."
        },
        {
          "html": "Let <var>input URL</var> be the value specified."
        },
        {
          "html": "Let <var>base URL</var> be the document’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#document-base-url\" id=\"ref-for-document-base-url①\">document base URL</a>."
        },
        {
          "html": "Let <var>referrer</var> be the document’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-document-url\" id=\"ref-for-concept-document-url①\">address</a>."
        },
        {
          "html": "Let <var>parsed URL</var> be the return value of invoking the <a data-link-type=\"dfn\" href=\"https://url.spec.whatwg.org/#concept-url-parser\" id=\"ref-for-concept-url-parser①\">URL parser</a> with the\n  string <var>input URL</var> and the base URL <var>base URL</var>."
        },
        {
          "html": "If <var>parsed URL</var> is failure, then return."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#fetch-a-css-style-sheet\" id=\"ref-for-fetch-a-css-style-sheet①\">Fetch a CSS style sheet</a>\n   with parsed URL <var>parsed URL</var>,\n   referrer <var>referrer</var>,\n   document being the document,\n   and <var>processTheResponse</var>, given <var>response</var>, being the following steps:",
          "rationale": "create",
          "steps": [
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#create-a-css-style-sheet\" id=\"ref-for-create-a-css-style-sheet②\">Create a CSS style sheet</a> with the following properties:\n\n     \n        <dl>\n         <dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-location\" id=\"ref-for-concept-css-style-sheet-location③\">location</a>\n      \n         </dt><dd>The result of invoking the <a data-link-type=\"dfn\" href=\"https://url.spec.whatwg.org/#concept-url-serializer\" id=\"ref-for-concept-url-serializer①\">URL serializer</a> with <var>parsed URL</var>.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-node\" id=\"ref-for-concept-css-style-sheet-owner-node①③\">owner node</a>\n      \n         </dt><dd>null.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-parent-css-style-sheet\" id=\"ref-for-concept-css-style-sheet-parent-css-style-sheet⑤\">parent CSS style sheet</a>\n      \n         </dt><dd>null.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-owner-css-rule\" id=\"ref-for-concept-css-style-sheet-owner-css-rule④\">owner CSS rule</a>\n      \n         </dt><dd>null.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-media\" id=\"ref-for-concept-css-style-sheet-media⑧\">media</a>\n      \n         </dt><dd>The value of the first <code>media</code> parameter.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-title\" id=\"ref-for-concept-css-style-sheet-title①⑥\">title</a>\n      \n         </dt><dd><var>title</var>.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-alternate-flag\" id=\"ref-for-concept-css-style-sheet-alternate-flag⑤\">alternate flag</a>\n      \n         </dt><dd>Set if one of the specified link relation type for this HTTP\n       <code>Link</code> header is an\n       <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-case-insensitive\" id=\"ref-for-ascii-case-insensitive③\">ASCII case-insensitive</a> match for\n       \"<code>alternate</code>\", or false otherwise.\n\n      \n         </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-style-sheet-origin-clean-flag\" id=\"ref-for-concept-css-style-sheet-origin-clean-flag⑥\">origin-clean flag</a>\n      \n         </dt><dd>Set if <var>response</var> is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin\" id=\"ref-for-cors-same-origin②\">CORS-same-origin</a>, or unset otherwise.\n     \n        </dd></dl>"
            }
          ]
        }
      ]
    },
    {
      "name": "parse a CSS rule",
      "href": "https://drafts.csswg.org/cssom-1/#parse-a-css-rule",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-a-css-rule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a CSS rule</dfn> from a string <var>string</var>, run the following steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>rule</var> be the return value of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-rule\" id=\"ref-for-parse-a-rule①\">parse a rule</a> with <var>string</var>."
        },
        {
          "html": "If <var>rule</var> is a syntax error, return <var>rule</var>."
        },
        {
          "html": "Let <var>parsed rule</var> be the result of parsing <var>rule</var> according to the appropriate CSS specifications, dropping parts that are said to be\n ignored. If the whole <var>rule</var> is dropped, return a syntax error."
        },
        {
          "html": "Return <var>parsed rule</var>."
        }
      ]
    },
    {
      "name": "serialize a CSS rule",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-css-rule",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-css-rule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a CSS rule</dfn>, perform one of the following in accordance with the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-rule\" id=\"ref-for-css-rule⑤\">CSS rule</a>’s\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-rule-type\" id=\"ref-for-concept-css-rule-type①\">type</a>:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "CSSStyleRule",
              "html": "Return the result of the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>s</var> initially be\n        the result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-group-of-selectors\" id=\"ref-for-serialize-a-group-of-selectors①\">serialize a group of selectors</a> on the rule’s associated selectors,\n        followed by the string \"<code> {</code>\", i.e., a single SPACE (U+0020), followed by LEFT CURLY BRACKET (U+007B)."
                },
                {
                  "html": "Let <var>decls</var> be the result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration-block\" id=\"ref-for-serialize-a-css-declaration-block\">serialize a CSS declaration block</a> on the rule’s associated declarations, or null if there are no such declarations."
                },
                {
                  "html": "Let <var>rules</var> be the result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-rule\" id=\"ref-for-serialize-a-css-rule\">serialize a CSS rule</a> on each rule in the rule’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://www.w3.org/TR/css-nesting-1/#dom-cssstylerule-cssrules\" id=\"ref-for-dom-cssstylerule-cssrules\">cssRules</a></code> list, or null if there are no such rules."
                },
                {
                  "html": "If <var>decls</var> and <var>rules</var> are both null, append \" }\" to <var>s</var> (i.e. a single SPACE (U+0020) followed by RIGHT CURLY BRACKET (U+007D)) and return <var>s</var>."
                },
                {
                  "html": "If <var>rules</var> is null:",
                  "rationale": "append",
                  "steps": [
                    {
                      "html": "Append a single SPACE (U+0020) to <var>s</var>"
                    },
                    {
                      "html": "Append <var>decls</var> to <var>s</var>"
                    },
                    {
                      "html": "Append \" }\" to <var>s</var> (i.e. a single SPACE (U+0020) followed by RIGHT CURLY BRACKET (U+007D))."
                    },
                    {
                      "html": "Return <var>s</var>."
                    }
                  ]
                },
                {
                  "html": "Otherwise:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <var>decls</var> is not null, prepend it to <var>rules</var>."
                    },
                    {
                      "html": "Otherwise:",
                      "rationale": "append",
                      "steps": [
                        {
                          "html": "Append a newline followed by two spaces to <var>s</var>."
                        },
                        {
                          "html": "Append <var>rule</var> to <var>s</var>."
                        }
                      ]
                    },
                    {
                      "html": "Append a newline followed by RIGHT CURLY BRACKET (U+007D) to <var>s</var>."
                    },
                    {
                      "html": "Return <var>s</var>."
                    }
                  ]
                }
              ]
            },
            {
              "case": "CSSImportRule",
              "html": "The result of concatenating the following:",
              "rationale": "if",
              "steps": [
                {
                  "html": "The string \"<code>@import</code>\" followed by a single SPACE (U+0020)."
                },
                {
                  "html": "The result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-url\" id=\"ref-for-serialize-a-url\">serialize a URL</a> on the rule’s location."
                },
                {
                  "html": "If the rule’s associated media list is not empty, a single SPACE (U+0020) followed by the\n   result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-media-query-list\" id=\"ref-for-serialize-a-media-query-list②\">serialize a media query list</a> on the media list."
                },
                {
                  "html": "The string \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                }
              ]
            },
            {
              "case": "CSSMediaRule",
              "html": "The result of concatenating the following:",
              "ignored": [
                "The string \"@media\", followed by a single SPACE (U+0020). The result of performing serialize a media query list on rule’s media query list. A single SPACE (U+0020), followed by the string \"{\", i.e., LEFT CURLY BRACKET (U+007B), followed by a newline. The result of performing serialize a CSS rule on each rule in the rule’s cssRules list, filtering out empty strings, indenting each item with two spaces, all joined with newline. A newline, followed by the string \"}\", i.e., RIGHT CURLY BRACKET (U+007D)"
              ]
            },
            {
              "case": "CSSFontFaceRule",
              "html": "The result of concatenating the following:",
              "rationale": "if",
              "steps": [
                {
                  "html": "The string \"<code>@font-face {</code>\", followed by a single SPACE (U+0020)."
                },
                {
                  "html": "The string \"<code>font-family:</code>\", followed by a single SPACE (U+0020)."
                },
                {
                  "html": "The result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string④\">serialize a string</a> on the rule’s font family name."
                },
                {
                  "html": "The string \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                },
                {
                  "html": "If the rule’s associated source list is not empty, follow these substeps:",
                  "ignored": [
                    "A single SPACE (U+0020), followed by the string \"src:\", followed by a single SPACE (U+0020). The result of invoking serialize a comma-separated list on performing serialize a URL or serialize a LOCAL for each source on the source list. The string \";\", i.e., SEMICOLON (U+003B)."
                  ]
                },
                {
                  "html": "If rule’s associated <a class=\"property\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-fonts-4/#descdef-font-face-unicode-range\" id=\"ref-for-descdef-font-face-unicode-range\">unicode-range</a> descriptor is present, a single\n   SPACE (U+0020), followed by the string \"<code>unicode-range:</code>\", followed by a single SPACE\n   (U+0020), followed by the result of performing serialize a <span class=\"production\" id=\"ref-for-descdef-font-face-unicode-range①\">&lt;'unicode-range'&gt;</span>, followed by the\n   string \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                },
                {
                  "html": "If rule’s associated <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-fonts-4/#propdef-font-variant\" id=\"ref-for-propdef-font-variant\">font-variant</a> descriptor is present, a single\n   SPACE (U+0020), followed by the string \"<code>font-variant:</code>\", followed by a single SPACE\n   (U+0020), followed by the result of performing serialize a <span class=\"production\" id=\"ref-for-propdef-font-variant①\">&lt;'font-variant'&gt;</span>, followed by the\n   string \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                },
                {
                  "html": "If rule’s associated <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-fonts-4/#propdef-font-feature-settings\" id=\"ref-for-propdef-font-feature-settings\">font-feature-settings</a> descriptor is present, a\n   single SPACE (U+0020), followed by the string \"<code>font-feature-settings:</code>\", followed by\n   a single SPACE (U+0020), followed by the result of performing serialize a\n   <span class=\"production\" id=\"ref-for-propdef-font-feature-settings①\">&lt;'font-feature-settings'&gt;</span>, followed by the string \"<code>;</code>\", i.e., SEMICOLON\n   (U+003B)."
                },
                {
                  "html": "If rule’s associated <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-fonts-4/#propdef-font-stretch\" id=\"ref-for-propdef-font-stretch\">font-stretch</a> descriptor is present, a single\n   SPACE (U+0020), followed by the string \"<code>font-stretch:</code>\", followed by a single SPACE\n   (U+0020), followed by the result of performing serialize a <span class=\"production\" id=\"ref-for-propdef-font-stretch①\">&lt;'font-stretch'&gt;</span>, followed by the\n   string \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                },
                {
                  "html": "If rule’s associated <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-fonts-4/#propdef-font-weight\" id=\"ref-for-propdef-font-weight\">font-weight</a> descriptor is present, a single SPACE\n   (U+0020), followed by the string \"<code>font-weight:</code>\", followed by a single SPACE\n   (U+0020), followed by the result of performing serialize a <span class=\"production\" id=\"ref-for-propdef-font-weight①\">&lt;'font-weight'&gt;</span>, followed by the\n   string \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                },
                {
                  "html": "If rule’s associated <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-fonts-4/#propdef-font-style\" id=\"ref-for-propdef-font-style\">font-style</a> descriptor is present, a single SPACE\n   (U+0020), followed by the string \"<code>font-style:</code>\", followed by a single SPACE (U+0020),\n   followed by the result of performing serialize a <span class=\"production\" id=\"ref-for-propdef-font-style①\">&lt;'font-style'&gt;</span>, followed by the string\n   \"<code>;</code>\", i.e., SEMICOLON (U+003B)."
                },
                {
                  "html": "A single SPACE (U+0020), followed by the string \"}\", i.e., RIGHT CURLY BRACKET (U+007D)."
                }
              ]
            },
            {
              "case": "CSSPageRule",
              "html": ""
            },
            {
              "case": "CSSNamespaceRule",
              "html": "The literal string \"<code>@namespace</code>\", followed by a single SPACE\n (U+0020), followed by the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier⑧\">serialization as an identifier</a> of the\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssnamespacerule-prefix\" id=\"ref-for-dom-cssnamespacerule-prefix\">prefix</a></code> attribute (if\n any), followed by a single SPACE (U+0020) if there is a prefix, followed by the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-url\" id=\"ref-for-serialize-a-url②\">serialization as URL</a> of the\n <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssnamespacerule-namespaceuri\" id=\"ref-for-dom-cssnamespacerule-namespaceuri\">namespaceURI</a></code>\n attribute, followed the character \"<code>;</code>\" (U+003B)."
            },
            {
              "case": "CSSKeyframesRule",
              "html": "The result of concatenating the following:",
              "ignored": [
                "The literal string \"@keyframes\", followed by a single SPACE (U+0020). The serialization of the name attribute. If the attribute is a CSS wide keyword, or the value default, or the value none, then it is serialized as a string. Otherwise, it is serialized as an identifier. The string \" { \", i.e., a single SPACE (U+0020), followed by LEFT CURLY BRACKET (U+007B), followed by a single SPACE (U+0020). The result of performing serialize a CSS rule on each rule in the rule’s cssRules list, separated by a newline and indented by two spaces. A newline, followed by the string \"}\", i.e., RIGHT CURLY BRACKET (U+007D)"
              ]
            },
            {
              "case": "CSSKeyframeRule",
              "html": "The result of concatenating the following:",
              "rationale": "if",
              "steps": [
                {
                  "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/css-animations-1/#dom-csskeyframerule-keytext\" id=\"ref-for-dom-csskeyframerule-keytext\">keyText</a></code>."
                },
                {
                  "html": "The string \"<code> { </code>\", i.e., a single SPACE (U+0020), followed by LEFT CURLY BRACKET (U+007B), followed by a single SPACE (U+0020)."
                },
                {
                  "html": "The result of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration-block\" id=\"ref-for-serialize-a-css-declaration-block①\">serialize a CSS declaration block</a> on the rule’s associated declarations."
                },
                {
                  "html": "If the rule is associated with one or more declarations, the string \"<code> </code>\", i.e., a single SPACE (U+0020)."
                },
                {
                  "html": "The string \"<code>}</code>\", RIGHT CURLY BRACKET (U+007D)."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "insert a CSS rule",
      "href": "https://drafts.csswg.org/cssom-1/#insert-a-css-rule",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"insert-a-css-rule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">insert a CSS rule</dfn> <var>rule</var> in a CSS rule list <var>list</var> at index <var>index</var>,\nwith a flag <var>nested</var>,\nfollow these steps:",
      "rationale": "set",
      "steps": [
        {
          "html": "Set <var>length</var> to the number of items in <var>list</var>."
        },
        {
          "html": "If <var>index</var> is greater than <var>length</var>, then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw④\">throw</a>\n an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror\">IndexSizeError</a></code> exception."
        },
        {
          "html": "Set <var>new rule</var> to the results of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-css-rule\" id=\"ref-for-parse-a-css-rule\">parse a CSS rule</a>\n on argument <var>rule</var>."
        },
        {
          "html": "If <var>new rule</var> is a syntax error, and <var>nested</var> is set,\n perform the following substeps:\n  \n     <ul>\n      <li> Set <var>declarations</var> to the results of performing <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-css-declaration-block\" id=\"ref-for-parse-a-css-declaration-block\">parse a CSS declaration block</a>,\n   on argument <var>rule</var>.\n   \n      </li><li> If <var>declarations</var> is empty, <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw⑤\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror②\">SyntaxError</a></code> exception.\n   \n      </li><li> Otherwise, set <var>new rule</var> to a new <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-nesting-1/#nested-declarations-rule%E2%91%A0\" id=\"ref-for-nested-declarations-rule%E2%91%A0\">nested declarations rule</a>\n   with <var>declarations</var> as it contents.\n  \n     </li></ul>"
        },
        {
          "html": "If <var>new rule</var> is a syntax error, <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw⑥\">throw</a>\n a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#syntaxerror\" id=\"ref-for-syntaxerror③\">SyntaxError</a></code> exception."
        },
        {
          "html": "If <var>new rule</var> cannot be inserted into <var>list</var> at the zero-indexed position <var>index</var> due to constraints\n specified by CSS, then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw⑦\">throw</a>\n a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#hierarchyrequesterror\" id=\"ref-for-hierarchyrequesterror\">HierarchyRequestError</a></code> exception. <a data-link-type=\"biblio\" href=\"https://drafts.csswg.org/cssom-1/#biblio-css21\" title=\"Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification\">[CSS21]</a>"
        },
        {
          "html": "If <var>new rule</var> is an <code>@namespace</code> at-rule, and <var>list</var> contains anything other than\n <code>@import</code> at-rules, and <code>@namespace</code> at-rules,\n <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw⑧\">throw</a> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror\">InvalidStateError</a></code> exception."
        },
        {
          "html": "Insert <var>new rule</var> into <var>list</var> at the zero-indexed position <var>index</var>."
        },
        {
          "html": "Return <var>index</var>."
        }
      ]
    },
    {
      "name": "remove a CSS rule",
      "href": "https://drafts.csswg.org/cssom-1/#remove-a-css-rule",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"remove-a-css-rule\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">remove a CSS rule</dfn> from a CSS rule list <var>list</var> at index <var>index</var>, follow these steps:",
      "rationale": "set",
      "steps": [
        {
          "html": "Set <var>length</var> to the number of items in <var>list</var>."
        },
        {
          "html": "If <var>index</var> is greater than or equal to <var>length</var>, then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw⑨\">throw</a>\n an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror①\">IndexSizeError</a></code> exception."
        },
        {
          "html": "Set <var>old rule</var> to the <var>index</var>th item in <var>list</var>."
        },
        {
          "html": "If <var>old rule</var> is an <code>@namespace</code> at-rule, and <var>list</var> contains anything other than\n <code>@import</code> at-rules, and <code>@namespace</code> at-rules,\n <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw①⓪\">throw</a> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①\">InvalidStateError</a></code> exception."
        },
        {
          "html": "Remove rule <var>old rule</var> from <var>list</var> at the zero-indexed position <var>index</var>."
        },
        {
          "html": "Set <var>old rule</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-rule-parent-css-rule\" id=\"ref-for-concept-css-rule-parent-css-rule\">parent CSS rule</a> and\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-css-rule-parent-css-style-sheet\" id=\"ref-for-concept-css-rule-parent-css-style-sheet\">parent CSS style sheet</a> to null."
        }
      ]
    },
    {
      "name": "CSSRule/type",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssrule-type",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSRule\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-cssrule-type\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>type</code></dfn> attribute is deprecated.\nIt must return an integer, as follows:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "If the object is a CSSStyleRule",
              "html": "Return 1."
            },
            {
              "case": "If the object is a CSSImportRule",
              "html": "Return 3."
            },
            {
              "case": "If the object is a CSSMediaRule",
              "html": "Return 4."
            },
            {
              "case": "If the object is a CSSFontFaceRule",
              "html": "Return 5."
            },
            {
              "case": "If the object is a CSSPageRule",
              "html": "Return 6."
            },
            {
              "case": "If the object is a CSSKeyframesRule",
              "html": "Return 7."
            },
            {
              "case": "If the object is a CSSKeyframeRule",
              "html": "Return 8."
            },
            {
              "case": "If the object is a CSSMarginRule",
              "html": "Return 9."
            },
            {
              "case": "If the object is a CSSNamespaceRule",
              "html": "Return 10."
            },
            {
              "case": "If the object is a CSSCounterStyleRule",
              "html": "Return 11."
            },
            {
              "case": "If the object is a CSSSupportsRule",
              "html": "Return 12."
            },
            {
              "case": "If the object is a CSSFontFeatureValuesRule",
              "html": "Return 14."
            },
            {
              "case": "Otherwise",
              "html": "Return 0."
            }
          ]
        }
      ]
    },
    {
      "name": "CSSStyleRule/selectorText",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstylerule-selectortext",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleRule\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-cssstylerule-selectortext\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>selectorText</code></dfn> attribute, on getting, must return the result of\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-group-of-selectors\" id=\"ref-for-serialize-a-group-of-selectors②\">serializing</a> the rule’s associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#selector-list\" id=\"ref-for-selector-list\">selector list</a>.\nOn setting the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstylerule-selectortext\" id=\"ref-for-dom-cssstylerule-selectortext①\">selectorText</a></code> attribute these steps must be run:",
      "rationale": "run",
      "steps": [
        {
          "html": "Run the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-group-of-selectors\" id=\"ref-for-parse-a-group-of-selectors\">parse a group of selectors</a> algorithm on the given value."
        },
        {
          "html": "If the algorithm returns a non-null value replace the associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#selector-list\" id=\"ref-for-selector-list①\">selector list</a> with the returned value."
        },
        {
          "html": "Otherwise, if the algorithm returns a null value, do nothing."
        }
      ]
    },
    {
      "name": "CSSPageRule/selectorText",
      "href": "https://drafts.csswg.org/cssom-1/#dom-csspagerule-selectortext",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSPageRule\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-csspagerule-selectortext\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>selectorText</code></dfn> attribute, on getting, must return the result of\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-list-of-css-page-selectors\" id=\"ref-for-serialize-a-list-of-css-page-selectors\">serializing</a> the associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#selector-list\" id=\"ref-for-selector-list②\">selector list</a>.\nOn setting the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-csspagerule-selectortext\" id=\"ref-for-dom-csspagerule-selectortext①\">selectorText</a></code> attribute  these steps must be run:",
      "rationale": "run",
      "steps": [
        {
          "html": "Run the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-list-of-css-page-selectors\" id=\"ref-for-parse-a-list-of-css-page-selectors\">parse a list of CSS page selectors</a> algorithm on the given value."
        },
        {
          "html": "If the algorithm returns a non-null value replace the associated <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/selectors-4/#selector-list\" id=\"ref-for-selector-list③\">selector list</a> with the returned value."
        },
        {
          "html": "Otherwise, if the algorithm returns a null value, do nothing."
        }
      ]
    },
    {
      "name": "parse a CSS declaration block",
      "href": "https://drafts.csswg.org/cssom-1/#parse-a-css-declaration-block",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-a-css-declaration-block\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a CSS declaration block</dfn> from a string <var>string</var>, follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>declarations</var> be the returned declarations from invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-blocks-contents\" id=\"ref-for-parse-a-blocks-contents\">parse a block’s contents</a> with <var>string</var>."
        },
        {
          "html": "Let <var>parsed declarations</var> be a new empty list."
        },
        {
          "html": "For each item <var>declaration</var> in <var>declarations</var>, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>parsed declaration</var> be the result of parsing <var>declaration</var> according to the appropriate CSS specifications, dropping parts that\n   are said to be ignored. If the whole declaration is dropped, let <var>parsed declaration</var> be null."
            },
            {
              "html": "If <var>parsed declaration</var> is not null, append it to <var>parsed declarations</var>."
            }
          ]
        },
        {
          "html": "Return <var>parsed declarations</var>."
        }
      ]
    },
    {
      "name": "serialize a CSS declaration",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-css-declaration\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a CSS declaration</dfn> with property name <var>property</var>, value <var>value</var> and optionally an <i>important</i> flag set, follow\nthese steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>s</var> be the empty string."
        },
        {
          "html": "Append <var>property</var> to <var>s</var>."
        },
        {
          "html": "Append \"<code>: </code>\" (U+003A U+0020) to <var>s</var>."
        },
        {
          "html": "If <var>value</var> contains any non-whitespace characters,\n    append <var>value</var> to <var>s</var>."
        },
        {
          "html": "If the <i>important</i> flag is set, append \"<code> !important</code>\" (U+0020 U+0021 U+0069 U+006D U+0070 U+006F U+0072 U+0074 U+0061 U+006E\n U+0074) to <var>s</var>."
        },
        {
          "html": "Append \"<code>;</code>\" (U+003B) to <var>s</var>."
        },
        {
          "html": "Return <var>s</var>."
        }
      ]
    },
    {
      "name": "serialize a CSS declaration block",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration-block",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-css-declaration-block\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a CSS declaration block</dfn> <var>declaration block</var> means to run the steps below:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>list</var> be an empty array."
        },
        {
          "html": "Let <var>already serialized</var> be an empty array."
        },
        {
          "html": "<i>Declaration loop</i>: For each <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration③\">CSS declaration</a> <var>declaration</var> in <var>declaration block</var>’s\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations③\">declarations</a>, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>property</var> be <var>declaration</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name①\">property name</a>."
            },
            {
              "html": "If <var>property</var> is in <var>already serialized</var>, continue with the steps labeled <i>declaration loop</i>."
            },
            {
              "html": "If <var>property</var> maps to one or more shorthand properties, let <var>shorthands</var> be an array of those shorthand properties, in\n   <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-shorthands-preferred-order\" id=\"ref-for-concept-shorthands-preferred-order\">preferred order</a>."
            },
            {
              "html": "<i>Shorthand loop</i>: For each <var>shorthand</var> in <var>shorthands</var>, follow these substeps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>longhands</var> be an array consisting of all <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration④\">CSS declarations</a> in <var>declaration block</var>’s\n     <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations④\">declarations</a> that are not in <var>already serialized</var> and have a\n     <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name②\">property name</a> that\n     maps to one of the shorthand properties in <var>shorthands</var>."
                },
                {
                  "html": "If not all properties that map to <var>shorthand</var> are present in <var>longhands</var>, continue with the steps labeled <i>shorthand loop</i>."
                },
                {
                  "html": "Let <var>current longhands</var> be an empty array."
                },
                {
                  "html": "Append all <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration⑤\">CSS declarations</a> in <var>longhands</var> that have a\n     <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name③\">property name</a> that maps to <var>shorthand</var> to <var>current longhands</var>."
                },
                {
                  "html": "If there are one or more <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration⑥\">CSS declarations</a> in <var>current longhands</var> that have their\n     <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-important-flag\" id=\"ref-for-css-declaration-important-flag\">important flag</a> set and one or more with it unset, continue with\n     the steps labeled <i>shorthand loop</i>."
                },
                {
                  "html": "If there is any declaration in <var>declaration block</var> in between the first and the last longhand in <var>current longhands</var>\n     which belongs to the same <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-logical-1/#logical-property-group\" id=\"ref-for-logical-property-group\">logical property group</a>, but has a different <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-logical-1/#mapping-logic\" id=\"ref-for-mapping-logic\">mapping logic</a> as any of the longhands in <var>current longhands</var>,\n     and is not in <var>current longhands</var>, continue with the steps labeled <i>shorthand loop</i>."
                },
                {
                  "html": "Let <var>value</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-value\" id=\"ref-for-serialize-a-css-value①\">serialize a CSS value</a> with <var>current longhands</var>."
                },
                {
                  "html": "If <var>value</var> is the empty string, continue with the steps labeled <i>shorthand loop</i>."
                },
                {
                  "html": "Let <var>serialized declaration</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration\" id=\"ref-for-serialize-a-css-declaration\">serialize a CSS declaration</a> with property name\n     <var>shorthand</var>, value <var>value</var>, and the <i>important</i> flag set if the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration⑦\">CSS declarations</a> in\n     <var>current longhands</var> have their <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-important-flag\" id=\"ref-for-css-declaration-important-flag①\">important flag</a> set."
                },
                {
                  "html": "Append <var>serialized declaration</var> to <var>list</var>."
                },
                {
                  "html": "Append the property names of all items of <var>current longhands</var> to <var>already serialized</var>."
                },
                {
                  "html": "Continue with the steps labeled <i>declaration loop</i>."
                }
              ]
            },
            {
              "html": "Let <var>value</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-value\" id=\"ref-for-serialize-a-css-value②\">serialize a CSS value</a> of <var>declaration</var>."
            },
            {
              "html": "Let <var>serialized declaration</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration\" id=\"ref-for-serialize-a-css-declaration①\">serialize a CSS declaration</a> with property name <var>property</var>, value\n   <var>value</var>, and the <i>important</i> flag set if <var>declaration</var> has its <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-important-flag\" id=\"ref-for-css-declaration-important-flag②\">important\n   flag</a> set."
            },
            {
              "html": "Append <var>serialized declaration</var> to <var>list</var>."
            },
            {
              "html": "Append <var>property</var> to <var>already serialized</var>."
            }
          ]
        },
        {
          "html": "Return <var>list</var> joined with \"<code> </code>\" (U+0020)."
        }
      ]
    },
    {
      "html": "A <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-block\" id=\"ref-for-css-declaration-block⑤\">CSS declaration block</a> has these <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-change-ext\" id=\"ref-for-concept-element-attributes-change-ext\">attribute change steps</a> for its <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-owner-node\" id=\"ref-for-cssstyledeclaration-owner-node④\">owner node</a>\nwith <var>localName</var>, <var>value</var>, and <var>namespace</var>:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-computed-flag\" id=\"ref-for-cssstyledeclaration-computed-flag③\">computed flag</a> is set, then return."
        },
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-updating-flag\" id=\"ref-for-cssstyledeclaration-updating-flag\">updating flag</a> is set, then return."
        },
        {
          "html": "If <var>localName</var> is not \"<code>style</code>\", or <var>namespace</var> is not null, then return."
        },
        {
          "html": "If <var>value</var> is null, empty the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations⑤\">declarations</a>."
        },
        {
          "html": "Otherwise, let the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations⑥\">declarations</a> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-css-declaration-block\" id=\"ref-for-parse-a-css-declaration-block①\">parse a CSS declaration block</a>\n from a string <var>value</var>."
        }
      ]
    },
    {
      "html": "When a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-block\" id=\"ref-for-css-declaration-block⑥\">CSS declaration block</a> object is created, then:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>owner node</var> be the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-owner-node\" id=\"ref-for-cssstyledeclaration-owner-node⑤\">owner node</a>."
        },
        {
          "html": "If <var>owner node</var> is null, or the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-computed-flag\" id=\"ref-for-cssstyledeclaration-computed-flag④\">computed flag</a> is set, then return."
        },
        {
          "html": "Let <var>value</var> be the result of <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\" id=\"ref-for-concept-element-attributes-get-by-namespace\">getting an attribute</a>\n given null, \"<code>style</code>\", and <var>owner node</var>."
        },
        {
          "html": "If <var>value</var> is not null, let the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations⑦\">declarations</a> be the result of\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-css-declaration-block\" id=\"ref-for-parse-a-css-declaration-block②\">parse a CSS declaration block</a> from a string <var>value</var>."
        }
      ]
    },
    {
      "name": "update style attribute for",
      "href": "https://drafts.csswg.org/cssom-1/#update-style-attribute-for",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"update-style-attribute-for\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">update style attribute for</dfn> <var>declaration block</var> means to run the steps below:",
      "rationale": "assert",
      "steps": [
        {
          "html": "Assert: <var>declaration block</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-computed-flag\" id=\"ref-for-cssstyledeclaration-computed-flag⑤\">computed flag</a> is unset."
        },
        {
          "html": "Let <var>owner node</var> be <var>declaration block</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-owner-node\" id=\"ref-for-cssstyledeclaration-owner-node⑥\">owner node</a>."
        },
        {
          "html": "If <var>owner node</var> is null, then return."
        },
        {
          "html": "Set <var>declaration block</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-updating-flag\" id=\"ref-for-cssstyledeclaration-updating-flag①\">updating flag</a>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-element-attributes-set-value\" id=\"ref-for-concept-element-attributes-set-value\">Set an attribute value</a> for <var>owner node</var> using \"<code>style</code>\" and the result of\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration-block\" id=\"ref-for-serialize-a-css-declaration-block②\">serializing</a> <var>declaration block</var>."
        },
        {
          "html": "Unset <var>declaration block</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-updating-flag\" id=\"ref-for-cssstyledeclaration-updating-flag②\">updating flag</a>."
        }
      ]
    },
    {
      "name": "preferred order",
      "href": "https://drafts.csswg.org/cssom-1/#concept-shorthands-preferred-order",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"concept-shorthands-preferred-order\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">preferred order</dfn> of a list of shorthand properties <var>shorthands</var> is as follows:",
      "rationale": "move",
      "steps": [
        {
          "html": "Order <var>shorthands</var> lexicographically."
        },
        {
          "html": "Move all items in <var>shorthands</var> that begin with \"<code>-</code>\" (U+002D) last in the list, retaining their relative order."
        },
        {
          "html": "Move all items in <var>shorthands</var> that begin with \"<code>-</code>\" (U+002D) but do not begin with \"<code>-webkit-</code>\" last in the\n list, retaining their relative order."
        },
        {
          "html": "Order <var>shorthands</var> by the number of longhand properties that map to it, with the greatest number first."
        }
      ]
    },
    {
      "name": "CSSStyleDeclaration/cssText",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-csstext",
      "html": "Getting the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleDeclaration\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-cssstyledeclaration-csstext\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>cssText</code></dfn> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-computed-flag\" id=\"ref-for-cssstyledeclaration-computed-flag⑥\">computed flag</a> is set, then return the empty string.</p>"
        },
        {
          "html": "<p>Return the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-declaration-block\" id=\"ref-for-serialize-a-css-declaration-block③\">serializing</a> the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations⑨\">declarations</a>.</p>"
        }
      ]
    },
    {
      "html": "Setting the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-csstext\" id=\"ref-for-dom-cssstyledeclaration-csstext①\">cssText</a></code> attribute must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-readonly-flag\" id=\"ref-for-cssstyledeclaration-readonly-flag③\">readonly flag</a> is set,\n then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw①①\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#nomodificationallowederror\" id=\"ref-for-nomodificationallowederror\">NoModificationAllowedError</a></code> exception."
        },
        {
          "html": "Empty the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①⓪\">declarations</a>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-css-declaration-block\" id=\"ref-for-parse-a-css-declaration-block③\">Parse</a> the given value and, if the return value is not the empty list, insert the items in the list\n into the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①①\">declarations</a>, in <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-declarations-specified-order\" id=\"ref-for-concept-declarations-specified-order③\">specified order</a>."
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#update-style-attribute-for\" id=\"ref-for-update-style-attribute-for\">Update style attribute for</a> the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-block\" id=\"ref-for-css-declaration-block⑧\">CSS declaration block</a>."
        }
      ]
    },
    {
      "name": "CSSStyleDeclaration/getPropertyValue(property)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-getpropertyvalue",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleDeclaration\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-cssstyledeclaration-getpropertyvalue\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getPropertyValue(<var>property</var>)</code></dfn> method must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>property</var> is not a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-1/#custom-property\" id=\"ref-for-custom-property①\">custom property</a>, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>property</var> be <var>property</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase②\">converted to ASCII lowercase</a>."
            },
            {
              "html": "If <var>property</var> is a shorthand property, then follow these substeps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>list</var> be a new empty array."
                },
                {
                  "html": "For each longhand property <var>longhand</var> that <var>property</var> maps to, in canonical order, follow these substeps:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "If <var>longhand</var> is a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive⑧\">case-sensitive</a> match for a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name⑤\">property\n       name</a> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration①②\">CSS declaration</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①③\">declarations</a>, let <var>declaration</var>\n       be that <span id=\"ref-for-css-declaration①③\">CSS declaration</span>, or null otherwise."
                    },
                    {
                      "html": "If <var>declaration</var> is null, then return the empty string."
                    },
                    {
                      "html": "Append the <var>declaration</var> to <var>list</var>."
                    }
                  ]
                },
                {
                  "html": "If <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-important-flag\" id=\"ref-for-css-declaration-important-flag③\">important flags</a> of all declarations in <var>list</var> are same,\n     then return the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-value\" id=\"ref-for-serialize-a-css-value③\">serialization</a> of <var>list</var>."
                },
                {
                  "html": "Return the empty string."
                }
              ]
            }
          ]
        },
        {
          "html": "If <var>property</var> is a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive⑨\">case-sensitive</a>\n match for a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name⑥\">property name</a> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration①④\">CSS declaration</a> in the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①④\">declarations</a>, then return the result of invoking\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-value\" id=\"ref-for-serialize-a-css-value④\">serialize a CSS value</a> of that declaration."
        },
        {
          "html": "Return the empty string."
        }
      ]
    },
    {
      "name": "CSSStyleDeclaration/getPropertyPriority(property)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-getpropertypriority",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleDeclaration\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-cssstyledeclaration-getpropertypriority\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getPropertyPriority(<var>property</var>)</code></dfn> method must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If <var>property</var> is not a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-1/#custom-property\" id=\"ref-for-custom-property②\">custom property</a>, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>property</var> be <var>property</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase③\">converted to ASCII lowercase</a>."
            },
            {
              "html": "If <var>property</var> is a shorthand property, follow these substeps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>list</var> be a new array."
                },
                {
                  "html": "For each longhand property <var>longhand</var> that <var>property</var> maps to, append the result of invoking\n     <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-getpropertypriority\" id=\"ref-for-dom-cssstyledeclaration-getpropertypriority①\">getPropertyPriority()</a></code> with <var>longhand</var> as argument to <var>list</var>."
                },
                {
                  "html": "If all items in <var>list</var> are the string \"<code>important</code>\", then return the string \"<code>important</code>\"."
                }
              ]
            }
          ]
        },
        {
          "html": "If <var>property</var> is a\n <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive①⓪\">case-sensitive</a> match for a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name⑦\">property name</a> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration①⑤\">CSS\n declaration</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①⑤\">declarations</a> that has the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-important-flag\" id=\"ref-for-css-declaration-important-flag④\">important flag</a> set, return the string \"<code>important</code>\"."
        },
        {
          "html": "Return the empty string."
        }
      ]
    },
    {
      "name": "CSSStyleDeclaration/setProperty(property, value, priority)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-setproperty",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleDeclaration\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"setProperty(property, value, priority)|setProperty(property, value)\" id=\"dom-cssstyledeclaration-setproperty\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>setProperty(<var>property</var>, <var>value</var>, <var>priority</var>)</code></dfn> method must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-readonly-flag\" id=\"ref-for-cssstyledeclaration-readonly-flag④\">readonly flag</a> is set,\n then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw①②\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#nomodificationallowederror\" id=\"ref-for-nomodificationallowederror①\">NoModificationAllowedError</a></code> exception."
        },
        {
          "html": "If <var>property</var> is not a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-1/#custom-property\" id=\"ref-for-custom-property③\">custom property</a>, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>property</var> be <var>property</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase④\">converted to ASCII lowercase</a>."
            },
            {
              "html": "If <var>property</var> is not a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive①①\">case-sensitive</a> match for a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#supported-css-property\" id=\"ref-for-supported-css-property①\">supported CSS property</a>, then return."
            }
          ]
        },
        {
          "html": "If <var>value</var> is the empty string, invoke <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-removeproperty\" id=\"ref-for-dom-cssstyledeclaration-removeproperty①\">removeProperty()</a></code>\n with <var>property</var> as argument and return."
        },
        {
          "html": "If <var>priority</var> is not the empty string and is not an <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-case-insensitive\" id=\"ref-for-ascii-case-insensitive④\">ASCII case-insensitive</a> match for the string\n \"<code>important</code>\", then return."
        },
        {
          "html": "Let <var>component value list</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#parse-a-css-value\" id=\"ref-for-parse-a-css-value\">parsing</a> <var>value</var> for property <var>property</var>."
        },
        {
          "html": "If <var>component value list</var> is null, then return."
        },
        {
          "html": "Let <var>updated</var> be false."
        },
        {
          "html": "If <var>property</var> is a shorthand property, then for each longhand property <var>longhand</var> that <var>property</var> maps to, in canonical\n order, follow these substeps:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let <var>longhand result</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#set-a-css-declaration\" id=\"ref-for-set-a-css-declaration\">set the CSS declaration</a>\n   <var>longhand</var> with the appropriate value(s) from <var>component value list</var>, with the <i>important</i>\n   flag set if <var>priority</var> is not the empty string, and unset otherwise, and with the list of declarations\n   being the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①⑥\">declarations</a>."
            },
            {
              "html": "If <var>longhand result</var> is true, let <var>updated</var> be true."
            }
          ]
        },
        {
          "html": "Otherwise, let <var>updated</var> be the result of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#set-a-css-declaration\" id=\"ref-for-set-a-css-declaration①\">set the CSS declaration</a>\n <var>property</var> with value <var>component value list</var>, with the <i>important</i> flag set if\n <var>priority</var> is not the empty string, and unset otherwise, and with the list of declarations being the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①⑦\">declarations</a>."
        },
        {
          "html": "If <var>updated</var> is true, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#update-style-attribute-for\" id=\"ref-for-update-style-attribute-for①\">update style attribute for</a> the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-block\" id=\"ref-for-css-declaration-block⑨\">CSS declaration block</a>."
        }
      ]
    },
    {
      "name": "set a CSS declaration",
      "href": "https://drafts.csswg.org/cssom-1/#set-a-css-declaration",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"set-a-css-declaration\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">set a CSS declaration</dfn> <var>property</var> with a value <var>component value list</var> and optionally with an <i>important</i> flag set, in\na list of declarations <var>declarations</var>, the user agent must ensure the following constraints hold after its steps:",
      "rationale": "To <dfn>"
    },
    {
      "name": "CSSStyleDeclaration/removeProperty(property)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-removeproperty",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"CSSStyleDeclaration\" data-dfn-type=\"method\" data-export=\"\" id=\"dom-cssstyledeclaration-removeproperty\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>removeProperty(<var>property</var>)</code></dfn> method must run these steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-readonly-flag\" id=\"ref-for-cssstyledeclaration-readonly-flag⑤\">readonly flag</a> is set,\n then <a data-link-type=\"dfn\" href=\"http://heycam.github.io/webidl/#dfn-throw\" id=\"ref-for-dfn-throw①③\">throw</a> a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#nomodificationallowederror\" id=\"ref-for-nomodificationallowederror②\">NoModificationAllowedError</a></code> exception."
        },
        {
          "html": "If <var>property</var> is not a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-1/#custom-property\" id=\"ref-for-custom-property④\">custom property</a>,\n let <var>property</var> be <var>property</var> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑤\">converted to ASCII lowercase</a>."
        },
        {
          "html": "Let <var>value</var> be the return value of invoking <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#dom-cssstyledeclaration-getpropertyvalue\" id=\"ref-for-dom-cssstyledeclaration-getpropertyvalue①\">getPropertyValue()</a></code>\n with <var>property</var> as argument."
        },
        {
          "html": "Let <var>removed</var> be false."
        },
        {
          "html": "If <var>property</var> is a shorthand property, for each longhand property <var>longhand</var> that <var>property</var> maps to:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>longhand</var> is not a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name①④\">property name</a> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration②③\">CSS declaration</a>\n   in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①⑧\">declarations</a>, <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue②\">continue</a>."
            },
            {
              "html": "Remove that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration②④\">CSS declaration</a> and let <var>removed</var> be true."
            }
          ]
        },
        {
          "html": "Otherwise, if <var>property</var> is a <a data-link-type=\"dfn\" href=\"https://w3c.github.io/i18n-glossary/#dfn-case-sensitive\" id=\"ref-for-dfn-case-sensitive①④\">case-sensitive</a> match for a\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-property-name\" id=\"ref-for-css-declaration-property-name①⑤\">property name</a> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration②⑤\">CSS declaration</a> in the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations①⑨\">declarations</a>, remove that <span id=\"ref-for-css-declaration②⑥\">CSS declaration</span> and let <var>removed</var> be true."
        },
        {
          "html": "If <var>removed</var> is true, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#update-style-attribute-for\" id=\"ref-for-update-style-attribute-for②\">Update style attribute for</a> the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration-block\" id=\"ref-for-css-declaration-block①⓪\">CSS declaration block</a>."
        },
        {
          "html": "Return <var>value</var>."
        }
      ]
    },
    {
      "name": "CSS property to IDL attribute",
      "href": "https://drafts.csswg.org/cssom-1/#css-property-to-idl-attribute",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"css-property-to-idl-attribute\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">CSS property to IDL attribute</dfn> algorithm for <var>property</var>, optionally with a\n<i>lowercase first</i> flag set, is as follows:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>output</var> be the empty string."
        },
        {
          "html": "Let <var>uppercase next</var> be unset."
        },
        {
          "html": "If the <i>lowercase first</i> flag is set, remove the first character from <var>property</var>."
        },
        {
          "html": "For each character <var>c</var> in <var>property</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>c</var> is \"<code>-</code>\" (U+002D), let <var>uppercase next</var> be set."
            },
            {
              "html": "Otherwise, if <var>uppercase next</var> is set, let <var>uppercase next</var> be unset and append <var>c</var>\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-uppercase\" id=\"ref-for-ascii-uppercase\">converted to ASCII uppercase</a> to <var>output</var>."
            },
            {
              "html": "Otherwise, append <var>c</var> to <var>output</var>."
            }
          ]
        },
        {
          "html": "Return <var>output</var>."
        }
      ]
    },
    {
      "name": "IDL attribute to CSS property",
      "href": "https://drafts.csswg.org/cssom-1/#idl-attribute-to-css-property",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"idl-attribute-to-css-property\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">IDL attribute to CSS property</dfn> algorithm for <var>attribute</var>, optionally with a\n<i>dash prefix</i> flag set, is as follows:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>output</var> be the empty string."
        },
        {
          "html": "If the <i>dash prefix</i> flag is set, append \"<code>-</code>\" (U+002D) to <var>output</var>."
        },
        {
          "html": "For each character <var>c</var> in <var>attribute</var>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>c</var> is in the range U+0041 to U+005A (ASCII uppercase), append \"<code>-</code>\" (U+002D) followed by <var>c</var>\n   <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑥\">converted to ASCII lowercase</a> to <var>output</var>."
            },
            {
              "html": "Otherwise, append <var>c</var> to <var>output</var>."
            }
          ]
        },
        {
          "html": "Return <var>output</var>."
        }
      ]
    },
    {
      "name": "parse a CSS value",
      "href": "https://drafts.csswg.org/cssom-1/#parse-a-css-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"parse-a-css-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">parse a CSS value</dfn> <var>value</var> for a given\n<var>property</var> means to follow these steps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>list</var> be the value returned by invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#parse-a-list-of-component-values\" id=\"ref-for-parse-a-list-of-component-values\">parse a list of component values</a> from <var>value</var>."
        },
        {
          "html": "Match <var>list</var> against the grammar for the property <var>property</var> in the CSS specification."
        },
        {
          "html": "If the above step failed, return null."
        },
        {
          "html": "Return <var>list</var>."
        }
      ]
    },
    {
      "name": "serialize a CSS value",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-css-value",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-css-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a CSS value</dfn> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration②⑦\">CSS declaration</a> <var>declaration</var>\nor a list of longhand <span id=\"ref-for-css-declaration②⑧\">CSS declarations</span> <var>list</var>,\nfollow these rules:",
      "rationale": "if",
      "steps": [
        {
          "html": "If this algorithm is invoked with a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list\">list</a> <var>list</var>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>shorthand</var> be the first shorthand property,\nin <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#concept-shorthands-preferred-order\" id=\"ref-for-concept-shorthands-preferred-order①\">preferred order</a>,\nthat exactly maps to all of the longhand properties in <var>list</var>.</p>"
            },
            {
              "html": "<p>If there is no such shorthand or\n <var>shorthand</var> cannot exactly represent the values of all the properties in <var>list</var>,\nreturn the empty string.</p>"
            },
            {
              "html": "<p>Otherwise, <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-value\" id=\"ref-for-serialize-a-css-value⑤\">serialize a CSS value</a>\nfrom a hypothetical declaration of the property <var>shorthand</var>\nwith its value representing the combined values of the declarations in <var>list</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Represent the value of the <var>declaration</var>\nas a <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#list\" id=\"ref-for-list①\">list</a> of CSS component values <var>components</var>\nthat, when <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar\">parsed</a> according to the property’s grammar,\nwould represent that value.\nAdditionally, unless otherwise specified:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>If certain component values can appear in any order\nwithout changing the meaning of the value\n(a pattern typically represented by a double bar <a data-link-type=\"grammar\" href=\"https://drafts.csswg.org/css-values-4/#comb-any\" id=\"ref-for-comb-any\">||</a> in the value syntax),\nreorder the component values to use the canonical order of component values\nas given in the property definition table.</p>\n      </li><li data-md=\"\">\n       <p>If component values can be omitted or replaced with a shorter representation\nwithout changing the meaning of the value,\nomit/replace them.</p>\n      </li><li data-md=\"\">\n       <p>If either of the above syntactic translations would be less backwards-compatible,\ndo not perform them.</p>\n     </li></ul>"
        },
        {
          "html": "<p>Remove any <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-syntax-3/#typedef-whitespace-token\" id=\"ref-for-typedef-whitespace-token\">&lt;whitespace-token&gt;</a>s from <var>components</var>.</p>"
        },
        {
          "html": "<p>Replace each component value in <var>components</var>\nwith the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-component-value\" id=\"ref-for-serialize-a-css-component-value\">serialize a CSS component value</a>.</p>"
        },
        {
          "html": "<p>Join the items of <var>components</var> into a single string,\ninserting \" \" (U+0020 SPACE) between each pair of items\nunless the second item is a \",\" (U+002C COMMA)\nReturn the result.</p>"
        }
      ]
    },
    {
      "name": "serialize a CSS component value",
      "href": "https://drafts.csswg.org/cssom-1/#serialize-a-css-component-value",
      "html": "To\n<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"serialize-a-css-component-value\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">serialize a CSS component value</dfn>\ndepends on the component, as follows:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "keyword",
              "html": "The keyword\n <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ascii-lowercase\" id=\"ref-for-ascii-lowercase⑦\">converted to ASCII lowercase</a>."
            },
            {
              "case": "<angle>",
              "html": "The &lt;number&gt; component serialized as per &lt;number&gt; followed by the unit in canonical form as defined in its respective specification."
            },
            {
              "case": "<color>",
              "html": "If &lt;color&gt; is a component of a resolved value, see <a href=\"https://drafts.csswg.org/css-color-4/#resolving-color-values\"><cite>CSS Color 4</cite> §  14. Resolving &lt;color&gt; Values</a>.\n\n\n     <p>If &lt;color&gt; is a component of a computed value, see <a href=\"https://drafts.csswg.org/css-color-4/#serializing-color-values\"><cite>CSS Color 4</cite> §  15. Serializing &lt;color&gt; Values</a>.</p>\n     <p>If <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/css-color-5/#typedef-color\" id=\"ref-for-typedef-color①\" title=\"Expands to: &lt;alpha-value&gt; | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | currentcolor | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | none | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | transparent | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen\">&lt;color&gt;</a> is a component of a declared value, then\nfor sRGB values, see\n<a href=\"https://drafts.csswg.org/css-color-4/#resolving-sRGB-values\"><cite>CSS Color 4</cite> § 14.1 Resolving sRGB values</a>.\nFor other color functions, see\n<a href=\"https://drafts.csswg.org/css-color-4/#resolving-color-values\"><cite>CSS Color 4</cite> §  14. Resolving &lt;color&gt; Values</a>.</p>"
            },
            {
              "case": "<alpha-value>",
              "html": "See <a href=\"https://drafts.csswg.org/css-color-4/#serializing-alpha-values\"><cite>CSS Color 4</cite> § 15.1 Serializing alpha values</a>."
            },
            {
              "case": "<counter>",
              "html": "The return value of the following algorithm:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>s</var> be the empty string."
                },
                {
                  "html": "If &lt;counter&gt; has three CSS component values append the string\n   \"<code>counters(</code>\" to <var>s</var>."
                },
                {
                  "html": "If &lt;counter&gt; has two CSS component values append the string\n   \"<code>counter(</code>\" to <var>s</var>."
                },
                {
                  "html": "Let <var>list</var> be a list of CSS component values belonging to &lt;counter&gt;, omitting the last CSS component value if it is \"decimal\"."
                },
                {
                  "html": "Let each item in <var>list</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-component-value\" id=\"ref-for-serialize-a-css-component-value①\">serialize a CSS component value</a> on that item."
                },
                {
                  "html": "Append the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-comma-separated-list\" id=\"ref-for-serialize-a-comma-separated-list④\">serialize a comma-separated list</a> on <var>list</var> to <var>s</var>."
                },
                {
                  "html": "Append \"<code>)</code>\" (U+0029) to <var>s</var>."
                },
                {
                  "html": "Return <var>s</var>."
                }
              ]
            },
            {
              "case": "<frequency>",
              "html": "The &lt;number&gt; component serialized as per &lt;number&gt; followed by the unit in its canonical form as defined in its respective specification."
            },
            {
              "case": "<identifier>",
              "html": "The identifier\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-an-identifier\" id=\"ref-for-serialize-an-identifier①⓪\">serialized as an identifier</a>."
            },
            {
              "case": "<integer>",
              "html": "A base-ten integer using digits 0-9 (U+0030 to U+0039) in the\n shortest form possible, preceded by \"<code>-</code>\" (U+002D) if it is\n negative."
            },
            {
              "case": "<length>",
              "html": "The &lt;number&gt; component serialized as per &lt;number&gt; followed by the unit in its canonical form as defined in its respective specification."
            },
            {
              "case": "<number>",
              "html": "A base-ten number using digits 0-9 (U+0030 to U+0039) in the shortest form possible,\n  using \"<code>.</code>\" to separate decimals (if any),\n  rounding the value if necessary to not produce more than 6 decimals,\n  preceded by \"<code>-</code>\" (U+002D) if it is negative."
            },
            {
              "case": "<percentage>",
              "html": "The &lt;number&gt; component serialized as per &lt;number&gt; followed\n by the literal string \"<code>%</code>\" (U+0025)."
            },
            {
              "case": "<resolution>",
              "html": "The resolution in dots per <a class=\"css\" data-link-type=\"value\" href=\"https://drafts.csswg.org/css-values-4/#px\" id=\"ref-for-px\">CSS pixel</a> serialized as per\n &lt;number&gt; followed by the literal string \"<code>dppx</code>\"."
            },
            {
              "case": "<ratio>",
              "html": "The numerator serialized as per &lt;number&gt;\n     followed by the literal string \"<code> / </code>\",\n     followed by the denominator serialized as per &lt;number&gt;."
            },
            {
              "case": "<shape>",
              "html": "The return value of the following algorithm:",
              "rationale": "let",
              "steps": [
                {
                  "html": "Let <var>s</var> be the string \"<code>rect(</code>\"."
                },
                {
                  "html": "Let <var>list</var> be a list of the CSS component values belonging to &lt;shape&gt;."
                },
                {
                  "html": "Let each item in <var>list</var> be the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-css-component-value\" id=\"ref-for-serialize-a-css-component-value②\">serialize a CSS component value</a> of that item."
                },
                {
                  "html": "Append the result of invoking <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-comma-separated-list\" id=\"ref-for-serialize-a-comma-separated-list⑤\">serialize a comma-separated list</a> on <var>list</var> to <var>s</var>."
                },
                {
                  "html": "Append \"<code>)</code>\" (U+0029) to <var>s</var>."
                },
                {
                  "html": "Return <var>s</var>."
                }
              ]
            },
            {
              "case": "<string>",
              "html": "The string\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string⑥\">serialized as a string</a>."
            },
            {
              "case": "<family-name>",
              "html": "The string\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-string\" id=\"ref-for-serialize-a-string⑥\">serialized as a string</a>."
            },
            {
              "case": "<time>",
              "html": "The time in seconds serialized as per &lt;number&gt; followed by\n the literal string \"<code>s</code>\"."
            },
            {
              "case": "<url>",
              "html": "The <a data-link-type=\"dfn\" href=\"https://url.spec.whatwg.org/#absolute-url-string\" id=\"ref-for-absolute-url-string①\">absolute-URL string</a>\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#serialize-a-url\" id=\"ref-for-serialize-a-url③\">serialized as URL</a>."
            }
          ]
        }
      ]
    },
    {
      "name": "Window/getComputedStyle(elt, pseudoElt)",
      "href": "https://drafts.csswg.org/cssom-1/#dom-window-getcomputedstyle",
      "html": "The <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"Window\" data-dfn-type=\"method\" data-export=\"\" data-lt=\"getComputedStyle(elt, pseudoElt)|getComputedStyle(elt)\" id=\"dom-window-getcomputedstyle\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>getComputedStyle(<var>elt</var>, <var>pseudoElt</var>)</code></dfn> method must run these\nsteps:",
      "rationale": "let",
      "steps": [
        {
          "html": "Let <var>doc</var> be <var>elt</var>’s <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-node-document\" id=\"ref-for-concept-node-document③\">node document</a>."
        },
        {
          "html": "Let <var>obj</var> be <var>elt</var>."
        },
        {
          "html": "If <var>pseudoElt</var> is provided, is not the empty string, and starts with a colon, then:",
          "rationale": "parse",
          "steps": [
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-syntax-3/#css-parse-something-according-to-a-css-grammar\" id=\"ref-for-css-parse-something-according-to-a-css-grammar①\">Parse</a> <var>pseudoElt</var> as a <a class=\"production css\" data-link-type=\"type\" href=\"https://drafts.csswg.org/selectors-4/#typedef-pseudo-element-selector\" id=\"ref-for-typedef-pseudo-element-selector\">&lt;pseudo-element-selector&gt;</a>, and let <var>type</var> be the result."
            },
            {
              "html": "If <var>type</var> is failure, or is a <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-scoping-1/#selectordef-slotted\" id=\"ref-for-selectordef-slotted\">::slotted()</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-shadow-parts-1/#selectordef-part\" id=\"ref-for-selectordef-part\">::part()</a> pseudo-element, let <var>obj</var> be null."
            },
            {
              "html": "Otherwise let <var>obj</var> be the given pseudo-element of <var>elt</var>."
            }
          ]
        },
        {
          "html": "Let <var>decls</var> be an empty list of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#css-declaration\" id=\"ref-for-css-declaration②⑨\">CSS declarations</a>."
        },
        {
          "html": "If <var>obj</var> is not null, and <var>elt</var> is <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#connected\" id=\"ref-for-connected\">connected</a>,\n  part of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-scoping-1/#flat-tree\" id=\"ref-for-flat-tree\">flat tree</a>,\n  and its <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-shadow-including-root\" id=\"ref-for-concept-shadow-including-root\">shadow-including root</a> has a <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/browsers.html#browsing-context\" id=\"ref-for-browsing-context\">browsing context</a> which either\n  doesn’t have a <u class=\"link-error\" data-lt=\"browsing context container\" title=\"LINK ERROR: No 'dfn' refs found for 'browsing context container' that are marked for export.\n  (Possible specs this could be from: longtasks-1)\">browsing context container</u>, or whose\n  <u class=\"link-error\" data-lt=\"browsing context container\" title=\"LINK ERROR: No 'dfn' refs found for 'browsing context container' that are marked for export.\n  (Possible specs this could be from: longtasks-1)\">browsing context container</u> is <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/rendering.html#being-rendered\" id=\"ref-for-being-rendered\">being rendered</a>,\n  set <var>decls</var> to a list of all longhand properties that are\n  <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#supported-css-property\" id=\"ref-for-supported-css-property⑤\">supported CSS properties</a>, in lexicographical order,\n  with the value being the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value\">resolved value</a> computed for <var>obj</var>\n  using the style rules associated with <var>doc</var>. Additionally, append to\n  <var>decls</var> all the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-1/#custom-property\" id=\"ref-for-custom-property⑤\">custom properties</a> whose <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value\">computed value</a>\n  for <var>obj</var> is not the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-variables-2/#guaranteed-invalid-value\" id=\"ref-for-guaranteed-invalid-value\">guaranteed-invalid value</a>."
        },
        {
          "html": "Return a live <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-1/#cssstyleproperties\" id=\"ref-for-cssstyleproperties⑥\">CSSStyleProperties</a></code> object with the following properties:\n  \n     <dl>\n      <dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-computed-flag\" id=\"ref-for-cssstyledeclaration-computed-flag⑦\">computed flag</a>\n   \n      </dt><dd>Set.\n   \n      </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-readonly-flag\" id=\"ref-for-cssstyledeclaration-readonly-flag⑦\">readonly flag</a>\n   \n      </dt><dd>Set.\n   \n      </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-declarations\" id=\"ref-for-cssstyledeclaration-declarations②⓪\">declarations</a>\n   \n      </dt><dd><var>decls</var>.\n   \n      </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-parent-css-rule\" id=\"ref-for-cssstyledeclaration-parent-css-rule⑤\">parent CSS rule</a>\n   \n      </dt><dd>Null.\n   \n      </dd><dt><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#cssstyledeclaration-owner-node\" id=\"ref-for-cssstyledeclaration-owner-node⑧\">owner node</a>\n   \n      </dt><dd><var>obj</var>.\n  \n     </dd></dl>"
        }
      ]
    },
    {
      "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value①\">resolved value</a> for a given longhand property can be determined\nas follows:",
      "rationale": ".switch",
      "steps": [
        {
          "operation": "switch",
          "steps": [
            {
              "case": "background-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-block-end-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-block-start-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-bottom-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-inline-end-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-inline-start-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-left-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-right-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "border-top-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "box-shadow",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "caret-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "outline-color",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "A resolved value special case property like color defined in another specification",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value②\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value\">used value</a>."
            },
            {
              "case": "line-height",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value③\">resolved value</a> is <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-inline-3/#valdef-line-height-normal\" id=\"ref-for-valdef-line-height-normal\">normal</a> if the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value①\">computed value</a> is <span class=\"css\" id=\"ref-for-valdef-line-height-normal①\">normal</span>, or the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value①\">used value</a> otherwise."
            },
            {
              "case": "block-size",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "height",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "inline-size",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-block-end",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-block-start",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-bottom",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-inline-end",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-inline-start",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-left",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-right",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "margin-top",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-block-end",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-block-start",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-bottom",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-inline-end",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-inline-start",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-left",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-right",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "padding-top",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "width",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "A resolved value special case property like height defined in another specification",
              "html": "If the property applies to the element or pseudo-element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value④\">resolved value</a> of the\n <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display\">display</a> property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents\">contents</a>, then the <span id=\"ref-for-resolved-value⑤\">resolved value</span>\n is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value②\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑥\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value②\">computed value</a>."
            },
            {
              "case": "bottom",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "left",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "inset-block-end",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "inset-block-start",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "inset-inline-end",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "inset-inline-start",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "right",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "top",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "A resolved value special case property like top defined in another specification",
              "html": "If the property applies to a positioned element and the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value⑦\">resolved value</a> of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-display-4/#propdef-display\" id=\"ref-for-propdef-display①\">display</a>\n property is not <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-none\" id=\"ref-for-valdef-display-none①\">none</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-display-4/#valdef-display-contents\" id=\"ref-for-valdef-display-contents①\">contents</a>, and the property is not over-constrained,\n then the <span id=\"ref-for-resolved-value⑧\">resolved value</span> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#used-value\" id=\"ref-for-used-value③\">used value</a>. Otherwise the <span id=\"ref-for-resolved-value⑨\">resolved value</span> is the\n <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value③\">computed value</a>."
            },
            {
              "case": "A resolved value special case property defined in another specification",
              "html": "As defined in the relevant specification."
            },
            {
              "case": "Any other property",
              "html": "The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/cssom-1/#resolved-value\" id=\"ref-for-resolved-value①⓪\">resolved value</a> is the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-cascade-5/#computed-value\" id=\"ref-for-computed-value④\">computed value</a>."
            }
          ]
        }
      ]
    }
  ]
}