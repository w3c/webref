{
  "spec": {
    "title": "CSS Containment Module Level 2",
    "url": "https://drafts.csswg.org/css-contain-2/"
  },
  "algorithms": [
    {
      "name": "layout containment",
      "href": "https://drafts.csswg.org/css-contain-2/#layout-containment",
      "html": "Giving an element <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"layout-containment\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">layout containment</dfn>\n\tmakes its <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#principal-box\" id=\"ref-for-principal-box①⓪\">principal box</a> a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"layout-containment-box\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">layout containment box</dfn>\n\tand has the following effects:",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box①\">layout containment box</a> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-display-4/#establish-an-independent-formatting-context\" id=\"ref-for-establish-an-independent-formatting-context\">establishes an independent formatting context</a>.</p>"
        },
        {
          "html": "<p>If at least one <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmentation-container\" id=\"ref-for-fragmentation-container\">fragmentation container</a> of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmentation-context\" id=\"ref-for-fragmentation-context\">fragmentation context</a> has <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment\" id=\"ref-for-layout-containment④\">layout containment</a>,\nor if at least one <span id=\"ref-for-fragmentation-container①\">fragmentation container</span> of a <span id=\"ref-for-fragmentation-context①\">fragmentation context</span> is a descendant of <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box②\">layout containment box</a>\n<strong>and</strong> at least one subsequent <span id=\"ref-for-fragmentation-container②\">fragmentation container</span> of the same <span id=\"ref-for-fragmentation-context②\">fragmentation context</span>\nis not a descendant of that same element with layout containment,\nthen the first <span id=\"ref-for-layout-containment-box③\">layout containment box</span>\nwhich is either a <span id=\"ref-for-fragmentation-container③\">fragmentation container</span> itself\nor is an ancestor of a <span id=\"ref-for-fragmentation-container④\">fragmentation container</span>\nmust “trap” the remainder of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmented-flow\" id=\"ref-for-fragmented-flow\">fragmented flow</a>:\n<a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmentation\" id=\"ref-for-fragmentation①\">fragmentation</a> must not continue past the <span id=\"ref-for-layout-containment⑤\">layout containment</span> boundary,\nand the last <span id=\"ref-for-fragmentation-container⑤\">fragmentation container</span>\nwithin the first <span id=\"ref-for-layout-containment⑥\">layout containment</span> boundary\nis treated as if it is the last <span id=\"ref-for-fragmentation-container⑥\">fragmentation container</span>\nin its <span id=\"ref-for-fragmentation-context③\">fragmentation context</span>.</p>\n     <p>If subsequent <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmentation-container\" id=\"ref-for-fragmentation-container⑦\">fragmentation containers</a> in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmentation-context\" id=\"ref-for-fragmentation-context④\">fragmentation context</a>\nare only generated when more content remains in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#fragmented-flow\" id=\"ref-for-fragmented-flow①\">fragmented flow</a>,\nthen they are not generated.\nIf they would exist regardless,\nthey remain part of the <span id=\"ref-for-fragmentation-context⑤\">fragmentation context</span>,\nbut do not receive any content from the <span id=\"ref-for-fragmented-flow②\">fragmented flow</span>.</p>"
        },
        {
          "html": "<p>If the computed value of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-overflow-3/#propdef-overflow\" id=\"ref-for-propdef-overflow①\">overflow</a> property is\neither <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-overflow-3/#valdef-overflow-visible\" id=\"ref-for-valdef-overflow-visible\">visible</a> or <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-overflow-3/#valdef-overflow-clip\" id=\"ref-for-valdef-overflow-clip\">clip</a> or a combination thereof,\nany overflow must be treated as <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-overflow-3/#ink-overflow\" id=\"ref-for-ink-overflow\">ink overflow</a>.</p>"
        },
        {
          "html": "<p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box⑤\">layout containment box</a> establishes an <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-position-3/#absolute-positioning-containing-block\" id=\"ref-for-absolute-positioning-containing-block\">absolute positioning containing block</a> and a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-position-3/#fixed-positioning-containing-block\" id=\"ref-for-fixed-positioning-containing-block\">fixed positioning containing block</a>.</p>"
        },
        {
          "html": "<p>The <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box⑥\">layout containment box</a> creates a <a data-link-type=\"dfn\" href=\"https://www.w3.org/TR/CSS2/visuren.html#x43\" id=\"ref-for-x43\">stacking context</a>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-break-3/#forced-break\" id=\"ref-for-forced-break\">Forced breaks</a> are allowed within <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box⑦\">layout containment boxes</a>\nbut do not propagate to the parent as otherwise described in <a href=\"https://drafts.csswg.org/css-break-3/#break-between\"><cite>CSS Fragmentation 3</cite> § 3.1 Breaks Between Boxes: the break-before and break-after properties</a>.</p>"
        },
        {
          "html": "<p>For the purpose of the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-inline-3/#propdef-vertical-align\" id=\"ref-for-propdef-vertical-align\">vertical-align</a> property,\nor any other property whose effects\nneed to relate the position of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box⑧\">layout containment box</a>’s baseline\nto something other than its descendants,\nthe <span id=\"ref-for-layout-containment-box⑨\">containment box</span> is treated as having no baseline.</p>"
        }
      ]
    },
    {
      "html": "Possible optimizations that can be enabled by <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment\" id=\"ref-for-layout-containment⑨\">layout containment</a> include (but are not limited to):",
      "rationale": "in parallel",
      "steps": [
        {
          "html": "<p>When laying out the page,\nthe contents of separate <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box①⓪\">containment boxes</a>\ncan be laid out in parallel,\nas they’re guaranteed not to affect each other.</p>"
        },
        {
          "html": "<p>When laying out the page,\nif the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#layout-containment-box\" id=\"ref-for-layout-containment-box①①\">containment box</a> is off-screen or obscured\nand the layout of the visible parts of the screen do not depend on the size of the <span id=\"ref-for-layout-containment-box①②\">containment box</span>\n(for example, if the <span id=\"ref-for-layout-containment-box①③\">containment box</span> is near the end of a block container,\nand you’re viewing the beginning of the block container),\nthe layout of the <span id=\"ref-for-layout-containment-box①④\">containment box</span>' contents can be delayed or done at a lower priority.</p>\n     <p>(When paired with <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#size-containment\" id=\"ref-for-size-containment⑦\">size containment</a>,\nthis optimization can be applied more liberally.)</p>"
        }
      ]
    },
    {
      "html": "Possible optimizations that can be enabled by <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#paint-containment\" id=\"ref-for-paint-containment③\">paint containment</a> include (but are not limited to):",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#paint-containment-box\" id=\"ref-for-paint-containment-box⑤\">containment box</a> is off-screen or obscured,\nthe UA can usually skip trying to paint its contents,\nas they’re guaranteed to be off-screen/obscured as well.</p>"
        },
        {
          "html": "<p>Unless the clipped content is made accessible via a separate mechanism\nsuch as the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-overflow-3/#propdef-overflow\" id=\"ref-for-propdef-overflow③\">overflow</a>, <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-ui-4/#propdef-resize\" id=\"ref-for-propdef-resize①\">resize</a>, or <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-ui-3/#propdef-text-overflow\" id=\"ref-for-propdef-text-overflow①\">text-overflow</a> properties,\nthe UA can reserve \"canvas\" space for the box exactly the box’s size.\n(In similar, scrollable, situations, like <span class=\"css\" id=\"ref-for-propdef-overflow④\">overflow: hidden</span>,\nit’s possible to scroll to the currently-clipped content,\nso UAs often predictively overpaint somewhat\nso there’s something to see as soon as the scroll happens,\nrather than a frame later.)</p>"
        },
        {
          "html": "<p>Because they are guaranteed to be stacking contexts,\nscrolling elements can be painted into a single GPU layer.</p>"
        }
      ]
    },
    {
      "name": "update currently relevant to the user",
      "href": "https://drafts.csswg.org/css-contain-2/#update-currently-relevant-to-the-user",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"update-currently-relevant-to-the-user\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">update currently relevant to the user</dfn> given an element <var>element</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>currentlyRelevant</var> be true if <var>element</var> is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#relevant-to-the-user\" id=\"ref-for-relevant-to-the-user①\">relevant to the user</a>, otherwise false.</p>"
        },
        {
          "html": "<p>If <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#currently-relevant-to-the-user\" id=\"ref-for-currently-relevant-to-the-user\">currently relevant to the user</a> flag is equal to <var>currentlyRelevant</var>, then return false.</p>"
        },
        {
          "html": "<p>Set <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#currently-relevant-to-the-user\" id=\"ref-for-currently-relevant-to-the-user①\">currently relevant to the user</a> flag to <var>currentlyRelevant</var>.</p>"
        },
        {
          "html": "<p>return true.</p>"
        }
      ]
    },
    {
      "name": "update content relevancy for a document",
      "href": "https://drafts.csswg.org/css-contain-2/#update-content-relevancy-for-a-document",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-export=\"\" id=\"update-content-relevancy-for-a-document\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">update content relevancy for a document</dfn> given a document <var>doc</var>, and a boolean <var>updateNonInitial</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>changed</var> be false.</p>"
        },
        {
          "html": "For each <var>element</var> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#connected\" id=\"ref-for-connected\">connected</a> to doc with <a class=\"css\" data-link-type=\"maybe\" href=\"https://drafts.csswg.org/css-contain-2/#valdef-content-visibility-auto\" id=\"ref-for-valdef-content-visibility-auto\">auto</a> used value of <span class=\"css\">content-visibility</span>:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <var>updateNonInitial</var> is true:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#update-currently-relevant-to-the-user\" id=\"ref-for-update-currently-relevant-to-the-user\">update currently relevant to the user</a> for <var>element</var> returns true.",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>changed</var> to true.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Let <var>isInitialDetermination</var> be true if <var>element</var>’s <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#proximity-to-the-viewport\" id=\"ref-for-proximity-to-the-viewport⑤\">proximity to the viewport</a> is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#not-determined\" id=\"ref-for-not-determined②\">not determined</a>, otherwise false.</p>"
            },
            {
              "html": "<p>Determine <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#proximity-to-the-viewport\" id=\"ref-for-proximity-to-the-viewport⑥\">proximity to the viewport</a> for <var>element</var>.</p>"
            },
            {
              "html": "<p>If <var>isInitialDetermination</var> is false, then <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#iteration-continue\" id=\"ref-for-iteration-continue\">continue</a>.</p>"
            },
            {
              "html": "If <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#update-currently-relevant-to-the-user\" id=\"ref-for-update-currently-relevant-to-the-user①\">update currently relevant to the user</a> for <var>element</var> returns true.",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <var>changed</var> to true.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>return <var>changed</var>.</p>"
        }
      ]
    },
    {
      "html": "<a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility①③\">content-visibility: hidden</a> lays powerful restrictions onto an element,\n\tand so should be used with caution.\n\tIt also enables some very useful scenarios,\n\toften improving on existing techniques,\n\ta few of which are outlined here.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If a page needs to take some measurements of elements or text\nwhich aren’t themselves going to be rendered,\ncommonly this is done by positioning the stuff-to-be-measured off-screen,\nusing something like <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-position-3/#propdef-position\" id=\"ref-for-propdef-position\">position: absolute; left: -100000px;</a>,\nthen calling an API like <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-getboundingclientrect\" id=\"ref-for-dom-element-getboundingclientrect\">getBoundingClientRect()</a></code>.</p>\n     <p>Unfortunately, even though the page never intends to display this content,\nthe user agent will still have to do full styling, layout, and rendering for the content,\n<em>just in case</em> it affects what’s shown on screen.\nThe author also can’t,\nwithout further work,\nguarantee that the content <em>won’t</em> accidentally show up on-screen;\neven a very negative <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-position-3/#propdef-left\" id=\"ref-for-propdef-left\">left</a> value (like above) might not be enough,\ndepending on the content.</p>\n     <p>Wrapping this content in a <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility①④\">content-visibility: hidden</a> container\nsolves all of these problems.\nIf the wrapper has no border, background, etc,\nthen it and its <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents⑧\">skipped contents</a> are guaranteed to never render anything to the screen,\nno matter how big they get.\nBecause the contents are <span id=\"ref-for-skips-its-contents⑨\">skipped</span>,\nthe user agent can also avoid styling or laying them out\nuntil absolutely necessary,\nwhen script finally asks for it.</p>"
        },
        {
          "html": "<p>A \"single-page app\" often consists of several independent panes or \"views\",\nof which only one is displayed at a time.</p>\n     <p>If the author wants to avoid paying styling/layout/rendering/etc cost\nfor the inactive views,\nthey can remove them from the document entirely,\nor at minimum apply <span class=\"css\">display:none</span> to them.\nUnfortunately,\nthis means that when the view <em>does</em> need to be displayed,\nall of the styling/layout/rendering/etc work needs to be done all at once,\npotentially causing a noticeable delay before the view actually shows up.</p>\n     <p>Alternately, the view can just be positioned off-screen.\nThis means it’ll be immediately ready when it’s time to be used,\nbut it incurs the cost of styling/layout/rendering all the time,\nwhich might be significant,\nespecially if there are a number of inactive views.\nThe inactive views also might still show up to accessibility tooling,\nconfusing users of screen-readers,\npeople using Ctrl-F to find-in-page, etc.</p>\n     <p><a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility①⑤\">content-visibility: hidden</a> improves on both of these options.\nBecause the contents are <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents①⓪\">skipped</a>,\nthe user agent isn’t spending time on them when they’re not active.\nThey’re also not visible to screen readers,\nfind-in-page,\nand other tools.\nAnd because user agents <em>should</em> preserve previous styling/layout work if possible,\nif the view was displayed before,\nre-rendering it might be very fast.</p>"
        },
        {
          "html": "<p>If an author wants to make an element \"invisible\",\nbut still show up in the page for layout purposes,\none option is <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-display-4/#propdef-visibility\" id=\"ref-for-propdef-visibility②\">visibility: hidden</a>.\nHowever, descendants of a <span class=\"css\" id=\"ref-for-propdef-visibility③\">visibility: hidden</span> element\ncan set <span class=\"css\" id=\"ref-for-propdef-visibility④\">visibility: visible</span>\nand start showing up again,\nwhich isn’t always intuitive or expected.</p>\n     <p><a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility①⑥\">content-visibility: hidden</a> performs a very similar purpose,\nbut descendants can’t turn it \"off\" and start displaying;\nthey stay \"hidden\" until the ancestor turns it off.</p>\n     <p>Because <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility①⑦\">content-visibility: hidden</a> also applies many <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#containment\" id=\"ref-for-containment⑧\">containment</a> values to the container,\nit’s not always quite as usable as <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-display-4/#propdef-visibility\" id=\"ref-for-propdef-visibility⑤\">visibility: hidden</a> would be,\nbut when its restrictions are acceptable,\nit can be a more reliable,\nmore consistent way to hide an element’s contents.</p>"
        }
      ]
    },
    {
      "html": "Note that elements in <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility②⑧\">content-visibility: auto</a> subtrees remain semantically\nrelevant even for elements that <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents②②\">skip its contents</a>. This means that it is\ninappropriate to use this signal to indefinitely skip DOM updates in the\nsubtree that is skipped. Instead, it should be used to deprioritize updates,\nbut ensure that the content remains semantically relevant and reasonably\nup-to-date. This is particularly important for assistive technologies which\nconsume this content even when the ancestor is set to <span id=\"ref-for-skips-its-contents②③\">skip its contents</span>.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>From the perspective of an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/IntersectionObserver/#intersectionobserver\" id=\"ref-for-intersectionobserver\">IntersectionObserver</a></code>,\nthe <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents②④\">skipped contents</a> of an element\nare never intersecting the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/IntersectionObserver/#intersectionobserver-intersection-root\" id=\"ref-for-intersectionobserver-intersection-root\">intersection root</a>.\nThis is true even if both the root and the target elements\nare in the <span id=\"ref-for-skips-its-contents②⑤\">skipped contents</span>.</p>"
        },
        {
          "html": "<p>From the perspective of a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/resize-observer-1/#resizeobserver\" id=\"ref-for-resizeobserver\">ResizeObserver</a></code>,\nthe <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents②⑥\">skipped contents</a> of an element\nnever change their size.\nIf these elements become non-skipped later,\nthe resize observation will be delivered\nif the new size differs from the last size used to notify the resize observer.</p>"
        },
        {
          "html": "<p>If an element starts or stops <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents②⑦\">skipping its contents</a>,\nthis change happens when <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#update-content-relevancy-for-a-document\" id=\"ref-for-update-content-relevancy-for-a-document\">update content relevancy for a document</a> runs.</p>"
        },
        {
          "html": "<p>Elements with <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility②⑨\">content-visibility: auto</a>\nthat have not determined <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#proximity-to-the-viewport\" id=\"ref-for-proximity-to-the-viewport⑦\">proximity to the viewport</a>\nmust determine their proximity to the viewport\nin the next <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#update-the-rendering\" id=\"ref-for-update-the-rendering①\">update the rendering</a> cycle.\nThe effect of this determination must be reflected in the visual update which results from this <span id=\"ref-for-update-the-rendering②\">update the rendering</span> cycle.\nSee <a href=\"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-processing-model:content-visibility-auto\">the event loop process model</a> for the concrete algorithm description.</p>"
        },
        {
          "html": "<p>For the purposes of scrolling operations,\nsuch as <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://drafts.csswg.org/cssom-view-1/#dom-element-scrollintoview\" id=\"ref-for-dom-element-scrollintoview\">scrollIntoView()</a></code>,\nan element with <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility③①\">content-visibility: auto</a>\nthat is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents③③\">skipping its contents</a>\nhas its size and location determined\n<em>with</em> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#size-containment\" id=\"ref-for-size-containment①②\">size containment</a> still active.</p>\n     \n     \n     <p>If an element is not available to user-agent features\n(for example, if it is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents③⑤\">skipped</a>\ndue to a <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility③②\">content-visibility: hidden</a> ancestor),\nthen scrolling operations\nmust not scroll to it at all,\nas if it did not have a layout box.</p>"
        },
        {
          "html": "<p>If an element with <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility③③\">content-visibility: auto</a>\nthat is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents③⑥\">skipping its contents</a>\nis focused\n(or its contents are),\nit becomes <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#relevant-to-the-user\" id=\"ref-for-relevant-to-the-user⑤\">relevant to the user</a>\n(and thus stops <span id=\"ref-for-skips-its-contents③⑦\">skipping its contents</span>)\n<em>before</em> it is scrolled into view due to the focusing.</p>"
        },
        {
          "html": "<p>If an <code><a data-link-type=\"element\" href=\"https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-iframe-element\" id=\"ref-for-the-iframe-element\">iframe</a></code> <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents③⑧\">skips its contents</a>\nor is part of an element’s <span id=\"ref-for-skips-its-contents③⑨\">skipped contents</span>,\nthe user agent should entirely skip the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#update-the-rendering\" id=\"ref-for-update-the-rendering③\">Update The Rendering</a>\nstep in the iframe’s event loop,\nif possible.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents④①\">Skipped contents</a> do not contribute to the result of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/dom.html#dom-innertext\" id=\"ref-for-dom-innertext\">innerText</a></code>.</p>"
        },
        {
          "html": "<p>While an element is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents④②\">skipped</a>,\nCSS transitions and animations on the element do not update:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>New animations are not created even if newly-applied style would start one.</p>\n      </li><li data-md=\"\">\n       <p>Existing animations do not advance in their timeline.</p>\n      </li><li data-md=\"\">\n       <p>Running animations on the element do not end.</p>\n     </li></ul>\n     <p>If script queries the style of a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents④③\">skipped</a> element\n(causing a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-transitions-1/#style-change-event\" id=\"ref-for-style-change-event\">style change event</a>)\nsuch that knowing the state of animations or transitions is required\nto return correct information,\nanimation and transitions are sampled\naccording to the styles at the time of that <span id=\"ref-for-style-change-event①\">style change event</span>:</p>\n     \n     <p><a href=\"https://drafts.csswg.org/css-animations-2/#events\"><cite>CSS Animations 2</cite> § 6 Animation Events</a> and <a href=\"https://drafts.csswg.org/css-transitions-2/#transition-events\"><cite>CSS Transitions 2</cite> § 5 Transition Events</a>\ndefines what objects are created\nand what events are fired,\nwith what data,\nwhen an animation or transition is updated,.</p>\n     <p>When an element stops being <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents④④\">skipped</a>,\nanimations and transitions are sampled\nand then resume advancing on their timelines as normal from that point.</p>"
        },
        {
          "html": "<p>While an element is <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents④⑤\">skipped</a>,\nit must not start any transitions,\neven if a <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-transitions-1/#style-change-event\" id=\"ref-for-style-change-event②\">style change event</a> affects its computed styles.</p>\n     <p>When an element stops being <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-2/#skips-its-contents\" id=\"ref-for-skips-its-contents④⑥\">skipped</a>,\nit must not start any transitions\nas a result of the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-transitions-1/#style-change-event\" id=\"ref-for-style-change-event③\">style change event</a>\nassociated with it no longer being <span id=\"ref-for-skips-its-contents④⑦\">skipped</span>.</p>"
        },
        {
          "html": "<p>If an element has an ancestor with <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-contain-2/#propdef-content-visibility\" id=\"ref-for-propdef-content-visibility③④\">content-visibility: hidden</a>,\nand it is placed in the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-position-4/#document-top-layer\" id=\"ref-for-document-top-layer①\">top layer</a>,\nit does not generate any boxes,\nas if it were <a class=\"css\" data-link-type=\"propdesc\" href=\"https://drafts.csswg.org/css-display-3/#propdef-display\" id=\"ref-for-propdef-display①③\">display: none</a>.</p>"
        }
      ]
    }
  ]
}