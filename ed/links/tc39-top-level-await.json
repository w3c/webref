{
  "spec": {
    "title": "Top-Level Await",
    "url": "https://tc39.es/proposal-top-level-await/"
  },
  "links": {
    "https://tc39.es/ecma262/": [
      "await",
      "sec-keywords-and-reserved-words",
      "running-execution-context",
      "sec-execution-contexts",
      "assert",
      "execution-context-stack",
      "sec-call",
      "sec-list-and-record-specification-type",
      "prod-ModuleSpecifier",
      "script-record",
      "sec-import-calls",
      "sec-normalcompletion",
      "sec-hostresolveimportedmodule",
      "sec-completion-record-specification-type",
      "sec-getmodulenamespace",
      "sec-createbuiltinfunction",
      "sec-performpromisethen",
      "realm-record",
      "realm",
      "sec-environment-records",
      "sec-module-namespace-objects",
      "integer",
      "sourctextmodule-record",
      "sec-source-text-module-record-initialize-environment",
      "eqn-min",
      "surrounding-agent",
      "sec-newpromisecapability",
      "sec-promise-constructor",
      "sec-throwcompletion",
      "active-function-object",
      "sec-ecmascript-language-source-code",
      "sec-context-free-grammars",
      "early-error",
      "sec-importedlocalnames",
      "exportentry-record",
      "module-environment",
      "sec-suspend",
      "prod-ImportDeclaration",
      "prod-StatementListItem",
      "prod-LineTerminator",
      "prod-annexB-BindingIdentifier",
      "prod-FormalParameters",
      "prod-PropertyName",
      "prod-UniqueFormalParameters",
      "prod-FunctionBody",
      "prod-UnaryExpression",
      "prod-AsyncGeneratorDeclaration",
      "prod-AsyncGeneratorExpression",
      "sec-static-semantic-rules",
      "prod-Script",
      "prod-FunctionExpression",
      "prod-GeneratorExpression",
      "prod-FromClause",
      "prod-VariableStatement",
      "prod-Declaration",
      "prod-HoistableDeclaration",
      "prod-ClassDeclaration",
      "prod-AssignmentExpression"
    ],
    "https://github.com/tc39/proposal-top-level-await/blob/HEAD/README.md": []
  }
}