// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
[Global=Window,
 Exposed=Window,
 LegacyUnenumerableNamedProperties]
interface Window : EventTarget {
  // the current browsing context
  [LegacyUnforgeable] readonly attribute WindowProxy window;
  [Replaceable] readonly attribute WindowProxy self;
  [LegacyUnforgeable] readonly attribute Document document;
  attribute DOMString name;
  [PutForwards=href, LegacyUnforgeable] readonly attribute Location location;
  readonly attribute History history;
  readonly attribute CustomElementRegistry customElements;
  [Replaceable] readonly attribute BarProp locationbar;
  [Replaceable] readonly attribute BarProp menubar;
  [Replaceable] readonly attribute BarProp personalbar;
  [Replaceable] readonly attribute BarProp scrollbars;
  [Replaceable] readonly attribute BarProp statusbar;
  [Replaceable] readonly attribute BarProp toolbar;
  attribute DOMString status;
  undefined close();
  readonly attribute boolean closed;
  undefined stop();
  undefined focus();
  undefined blur();

  // other browsing contexts
  [Replaceable] readonly attribute WindowProxy frames;
  [Replaceable] readonly attribute unsigned long length;
  [LegacyUnforgeable] readonly attribute WindowProxy? top;
  attribute any opener;
  [Replaceable] readonly attribute WindowProxy? parent;
  readonly attribute Element? frameElement;
  WindowProxy? open(optional USVString url = "", optional DOMString target = "_blank", optional [LegacyNullToEmptyString] DOMString features = "");
  getter object (DOMString name);
  // Since this is the global object, the IDL named getter adds a NamedPropertiesObject exotic
  // object on the prototype chain. Indeed, this does not make the global object an exotic object.
  // Indexed access is taken care of by the WindowProxy exotic object.

  // the user agent
  readonly attribute Navigator navigator;
  readonly attribute Navigator clientInformation; // legacy alias of .navigator
  readonly attribute boolean originAgentCluster;

  // user prompts
  undefined alert();
  undefined alert(DOMString message);
  boolean confirm(optional DOMString message = "");
  DOMString? prompt(optional DOMString message = "", optional DOMString default = "");
  undefined print();

  undefined postMessage(any message, USVString targetOrigin, optional sequence<object> transfer = []);
  undefined postMessage(any message, optional WindowPostMessageOptions options = {});

  // also has obsolete members
};

// Source: Compatibility Standard (https://compat.spec.whatwg.org/)
partial interface Window {
    readonly attribute short orientation;
    attribute EventHandler onorientationchange;
};

// Source: DOM Standard (https://dom.spec.whatwg.org/)
partial interface Window {
  [Replaceable] readonly attribute (Event or undefined) event; // legacy
};

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
Window includes GlobalEventHandlers;

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
Window includes WindowEventHandlers;

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
Window includes WindowOrWorkerGlobalScope;

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
Window includes AnimationFrameProvider;

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
Window includes WindowSessionStorage;

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
Window includes WindowLocalStorage;

// Source: HTML Standard (https://html.spec.whatwg.org/multipage/)
partial interface Window {
  undefined captureEvents();
  undefined releaseEvents();

  [Replaceable, SameObject] readonly attribute External external;
};

// Source: App History API (https://wicg.github.io/app-history/)
partial interface Window {
  readonly attribute AppHistory appHistory;
};

// Source: Attribution Reporting (https://wicg.github.io/conversion-measurement-api/)
[SecureContext]
partial interface Window {
  readonly attribute AttributionReporting attributionReporting;
};

// Source: Cookie Store API (https://wicg.github.io/cookie-store/)
[SecureContext]
partial interface Window {
  [SameObject] readonly attribute CookieStore cookieStore;
};

// Source: File System Access (https://wicg.github.io/file-system-access/)
[SecureContext]
partial interface Window {
    Promise<sequence<FileSystemFileHandle>> showOpenFilePicker(optional OpenFilePickerOptions options = {});
    Promise<FileSystemFileHandle> showSaveFilePicker(optional SaveFilePickerOptions options = {});
    Promise<FileSystemDirectoryHandle> showDirectoryPicker(optional DirectoryPickerOptions options = {});
};

// Source: Portals (https://wicg.github.io/portals/)
partial interface Window {
    readonly attribute PortalHost? portalHost;
};

// Source: Web Speech API (https://wicg.github.io/speech-api/)
partial interface Window {
    [SameObject] readonly attribute SpeechSynthesis speechSynthesis;
};

// Source: Visual Viewport API (https://wicg.github.io/visual-viewport/)
partial interface Window {
  [SameObject, Replaceable] readonly attribute VisualViewport visualViewport;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    [SecureContext] attribute EventHandler ondeviceorientation;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    [SecureContext] attribute EventHandler ondeviceorientationabsolute;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    attribute EventHandler oncompassneedscalibration;
};

// Source: DeviceOrientation Event Specification (https://www.w3.org/TR/orientation-event/)
partial interface Window {
    [SecureContext] attribute EventHandler ondevicemotion;
};

// Source: Cooperative Scheduling of Background Tasks (https://www.w3.org/TR/requestidlecallback/)
partial interface Window {
  unsigned long requestIdleCallback(IdleRequestCallback callback, optional IdleRequestOptions options = {});
  undefined cancelIdleCallback(unsigned long handle);
};

// Source: Selection API (https://www.w3.org/TR/selection-api/)
partial interface Window {
  Selection? getSelection();
};